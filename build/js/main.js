!function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){"use strict";var t=window.Slick||{};t=function(){function t(t,o){var n,s=this;s.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:e(t),appendDots:e(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(t,i){return e('<button type="button" />').text(i+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},s.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},e.extend(s,s.initials),s.activeBreakpoint=null,s.animType=null,s.animProp=null,s.breakpoints=[],s.breakpointSettings=[],s.cssTransitions=!1,s.focussed=!1,s.interrupted=!1,s.hidden="hidden",s.paused=!0,s.positionProp=null,s.respondTo=null,s.rowCount=1,s.shouldClick=!0,s.$slider=e(t),s.$slidesCache=null,s.transformType=null,s.transitionType=null,s.visibilityChange="visibilitychange",s.windowWidth=0,s.windowTimer=null,n=e(t).data("slick")||{},s.options=e.extend({},s.defaults,o,n),s.currentSlide=s.options.initialSlide,s.originalSettings=s.options,"undefined"!=typeof document.mozHidden?(s.hidden="mozHidden",s.visibilityChange="mozvisibilitychange"):"undefined"!=typeof document.webkitHidden&&(s.hidden="webkitHidden",s.visibilityChange="webkitvisibilitychange"),s.autoPlay=e.proxy(s.autoPlay,s),s.autoPlayClear=e.proxy(s.autoPlayClear,s),s.autoPlayIterator=e.proxy(s.autoPlayIterator,s),s.changeSlide=e.proxy(s.changeSlide,s),s.clickHandler=e.proxy(s.clickHandler,s),s.selectHandler=e.proxy(s.selectHandler,s),s.setPosition=e.proxy(s.setPosition,s),s.swipeHandler=e.proxy(s.swipeHandler,s),s.dragHandler=e.proxy(s.dragHandler,s),s.keyHandler=e.proxy(s.keyHandler,s),s.instanceUid=i++,s.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,s.registerBreakpoints(),s.init(!0)}var i=0;return t}(),t.prototype.activateADA=function(){var e=this;e.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},t.prototype.addSlide=t.prototype.slickAdd=function(t,i,o){var n=this;if("boolean"==typeof i)o=i,i=null;else if(i<0||i>=n.slideCount)return!1;n.unload(),"number"==typeof i?0===i&&0===n.$slides.length?e(t).appendTo(n.$slideTrack):o?e(t).insertBefore(n.$slides.eq(i)):e(t).insertAfter(n.$slides.eq(i)):o===!0?e(t).prependTo(n.$slideTrack):e(t).appendTo(n.$slideTrack),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slides.each(function(t,i){e(i).attr("data-slick-index",t)}),n.$slidesCache=n.$slides,n.reinit()},t.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&e.options.adaptiveHeight===!0&&e.options.vertical===!1){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},t.prototype.animateSlide=function(t,i){var o={},n=this;n.animateHeight(),n.options.rtl===!0&&n.options.vertical===!1&&(t=-t),n.transformsEnabled===!1?n.options.vertical===!1?n.$slideTrack.animate({left:t},n.options.speed,n.options.easing,i):n.$slideTrack.animate({top:t},n.options.speed,n.options.easing,i):n.cssTransitions===!1?(n.options.rtl===!0&&(n.currentLeft=-n.currentLeft),e({animStart:n.currentLeft}).animate({animStart:t},{duration:n.options.speed,easing:n.options.easing,step:function(e){e=Math.ceil(e),n.options.vertical===!1?(o[n.animType]="translate("+e+"px, 0px)",n.$slideTrack.css(o)):(o[n.animType]="translate(0px,"+e+"px)",n.$slideTrack.css(o))},complete:function(){i&&i.call()}})):(n.applyTransition(),t=Math.ceil(t),n.options.vertical===!1?o[n.animType]="translate3d("+t+"px, 0px, 0px)":o[n.animType]="translate3d(0px,"+t+"px, 0px)",n.$slideTrack.css(o),i&&setTimeout(function(){n.disableTransition(),i.call()},n.options.speed))},t.prototype.getNavTarget=function(){var t=this,i=t.options.asNavFor;return i&&null!==i&&(i=e(i).not(t.$slider)),i},t.prototype.asNavFor=function(t){var i=this,o=i.getNavTarget();null!==o&&"object"==typeof o&&o.each(function(){var i=e(this).slick("getSlick");i.unslicked||i.slideHandler(t,!0)})},t.prototype.applyTransition=function(e){var t=this,i={};t.options.fade===!1?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,t.options.fade===!1?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},t.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},t.prototype.autoPlayClear=function(){var e=this;e.autoPlayTimer&&clearInterval(e.autoPlayTimer)},t.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(e.options.infinite===!1&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1===0&&(e.direction=1))),e.slideHandler(t))},t.prototype.buildArrows=function(){var t=this;t.options.arrows===!0&&(t.$prevArrow=e(t.options.prevArrow).addClass("slick-arrow"),t.$nextArrow=e(t.options.nextArrow).addClass("slick-arrow"),t.slideCount>t.options.slidesToShow?(t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.prependTo(t.options.appendArrows),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.appendTo(t.options.appendArrows),t.options.infinite!==!0&&t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},t.prototype.buildDots=function(){var t,i,o=this;if(o.options.dots===!0){for(o.$slider.addClass("slick-dotted"),i=e("<ul />").addClass(o.options.dotsClass),t=0;t<=o.getDotCount();t+=1)i.append(e("<li />").append(o.options.customPaging.call(this,o,t)));o.$dots=i.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},t.prototype.buildOut=function(){var t=this;t.$slides=t.$slider.children(t.options.slide+":not(.slick-cloned)").addClass("slick-slide"),t.slideCount=t.$slides.length,t.$slides.each(function(t,i){e(i).attr("data-slick-index",t).data("originalStyling",e(i).attr("style")||"")}),t.$slider.addClass("slick-slider"),t.$slideTrack=0===t.slideCount?e('<div class="slick-track"/>').appendTo(t.$slider):t.$slides.wrapAll('<div class="slick-track"/>').parent(),t.$list=t.$slideTrack.wrap('<div class="slick-list"/>').parent(),t.$slideTrack.css("opacity",0),t.options.centerMode!==!0&&t.options.swipeToSlide!==!0||(t.options.slidesToScroll=1),e("img[data-lazy]",t.$slider).not("[src]").addClass("slick-loading"),t.setupInfinite(),t.buildArrows(),t.buildDots(),t.updateDots(),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.options.draggable===!0&&t.$list.addClass("draggable")},t.prototype.buildRows=function(){var e,t,i,o,n,s,r,a=this;if(o=document.createDocumentFragment(),s=a.$slider.children(),a.options.rows>1){for(r=a.options.slidesPerRow*a.options.rows,n=Math.ceil(s.length/r),e=0;e<n;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*r+(t*a.options.slidesPerRow+i);s.get(c)&&d.appendChild(s.get(c))}l.appendChild(d)}o.appendChild(l)}a.$slider.empty().append(o),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},t.prototype.checkResponsive=function(t,i){var o,n,s,r=this,a=!1,l=r.$slider.width(),d=window.innerWidth||e(window).width();if("window"===r.respondTo?s=d:"slider"===r.respondTo?s=l:"min"===r.respondTo&&(s=Math.min(d,l)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){n=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(r.originalSettings.mobileFirst===!1?s<r.breakpoints[o]&&(n=r.breakpoints[o]):s>r.breakpoints[o]&&(n=r.breakpoints[o]));null!==n?null!==r.activeBreakpoint?(n!==r.activeBreakpoint||i)&&(r.activeBreakpoint=n,"unslick"===r.breakpointSettings[n]?r.unslick(n):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[n]),t===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(t)),a=n):(r.activeBreakpoint=n,"unslick"===r.breakpointSettings[n]?r.unslick(n):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[n]),t===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(t)),a=n):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,t===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(t),a=n),t||a===!1||r.$slider.trigger("breakpoint",[r,a])}},t.prototype.changeSlide=function(t,i){var o,n,s,r=this,a=e(t.currentTarget);switch(a.is("a")&&t.preventDefault(),a.is("li")||(a=a.closest("li")),s=r.slideCount%r.options.slidesToScroll!==0,o=s?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,t.data.message){case"previous":n=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-n,!1,i);break;case"next":n=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+n,!1,i);break;case"index":var l=0===t.data.index?0:t.data.index||a.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(l),!1,i),a.children().trigger("focus");break;default:return}},t.prototype.checkNavigable=function(e){var t,i,o=this;if(t=o.getNavigableIndexes(),i=0,e>t[t.length-1])e=t[t.length-1];else for(var n in t){if(e<t[n]){e=i;break}i=t[n]}return e},t.prototype.cleanUpEvents=function(){var t=this;t.options.dots&&null!==t.$dots&&(e("li",t.$dots).off("click.slick",t.changeSlide).off("mouseenter.slick",e.proxy(t.interrupt,t,!0)).off("mouseleave.slick",e.proxy(t.interrupt,t,!1)),t.options.accessibility===!0&&t.$dots.off("keydown.slick",t.keyHandler)),t.$slider.off("focus.slick blur.slick"),t.options.arrows===!0&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow&&t.$prevArrow.off("click.slick",t.changeSlide),t.$nextArrow&&t.$nextArrow.off("click.slick",t.changeSlide),t.options.accessibility===!0&&(t.$prevArrow&&t.$prevArrow.off("keydown.slick",t.keyHandler),t.$nextArrow&&t.$nextArrow.off("keydown.slick",t.keyHandler))),t.$list.off("touchstart.slick mousedown.slick",t.swipeHandler),t.$list.off("touchmove.slick mousemove.slick",t.swipeHandler),t.$list.off("touchend.slick mouseup.slick",t.swipeHandler),t.$list.off("touchcancel.slick mouseleave.slick",t.swipeHandler),t.$list.off("click.slick",t.clickHandler),e(document).off(t.visibilityChange,t.visibility),t.cleanUpSlideEvents(),t.options.accessibility===!0&&t.$list.off("keydown.slick",t.keyHandler),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().off("click.slick",t.selectHandler),e(window).off("orientationchange.slick.slick-"+t.instanceUid,t.orientationChange),e(window).off("resize.slick.slick-"+t.instanceUid,t.resize),e("[draggable!=true]",t.$slideTrack).off("dragstart",t.preventDefault),e(window).off("load.slick.slick-"+t.instanceUid,t.setPosition)},t.prototype.cleanUpSlideEvents=function(){var t=this;t.$list.off("mouseenter.slick",e.proxy(t.interrupt,t,!0)),t.$list.off("mouseleave.slick",e.proxy(t.interrupt,t,!1))},t.prototype.cleanUpRows=function(){var e,t=this;t.options.rows>1&&(e=t.$slides.children().children(),e.removeAttr("style"),t.$slider.empty().append(e))},t.prototype.clickHandler=function(e){var t=this;t.shouldClick===!1&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},t.prototype.destroy=function(t){var i=this;i.autoPlayClear(),i.touchObject={},i.cleanUpEvents(),e(".slick-cloned",i.$slider).detach(),i.$dots&&i.$dots.remove(),i.$prevArrow&&i.$prevArrow.length&&(i.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.remove()),i.$nextArrow&&i.$nextArrow.length&&(i.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.remove()),i.$slides&&(i.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){e(this).attr("style",e(this).data("originalStyling"))}),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.detach(),i.$list.detach(),i.$slider.append(i.$slides)),i.cleanUpRows(),i.$slider.removeClass("slick-slider"),i.$slider.removeClass("slick-initialized"),i.$slider.removeClass("slick-dotted"),i.unslicked=!0,t||i.$slider.trigger("destroy",[i])},t.prototype.disableTransition=function(e){var t=this,i={};i[t.transitionType]="",t.options.fade===!1?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},t.prototype.fadeSlide=function(e,t){var i=this;i.cssTransitions===!1?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},t.prototype.fadeSlideOut=function(e){var t=this;t.cssTransitions===!1?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},t.prototype.filterSlides=t.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},t.prototype.focusHandler=function(){var t=this;t.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(i){i.stopImmediatePropagation();var o=e(this);setTimeout(function(){t.options.pauseOnFocus&&(t.focussed=o.is(":focus"),t.autoPlay())},0)})},t.prototype.getCurrent=t.prototype.slickCurrentSlide=function(){var e=this;return e.currentSlide},t.prototype.getDotCount=function(){var e=this,t=0,i=0,o=0;if(e.options.infinite===!0)if(e.slideCount<=e.options.slidesToShow)++o;else for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(e.options.centerMode===!0)o=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},t.prototype.getLeft=function(e){var t,i,o,n,s=this,r=0;return s.slideOffset=0,i=s.$slides.first().outerHeight(!0),s.options.infinite===!0?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,n=-1,s.options.vertical===!0&&s.options.centerMode===!0&&(2===s.options.slidesToShow?n=-1.5:1===s.options.slidesToShow&&(n=-2)),r=i*s.options.slidesToShow*n),s.slideCount%s.options.slidesToScroll!==0&&e+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(e>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(e-s.slideCount))*s.slideWidth*-1,r=(s.options.slidesToShow-(e-s.slideCount))*i*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,r=s.slideCount%s.options.slidesToScroll*i*-1))):e+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(e+s.options.slidesToShow-s.slideCount)*s.slideWidth,r=(e+s.options.slidesToShow-s.slideCount)*i),s.slideCount<=s.options.slidesToShow&&(s.slideOffset=0,r=0),s.options.centerMode===!0&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:s.options.centerMode===!0&&s.options.infinite===!0?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:s.options.centerMode===!0&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),t=s.options.vertical===!1?e*s.slideWidth*-1+s.slideOffset:e*i*-1+r,s.options.variableWidth===!0&&(o=s.slideCount<=s.options.slidesToShow||s.options.infinite===!1?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow),t=s.options.rtl===!0?o[0]?(s.$slideTrack.width()-o[0].offsetLeft-o.width())*-1:0:o[0]?o[0].offsetLeft*-1:0,s.options.centerMode===!0&&(o=s.slideCount<=s.options.slidesToShow||s.options.infinite===!1?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow+1),t=s.options.rtl===!0?o[0]?(s.$slideTrack.width()-o[0].offsetLeft-o.width())*-1:0:o[0]?o[0].offsetLeft*-1:0,t+=(s.$list.width()-o.outerWidth())/2)),t},t.prototype.getOption=t.prototype.slickGetOption=function(e){var t=this;return t.options[e]},t.prototype.getNavigableIndexes=function(){var e,t=this,i=0,o=0,n=[];for(t.options.infinite===!1?e=t.slideCount:(i=t.options.slidesToScroll*-1,o=t.options.slidesToScroll*-1,e=2*t.slideCount);i<e;)n.push(i),i=o+t.options.slidesToScroll,o+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return n},t.prototype.getSlick=function(){return this},t.prototype.getSlideCount=function(){var t,i,o,n=this;return o=n.options.centerMode===!0?n.slideWidth*Math.floor(n.options.slidesToShow/2):0,n.options.swipeToSlide===!0?(n.$slideTrack.find(".slick-slide").each(function(t,s){if(s.offsetLeft-o+e(s).outerWidth()/2>n.swipeLeft*-1)return i=s,!1}),t=Math.abs(e(i).attr("data-slick-index")-n.currentSlide)||1):n.options.slidesToScroll},t.prototype.goTo=t.prototype.slickGoTo=function(e,t){var i=this;i.changeSlide({data:{message:"index",index:parseInt(e)}},t)},t.prototype.init=function(t){var i=this;e(i.$slider).hasClass("slick-initialized")||(e(i.$slider).addClass("slick-initialized"),i.buildRows(),i.buildOut(),i.setProps(),i.startLoad(),i.loadSlider(),i.initializeEvents(),i.updateArrows(),i.updateDots(),i.checkResponsive(!0),i.focusHandler()),t&&i.$slider.trigger("init",[i]),i.options.accessibility===!0&&i.initADA(),i.options.autoplay&&(i.paused=!1,i.autoPlay())},t.prototype.initADA=function(){var t=this,i=Math.ceil(t.slideCount/t.options.slidesToShow),o=t.getNavigableIndexes().filter(function(e){return e>=0&&e<t.slideCount});t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==t.$dots&&(t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function(i){var n=o.indexOf(i);e(this).attr({role:"tabpanel",id:"slick-slide"+t.instanceUid+i,tabindex:-1}),n!==-1&&e(this).attr({"aria-describedby":"slick-slide-control"+t.instanceUid+n})}),t.$dots.attr("role","tablist").find("li").each(function(n){var s=o[n];e(this).attr({role:"presentation"}),e(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+t.instanceUid+n,"aria-controls":"slick-slide"+t.instanceUid+s,"aria-label":n+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(t.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var n=t.currentSlide,s=n+t.options.slidesToShow;n<s;n++)t.$slides.eq(n).attr("tabindex",0);t.activateADA()},t.prototype.initArrowEvents=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),e.options.accessibility===!0&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},t.prototype.initDotEvents=function(){var t=this;t.options.dots===!0&&(e("li",t.$dots).on("click.slick",{message:"index"},t.changeSlide),t.options.accessibility===!0&&t.$dots.on("keydown.slick",t.keyHandler)),t.options.dots===!0&&t.options.pauseOnDotsHover===!0&&e("li",t.$dots).on("mouseenter.slick",e.proxy(t.interrupt,t,!0)).on("mouseleave.slick",e.proxy(t.interrupt,t,!1))},t.prototype.initSlideEvents=function(){var t=this;t.options.pauseOnHover&&(t.$list.on("mouseenter.slick",e.proxy(t.interrupt,t,!0)),t.$list.on("mouseleave.slick",e.proxy(t.interrupt,t,!1)))},t.prototype.initializeEvents=function(){var t=this;t.initArrowEvents(),t.initDotEvents(),t.initSlideEvents(),t.$list.on("touchstart.slick mousedown.slick",{action:"start"},t.swipeHandler),t.$list.on("touchmove.slick mousemove.slick",{action:"move"},t.swipeHandler),t.$list.on("touchend.slick mouseup.slick",{action:"end"},t.swipeHandler),t.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},t.swipeHandler),t.$list.on("click.slick",t.clickHandler),e(document).on(t.visibilityChange,e.proxy(t.visibility,t)),t.options.accessibility===!0&&t.$list.on("keydown.slick",t.keyHandler),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),e(window).on("orientationchange.slick.slick-"+t.instanceUid,e.proxy(t.orientationChange,t)),e(window).on("resize.slick.slick-"+t.instanceUid,e.proxy(t.resize,t)),e("[draggable!=true]",t.$slideTrack).on("dragstart",t.preventDefault),e(window).on("load.slick.slick-"+t.instanceUid,t.setPosition),e(t.setPosition)},t.prototype.initUI=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},t.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&t.options.accessibility===!0?t.changeSlide({data:{message:t.options.rtl===!0?"next":"previous"}}):39===e.keyCode&&t.options.accessibility===!0&&t.changeSlide({data:{message:t.options.rtl===!0?"previous":"next"}}))},t.prototype.lazyLoad=function(){function t(t){e("img[data-lazy]",t).each(function(){var t=e(this),i=e(this).attr("data-lazy"),o=e(this).attr("data-srcset"),n=e(this).attr("data-sizes")||r.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){t.animate({opacity:0},100,function(){o&&(t.attr("srcset",o),n&&t.attr("sizes",n)),t.attr("src",i).animate({opacity:1},200,function(){t.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),r.$slider.trigger("lazyLoaded",[r,t,i])})},s.onerror=function(){t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i])},s.src=i})}var i,o,n,s,r=this;if(r.options.centerMode===!0?r.options.infinite===!0?(n=r.currentSlide+(r.options.slidesToShow/2+1),s=n+r.options.slidesToShow+2):(n=Math.max(0,r.currentSlide-(r.options.slidesToShow/2+1)),s=2+(r.options.slidesToShow/2+1)+r.currentSlide):(n=r.options.infinite?r.options.slidesToShow+r.currentSlide:r.currentSlide,s=Math.ceil(n+r.options.slidesToShow),r.options.fade===!0&&(n>0&&n--,s<=r.slideCount&&s++)),i=r.$slider.find(".slick-slide").slice(n,s),"anticipated"===r.options.lazyLoad)for(var a=n-1,l=s,d=r.$slider.find(".slick-slide"),c=0;c<r.options.slidesToScroll;c++)a<0&&(a=r.slideCount-1),i=i.add(d.eq(a)),i=i.add(d.eq(l)),a--,l++;t(i),r.slideCount<=r.options.slidesToShow?(o=r.$slider.find(".slick-slide"),t(o)):r.currentSlide>=r.slideCount-r.options.slidesToShow?(o=r.$slider.find(".slick-cloned").slice(0,r.options.slidesToShow),t(o)):0===r.currentSlide&&(o=r.$slider.find(".slick-cloned").slice(r.options.slidesToShow*-1),t(o))},t.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},t.prototype.next=t.prototype.slickNext=function(){var e=this;e.changeSlide({data:{message:"next"}})},t.prototype.orientationChange=function(){var e=this;e.checkResponsive(),e.setPosition()},t.prototype.pause=t.prototype.slickPause=function(){var e=this;e.autoPlayClear(),e.paused=!0},t.prototype.play=t.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},t.prototype.postSlide=function(t){var i=this;if(!i.unslicked&&(i.$slider.trigger("afterChange",[i,t]),i.animating=!1,i.slideCount>i.options.slidesToShow&&i.setPosition(),i.swipeLeft=null,i.options.autoplay&&i.autoPlay(),i.options.accessibility===!0&&(i.initADA(),i.options.focusOnChange))){var o=e(i.$slides.get(i.currentSlide));o.attr("tabindex",0).focus()}},t.prototype.prev=t.prototype.slickPrev=function(){var e=this;e.changeSlide({data:{message:"previous"}})},t.prototype.preventDefault=function(e){e.preventDefault()},t.prototype.progressiveLazyLoad=function(t){t=t||1;var i,o,n,s,r,a=this,l=e("img[data-lazy]",a.$slider);l.length?(i=l.first(),o=i.attr("data-lazy"),n=i.attr("data-srcset"),s=i.attr("data-sizes")||a.$slider.attr("data-sizes"),r=document.createElement("img"),r.onload=function(){n&&(i.attr("srcset",n),s&&i.attr("sizes",s)),i.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),a.options.adaptiveHeight===!0&&a.setPosition(),a.$slider.trigger("lazyLoaded",[a,i,o]),a.progressiveLazyLoad()},r.onerror=function(){t<3?setTimeout(function(){a.progressiveLazyLoad(t+1)},500):(i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,i,o]),a.progressiveLazyLoad())},r.src=o):a.$slider.trigger("allImagesLoaded",[a])},t.prototype.refresh=function(t){var i,o,n=this;o=n.slideCount-n.options.slidesToShow,!n.options.infinite&&n.currentSlide>o&&(n.currentSlide=o),n.slideCount<=n.options.slidesToShow&&(n.currentSlide=0),i=n.currentSlide,n.destroy(!0),e.extend(n,n.initials,{currentSlide:i}),n.init(),t||n.changeSlide({data:{message:"index",index:i}},!1)},t.prototype.registerBreakpoints=function(){var t,i,o,n=this,s=n.options.responsive||null;if("array"===e.type(s)&&s.length){n.respondTo=n.options.respondTo||"window";for(t in s)if(o=n.breakpoints.length-1,s.hasOwnProperty(t)){for(i=s[t].breakpoint;o>=0;)n.breakpoints[o]&&n.breakpoints[o]===i&&n.breakpoints.splice(o,1),o--;n.breakpoints.push(i),n.breakpointSettings[i]=s[t].settings}n.breakpoints.sort(function(e,t){return n.options.mobileFirst?e-t:t-e})}},t.prototype.reinit=function(){var t=this;t.$slides=t.$slideTrack.children(t.options.slide).addClass("slick-slide"),t.slideCount=t.$slides.length,t.currentSlide>=t.slideCount&&0!==t.currentSlide&&(t.currentSlide=t.currentSlide-t.options.slidesToScroll),t.slideCount<=t.options.slidesToShow&&(t.currentSlide=0),t.registerBreakpoints(),t.setProps(),t.setupInfinite(),t.buildArrows(),t.updateArrows(),t.initArrowEvents(),t.buildDots(),t.updateDots(),t.initDotEvents(),t.cleanUpSlideEvents(),t.initSlideEvents(),t.checkResponsive(!1,!0),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.setPosition(),t.focusHandler(),t.paused=!t.options.autoplay,t.autoPlay(),t.$slider.trigger("reInit",[t])},t.prototype.resize=function(){var t=this;e(window).width()!==t.windowWidth&&(clearTimeout(t.windowDelay),t.windowDelay=window.setTimeout(function(){t.windowWidth=e(window).width(),t.checkResponsive(),t.unslicked||t.setPosition()},50))},t.prototype.removeSlide=t.prototype.slickRemove=function(e,t,i){var o=this;return"boolean"==typeof e?(t=e,e=t===!0?0:o.slideCount-1):e=t===!0?--e:e,!(o.slideCount<1||e<0||e>o.slideCount-1)&&(o.unload(),i===!0?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,void o.reinit())},t.prototype.setCSS=function(e){var t,i,o=this,n={};o.options.rtl===!0&&(e=-e),t="left"==o.positionProp?Math.ceil(e)+"px":"0px",i="top"==o.positionProp?Math.ceil(e)+"px":"0px",n[o.positionProp]=e,o.transformsEnabled===!1?o.$slideTrack.css(n):(n={},o.cssTransitions===!1?(n[o.animType]="translate("+t+", "+i+")",o.$slideTrack.css(n)):(n[o.animType]="translate3d("+t+", "+i+", 0px)",o.$slideTrack.css(n)))},t.prototype.setDimensions=function(){var e=this;e.options.vertical===!1?e.options.centerMode===!0&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),e.options.centerMode===!0&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),e.options.vertical===!1&&e.options.variableWidth===!1?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):e.options.variableWidth===!0?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();e.options.variableWidth===!1&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},t.prototype.setFade=function(){var t,i=this;i.$slides.each(function(o,n){t=i.slideWidth*o*-1,i.options.rtl===!0?e(n).css({position:"relative",right:t,top:0,zIndex:i.options.zIndex-2,opacity:0}):e(n).css({position:"relative",left:t,top:0,zIndex:i.options.zIndex-2,opacity:0})}),i.$slides.eq(i.currentSlide).css({zIndex:i.options.zIndex-1,opacity:1})},t.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&e.options.adaptiveHeight===!0&&e.options.vertical===!1){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},t.prototype.setOption=t.prototype.slickSetOption=function(){var t,i,o,n,s,r=this,a=!1;if("object"===e.type(arguments[0])?(o=arguments[0],a=arguments[1],s="multiple"):"string"===e.type(arguments[0])&&(o=arguments[0],n=arguments[1],a=arguments[2],"responsive"===arguments[0]&&"array"===e.type(arguments[1])?s="responsive":"undefined"!=typeof arguments[1]&&(s="single")),"single"===s)r.options[o]=n;else if("multiple"===s)e.each(o,function(e,t){r.options[e]=t});else if("responsive"===s)for(i in n)if("array"!==e.type(r.options.responsive))r.options.responsive=[n[i]];else{for(t=r.options.responsive.length-1;t>=0;)r.options.responsive[t].breakpoint===n[i].breakpoint&&r.options.responsive.splice(t,1),t--;r.options.responsive.push(n[i])}a&&(r.unload(),r.reinit())},t.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),e.options.fade===!1?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},t.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=e.options.vertical===!0?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||e.options.useCSS===!0&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),
void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&e.animType!==!1&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&e.animType!==!1},t.prototype.setSlideClasses=function(e){var t,i,o,n,s=this;if(i=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),s.$slides.eq(e).addClass("slick-current"),s.options.centerMode===!0){var r=s.options.slidesToShow%2===0?1:0;t=Math.floor(s.options.slidesToShow/2),s.options.infinite===!0&&(e>=t&&e<=s.slideCount-1-t?s.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(o=s.options.slidesToShow+e,i.slice(o-t+1+r,o+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-s.options.slidesToShow).addClass("slick-center"):e===s.slideCount-1&&i.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(e).addClass("slick-center")}else e>=0&&e<=s.slideCount-s.options.slidesToShow?s.$slides.slice(e,e+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=s.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(n=s.slideCount%s.options.slidesToShow,o=s.options.infinite===!0?s.options.slidesToShow+e:e,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-e<s.options.slidesToShow?i.slice(o-(s.options.slidesToShow-n),o+n).addClass("slick-active").attr("aria-hidden","false"):i.slice(o,o+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},t.prototype.setupInfinite=function(){var t,i,o,n=this;if(n.options.fade===!0&&(n.options.centerMode=!1),n.options.infinite===!0&&n.options.fade===!1&&(i=null,n.slideCount>n.options.slidesToShow)){for(o=n.options.centerMode===!0?n.options.slidesToShow+1:n.options.slidesToShow,t=n.slideCount;t>n.slideCount-o;t-=1)i=t-1,e(n.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i-n.slideCount).prependTo(n.$slideTrack).addClass("slick-cloned");for(t=0;t<o+n.slideCount;t+=1)i=t,e(n.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i+n.slideCount).appendTo(n.$slideTrack).addClass("slick-cloned");n.$slideTrack.find(".slick-cloned").find("[id]").each(function(){e(this).attr("id","")})}},t.prototype.interrupt=function(e){var t=this;e||t.autoPlay(),t.interrupted=e},t.prototype.selectHandler=function(t){var i=this,o=e(t.target).is(".slick-slide")?e(t.target):e(t.target).parents(".slick-slide"),n=parseInt(o.attr("data-slick-index"));return n||(n=0),i.slideCount<=i.options.slidesToShow?void i.slideHandler(n,!1,!0):void i.slideHandler(n)},t.prototype.slideHandler=function(e,t,i){var o,n,s,r,a,l=null,d=this;if(t=t||!1,!(d.animating===!0&&d.options.waitForAnimate===!0||d.options.fade===!0&&d.currentSlide===e))return t===!1&&d.asNavFor(e),o=e,l=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,d.options.infinite===!1&&d.options.centerMode===!1&&(e<0||e>d.getDotCount()*d.options.slidesToScroll)?void(d.options.fade===!1&&(o=d.currentSlide,i!==!0?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o))):d.options.infinite===!1&&d.options.centerMode===!0&&(e<0||e>d.slideCount-d.options.slidesToScroll)?void(d.options.fade===!1&&(o=d.currentSlide,i!==!0?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o))):(d.options.autoplay&&clearInterval(d.autoPlayTimer),n=o<0?d.slideCount%d.options.slidesToScroll!==0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!==0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,n]),s=d.currentSlide,d.currentSlide=n,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(a=d.getNavTarget(),a=a.slick("getSlick"),a.slideCount<=a.options.slidesToShow&&a.setSlideClasses(d.currentSlide)),d.updateDots(),d.updateArrows(),d.options.fade===!0?(i!==!0?(d.fadeSlideOut(s),d.fadeSlide(n,function(){d.postSlide(n)})):d.postSlide(n),void d.animateHeight()):void(i!==!0?d.animateSlide(l,function(){d.postSlide(n)}):d.postSlide(n)))},t.prototype.startLoad=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},t.prototype.swipeDirection=function(){var e,t,i,o,n=this;return e=n.touchObject.startX-n.touchObject.curX,t=n.touchObject.startY-n.touchObject.curY,i=Math.atan2(t,e),o=Math.round(180*i/Math.PI),o<0&&(o=360-Math.abs(o)),o<=45&&o>=0?n.options.rtl===!1?"left":"right":o<=360&&o>=315?n.options.rtl===!1?"left":"right":o>=135&&o<=225?n.options.rtl===!1?"right":"left":n.options.verticalSwiping===!0?o>=35&&o<=135?"down":"up":"vertical"},t.prototype.swipeEnd=function(e){var t,i,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(o.touchObject.edgeHit===!0&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(i=o.swipeDirection()){case"left":case"down":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=i&&(o.slideHandler(t),o.touchObject={},o.$slider.trigger("swipe",[o,i]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},t.prototype.swipeHandler=function(e){var t=this;if(!(t.options.swipe===!1||"ontouchend"in document&&t.options.swipe===!1||t.options.draggable===!1&&e.type.indexOf("mouse")!==-1))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,t.options.verticalSwiping===!0&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},t.prototype.swipeMove=function(e){var t,i,o,n,s,r,a=this;return s=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||s&&1!==s.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==s?s[0].pageX:e.clientX,a.touchObject.curY=void 0!==s?s[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&r>4?(a.scrolling=!0,!1):(a.options.verticalSwiping===!0&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&a.touchObject.swipeLength>4&&(a.swiping=!0,e.preventDefault()),n=(a.options.rtl===!1?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),a.options.verticalSwiping===!0&&(n=a.touchObject.curY>a.touchObject.startY?1:-1),o=a.touchObject.swipeLength,a.touchObject.edgeHit=!1,a.options.infinite===!1&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(o=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),a.options.vertical===!1?a.swipeLeft=t+o*n:a.swipeLeft=t+o*(a.$list.height()/a.listWidth)*n,a.options.verticalSwiping===!0&&(a.swipeLeft=t+o*n),a.options.fade!==!0&&a.options.touchMove!==!1&&(a.animating===!0?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},t.prototype.swipeStart=function(e){var t,i=this;return i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow?(i.touchObject={},!1):(void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,void(i.dragging=!0))},t.prototype.unfilterSlides=t.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},t.prototype.unload=function(){var t=this;e(".slick-cloned",t.$slider).remove(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove(),t.$nextArrow&&t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove(),t.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},t.prototype.unslick=function(e){var t=this;t.$slider.trigger("unslick",[t,e]),t.destroy()},t.prototype.updateArrows=function(){var e,t=this;e=Math.floor(t.options.slidesToShow/2),t.options.arrows===!0&&t.slideCount>t.options.slidesToShow&&!t.options.infinite&&(t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===t.currentSlide?(t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-t.options.slidesToShow&&t.options.centerMode===!1?(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-1&&t.options.centerMode===!0&&(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},t.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},t.prototype.visibility=function(){var e=this;e.options.autoplay&&(document[e.hidden]?e.interrupted=!0:e.interrupted=!1)},e.fn.slick=function(){var e,i,o=this,n=arguments[0],s=Array.prototype.slice.call(arguments,1),r=o.length;for(e=0;e<r;e++)if("object"==typeof n||"undefined"==typeof n?o[e].slick=new t(o[e],n):i=o[e].slick[n].apply(o[e].slick,s),"undefined"!=typeof i)return i;return o}});var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){if(i.get||i.set)throw new TypeError("ES3 does not support getters and setters.");e!=Array.prototype&&e!=Object.prototype&&(e[t]=i.value)},$jscomp.getGlobal=function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.SYMBOL_PREFIX="jscomp_symbol_",$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){},$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)},$jscomp.symbolCounter_=0,$jscomp.Symbol=function(e){return $jscomp.SYMBOL_PREFIX+(e||"")+$jscomp.symbolCounter_++},$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var e=$jscomp.global.Symbol.iterator;e||(e=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator")),"function"!=typeof Array.prototype[e]&&$jscomp.defineProperty(Array.prototype,e,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}}),$jscomp.initSymbolIterator=function(){}},$jscomp.arrayIterator=function(e){var t=0;return $jscomp.iteratorPrototype(function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}})},$jscomp.iteratorPrototype=function(e){return $jscomp.initSymbolIterator(),e={next:e},e[$jscomp.global.Symbol.iterator]=function(){return this},e},$jscomp.array=$jscomp.array||{},$jscomp.iteratorFromArray=function(e,t){$jscomp.initSymbolIterator(),e instanceof String&&(e+="");var i=0,o={next:function(){if(i<e.length){var n=i++;return{value:t(n,e[n]),done:!1}}return o.next=function(){return{done:!0,value:void 0}},o.next()}};return o[Symbol.iterator]=function(){return o},o},$jscomp.polyfill=function(e,t,i,o){if(t){for(i=$jscomp.global,e=e.split("."),o=0;o<e.length-1;o++){var n=e[o];n in i||(i[n]={}),i=i[n]}e=e[e.length-1],o=i[e],t=t(o),t!=o&&null!=t&&$jscomp.defineProperty(i,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill("Array.prototype.keys",function(e){return e?e:function(){return $jscomp.iteratorFromArray(this,function(e){return e})}},"es6-impl","es3");var $jscomp$this=this;!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof module&&module.exports?module.exports=t():e.anime=t()}(this,function(){function e(e){if(!D.col(e))try{return document.querySelectorAll(e)}catch(t){}}function t(e,t){for(var i=e.length,o=2<=arguments.length?arguments[1]:void 0,n=[],s=0;s<i;s++)if(s in e){var r=e[s];t.call(o,r,s,e)&&n.push(r)}return n}function i(e){return e.reduce(function(e,t){return e.concat(D.arr(t)?i(t):t)},[])}function o(t){return D.arr(t)?t:(D.str(t)&&(t=e(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function n(e,t){return e.some(function(e){return e===t})}function s(e){var t,i={};for(t in e)i[t]=e[t];return i}function r(e,t){var i,o=s(e);for(i in e)o[i]=t.hasOwnProperty(i)?t[i]:e[i];return o}function a(e,t){var i,o=s(e);for(i in t)o[i]=D.und(e[i])?t[i]:e[i];return o}function l(e){e=e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(e,t,i,o){return t+t+i+i+o+o});var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);e=parseInt(t[1],16);var i=parseInt(t[2],16),t=parseInt(t[3],16);return"rgba("+e+","+i+","+t+",1)"}function d(e){function t(e,t,i){return 0>i&&(i+=1),1<i&&--i,i<1/6?e+6*(t-e)*i:.5>i?t:i<2/3?e+(t-e)*(2/3-i)*6:e}var i=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(e)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(e);e=parseInt(i[1])/360;var o=parseInt(i[2])/100,n=parseInt(i[3])/100,i=i[4]||1;if(0==o)n=o=e=n;else{var s=.5>n?n*(1+o):n+o-n*o,r=2*n-s,n=t(r,s,e+1/3),o=t(r,s,e);e=t(r,s,e-1/3)}return"rgba("+255*n+","+255*o+","+255*e+","+i+")"}function c(e){if(e=/([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(e))return e[2]}function p(e){return-1<e.indexOf("translate")||"perspective"===e?"px":-1<e.indexOf("rotate")||-1<e.indexOf("skew")?"deg":void 0}function u(e,t){return D.fnc(e)?e(t.target,t.id,t.total):e}function f(e,t){if(t in e.style)return getComputedStyle(e).getPropertyValue(t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase())||"0"}function h(e,t){return D.dom(e)&&n(z,t)?"transform":D.dom(e)&&(e.getAttribute(t)||D.svg(e)&&e[t])?"attribute":D.dom(e)&&"transform"!==t&&f(e,t)?"css":null!=e[t]?"object":void 0}function v(e,i){var o=p(i),o=-1<i.indexOf("scale")?1:0+o;if(e=e.style.transform,!e)return o;for(var n=[],s=[],r=[],a=/(\w+)\((.+?)\)/g;n=a.exec(e);)s.push(n[1]),r.push(n[2]);return e=t(r,function(e,t){return s[t]===i}),e.length?e[0]:o}function g(e,t){switch(h(e,t)){case"transform":return v(e,t);case"css":return f(e,t);case"attribute":return e.getAttribute(t)}return e[t]||0}function y(e,t){var i=/^(\*=|\+=|-=)/.exec(e);if(!i)return e;var o=c(e)||0;switch(t=parseFloat(t),e=parseFloat(e.replace(i[0],"")),i[0][0]){case"+":return t+e+o;case"-":return t-e+o;case"*":return t*e+o}}function w(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function m(e){e=e.points;for(var t,i=0,o=0;o<e.numberOfItems;o++){var n=e.getItem(o);0<o&&(i+=w(t,n)),t=n}return i}function k(e){if(e.getTotalLength)return e.getTotalLength();switch(e.tagName.toLowerCase()){case"circle":return 2*Math.PI*e.getAttribute("r");case"rect":return 2*e.getAttribute("width")+2*e.getAttribute("height");case"line":return w({x:e.getAttribute("x1"),y:e.getAttribute("y1")},{x:e.getAttribute("x2"),y:e.getAttribute("y2")});case"polyline":return m(e);case"polygon":var t=e.points;return m(e)+w(t.getItem(t.numberOfItems-1),t.getItem(0))}}function T(e,t){function i(i){return i=void 0===i?0:i,e.el.getPointAtLength(1<=t+i?t+i:0)}var o=i(),n=i(-1),s=i(1);switch(e.property){case"x":return o.x;case"y":return o.y;case"angle":return 180*Math.atan2(s.y-n.y,s.x-n.x)/Math.PI}}function b(e,t){var i,o=/-?\d*\.?\d+/g;if(i=D.pth(e)?e.totalLength:e,D.col(i))if(D.rgb(i)){var n=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(i);i=n?"rgba("+n[1]+",1)":i}else i=D.hex(i)?l(i):D.hsl(i)?d(i):void 0;else n=(n=c(i))?i.substr(0,i.length-n.length):i,i=t&&!/\s/g.test(i)?n+t:n;return i+="",{original:i,numbers:i.match(o)?i.match(o).map(Number):[0],strings:D.str(e)||t?i.split(o):[]}}function S(e){return e=e?i(D.arr(e)?e.map(o):o(e)):[],t(e,function(e,t,i){return i.indexOf(e)===t})}function $(e){var t=S(e);return t.map(function(e,i){return{target:e,id:i,total:t.length}})}function x(e,t){var i=s(t);if(D.arr(e)){var n=e.length;2!==n||D.obj(e[0])?D.fnc(t.duration)||(i.duration=t.duration/n):e={value:e}}return o(e).map(function(e,i){return i=i?0:t.delay,e=D.obj(e)&&!D.pth(e)?e:{value:e},D.und(e.delay)&&(e.delay=i),e}).map(function(e){return a(e,i)})}function C(e,t){var i,o={};for(i in e){var n=u(e[i],t);D.arr(n)&&(n=n.map(function(e){return u(e,t)}),1===n.length&&(n=n[0])),o[i]=n}return o.duration=parseFloat(o.duration),o.delay=parseFloat(o.delay),o}function A(e){return D.arr(e)?_.apply(this,e):W[e]}function O(e,t){var i;return e.tweens.map(function(o){o=C(o,t);var n=o.value,s=g(t.target,e.name),r=i?i.to.original:s,r=D.arr(n)?n[0]:r,a=y(D.arr(n)?n[1]:n,r),s=c(a)||c(r)||c(s);return o.from=b(r,s),o.to=b(a,s),o.start=i?i.end:e.offset,o.end=o.start+o.delay+o.duration,o.easing=A(o.easing),o.elasticity=(1e3-Math.min(Math.max(o.elasticity,1),999))/1e3,o.isPath=D.pth(n),o.isColor=D.col(o.from.original),o.isColor&&(o.round=1),i=o})}function P(e,o){return t(i(e.map(function(e){return o.map(function(t){var i=h(e.target,t.name);if(i){var o=O(t,e);t={type:i,property:t.name,animatable:e,tweens:o,duration:o[o.length-1].end,delay:o[0].delay}}else t=void 0;return t})})),function(e){return!D.und(e)})}function j(e,t,i,o){var n="delay"===e;return t.length?(n?Math.min:Math.max).apply(Math,t.map(function(t){return t[e]})):n?o.delay:i.offset+o.delay+o.duration}function M(e){var t,i=r(H,e),o=r(I,e),n=$(e.targets),s=[],l=a(i,o);for(t in e)l.hasOwnProperty(t)||"targets"===t||s.push({name:t,offset:l.offset,tweens:x(e[t],o)});return e=P(n,s),a(i,{children:[],animatables:n,animations:e,duration:j("duration",e,i,o),delay:j("delay",e,i,o)})}function E(e){function i(){return window.Promise&&new Promise(function(e){return p=e})}function o(e){return h.reversed?h.duration-e:e}function n(e){for(var i=0,o={},n=h.animations,s=n.length;i<s;){var r=n[i],a=r.animatable,l=r.tweens,d=l.length-1,c=l[d];d&&(c=t(l,function(t){return e<t.end})[0]||c);for(var l=Math.min(Math.max(e-c.start-c.delay,0),c.duration)/c.duration,p=isNaN(l)?1:c.easing(l,c.elasticity),l=c.to.strings,u=c.round,d=[],v=void 0,v=c.to.numbers.length,g=0;g<v;g++){var y=void 0,y=c.to.numbers[g],w=c.from.numbers[g],y=c.isPath?T(c.value,p*y):w+p*(y-w);u&&(c.isColor&&2<g||(y=Math.round(y*u)/u)),d.push(y)}if(c=l.length)for(v=l[0],p=0;p<c;p++)u=l[p+1],g=d[p],isNaN(g)||(v=u?v+(g+u):v+(g+" "));else v=d[0];q[r.type](a.target,r.property,v,o,a.id),r.currentValue=v,i++}if(i=Object.keys(o).length)for(n=0;n<i;n++)L||(L=f(document.body,"transform")?"transform":"-webkit-transform"),h.animatables[n].target.style[L]=o[n].join(" ");h.currentTime=e,h.progress=e/h.duration*100}function s(e){h[e]&&h[e](h)}function r(){h.remaining&&!0!==h.remaining&&h.remaining--}function a(e){var t=h.duration,a=h.offset,f=a+h.delay,v=h.currentTime,g=h.reversed,y=o(e);if(h.children.length){var w=h.children,m=w.length;if(y>=h.currentTime)for(var k=0;k<m;k++)w[k].seek(y);else for(;m--;)w[m].seek(y)}(y>=f||!t)&&(h.began||(h.began=!0,s("begin")),s("run")),y>a&&y<t?n(y):(y<=a&&0!==v&&(n(0),g&&r()),(y>=t&&v!==t||!t)&&(n(t),g||r())),s("update"),e>=t&&(h.remaining?(d=l,"alternate"===h.direction&&(h.reversed=!h.reversed)):(h.pause(),h.completed||(h.completed=!0,s("complete"),"Promise"in window&&(p(),u=i()))),c=0)}e=void 0===e?{}:e;var l,d,c=0,p=null,u=i(),h=M(e);return h.reset=function(){var e=h.direction,t=h.loop;for(h.currentTime=0,h.progress=0,h.paused=!0,h.began=!1,h.completed=!1,h.reversed="reverse"===e,h.remaining="alternate"===e&&1===t?2:t,n(0),e=h.children.length;e--;)h.children[e].reset()},h.tick=function(e){l=e,d||(d=l),a((c+l-d)*E.speed)},h.seek=function(e){a(o(e))},h.pause=function(){var e=N.indexOf(h);-1<e&&N.splice(e,1),h.paused=!0},h.play=function(){h.paused&&(h.paused=!1,d=0,c=o(h.currentTime),N.push(h),F||U())},h.reverse=function(){h.reversed=!h.reversed,d=0,c=o(h.currentTime)},h.restart=function(){h.pause(),h.reset(),h.play()},h.finished=u,h.reset(),h.autoplay&&h.play(),h}var L,H={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:"normal",autoplay:!0,offset:0},I={duration:1e3,delay:0,easing:"easeOutElastic",elasticity:500,round:0},z="translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective".split(" "),D={arr:function(e){return Array.isArray(e)},obj:function(e){return-1<Object.prototype.toString.call(e).indexOf("Object")},pth:function(e){return D.obj(e)&&e.hasOwnProperty("totalLength")},svg:function(e){return e instanceof SVGElement},dom:function(e){return e.nodeType||D.svg(e)},str:function(e){return"string"==typeof e},fnc:function(e){return"function"==typeof e},und:function(e){return"undefined"==typeof e},hex:function(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e)},rgb:function(e){return/^rgb/.test(e)},hsl:function(e){return/^hsl/.test(e)},col:function(e){return D.hex(e)||D.rgb(e)||D.hsl(e)}},_=function(){function e(e,t,i){return(((1-3*i+3*t)*e+(3*i-6*t))*e+3*t)*e}return function(t,i,o,n){if(0<=t&&1>=t&&0<=o&&1>=o){var s=new Float32Array(11);if(t!==i||o!==n)for(var r=0;11>r;++r)s[r]=e(.1*r,t,o);return function(r){if(t===i&&o===n)return r;if(0===r)return 0;if(1===r)return 1;for(var a=0,l=1;10!==l&&s[l]<=r;++l)a+=.1;--l;var l=a+(r-s[l])/(s[l+1]-s[l])*.1,d=3*(1-3*o+3*t)*l*l+2*(3*o-6*t)*l+3*t;if(.001<=d){for(a=0;4>a&&(d=3*(1-3*o+3*t)*l*l+2*(3*o-6*t)*l+3*t,0!==d);++a)var c=e(l,t,o)-r,l=l-c/d;r=l}else if(0===d)r=l;else{var l=a,a=a+.1,p=0;do c=l+(a-l)/2,d=e(c,t,o)-r,0<d?a=c:l=c;while(1e-7<Math.abs(d)&&10>++p);r=c}return e(r,i,n)}}}}(),W=function(){function e(e,t){return 0===e||1===e?e:-Math.pow(2,10*(e-1))*Math.sin(2*(e-1-t/(2*Math.PI)*Math.asin(1))*Math.PI/t)}var t,i="Quad Cubic Quart Quint Sine Expo Circ Back Elastic".split(" "),o={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],e],Out:[[.25,.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],function(t,i){return 1-e(1-t,i)}],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],function(t,i){return.5>t?e(2*t,i)/2:1-e(-2*t+2,i)/2}]},n={linear:_(.25,.25,.75,.75)},s={};for(t in o)s.type=t,o[s.type].forEach(function(e){return function(t,o){n["ease"+e.type+i[o]]=D.fnc(t)?t:_.apply($jscomp$this,t)}}(s)),s={type:s.type};return n}(),q={css:function(e,t,i){return e.style[t]=i},attribute:function(e,t,i){return e.setAttribute(t,i)},object:function(e,t,i){return e[t]=i},transform:function(e,t,i,o,n){o[n]||(o[n]=[]),o[n].push(t+"("+i+")")}},N=[],F=0,U=function(){function e(){F=requestAnimationFrame(t)}function t(t){var i=N.length;if(i){for(var o=0;o<i;)N[o]&&N[o].tick(t),o++;e()}else cancelAnimationFrame(F),F=0}return e}();return E.version="2.2.0",E.speed=1,E.running=N,E.remove=function(e){e=S(e);for(var t=N.length;t--;)for(var i=N[t],o=i.animations,s=o.length;s--;)n(e,o[s].animatable.target)&&(o.splice(s,1),o.length||i.pause())},E.getValue=g,E.path=function(t,i){var o=D.str(t)?e(t)[0]:t,n=i||100;return function(e){return{el:o,property:e,totalLength:k(o)*(n/100)}}},E.setDashoffset=function(e){var t=k(e);return e.setAttribute("stroke-dasharray",t),t},E.bezier=_,E.easings=W,E.timeline=function(e){var t=E(e);return t.pause(),t.duration=0,t.add=function(i){return t.children.forEach(function(e){e.began=!0,e.completed=!0}),o(i).forEach(function(i){var o=a(i,r(I,e||{}));o.targets=o.targets||e.targets,i=t.duration;var n=o.offset;o.autoplay=!1,o.direction=t.direction,o.offset=D.und(n)?i:y(n,i),t.began=!0,t.completed=!0,t.seek(o.offset),o=E(o),o.began=!0,o.completed=!0,o.duration>i&&(t.duration=o.duration),t.children.push(o)}),t.seek(0),t.reset(),t.autoplay&&t.restart(),t},t},E.random=function(e,t){return Math.floor(Math.random()*(t-e+1))+e},E}),!function(e){"function"==typeof define&&define.amd&&define.amd.jQuery?define(["jquery"],e):e("undefined"!=typeof module&&module.exports?require("jquery"):jQuery)}(function(e){"use strict";function t(t){return!t||void 0!==t.allowPageScroll||void 0===t.swipe&&void 0===t.swipeStatus||(t.allowPageScroll=c),void 0!==t.click&&void 0===t.tap&&(t.tap=t.click),t||(t={}),t=e.extend({},e.fn.swipe.defaults,t),this.each(function(){var o=e(this),n=o.data(O);n||(n=new i(this,t),o.data(O,n))})}function i(t,i){function o(t){if(!(de()||e(t.target).closest(i.excludedElements,Xe).length>0)){var o=t.originalEvent?t.originalEvent:t;if(!o.pointerType||"mouse"!=o.pointerType||0!=i.fallbackToMouseEvents){var n,s=o.touches,r=s?s[0]:o;return Ye=T,s?Be=s.length:i.preventDefaultEvents!==!1&&t.preventDefault(),Ie=0,ze=null,De=null,Ue=null,_e=0,We=0,qe=0,Ne=1,Fe=0,Re=ge(),ae(),pe(0,r),!s||Be===i.fingers||i.fingers===m||U()?(Ve=xe(),2==Be&&(pe(1,s[1]),We=qe=me(Qe[0].start,Qe[1].start)),(i.swipeStatus||i.pinchStatus)&&(n=I(o,Ye))):n=!1,n===!1?(Ye=$,I(o,Ye),n):(i.hold&&(tt=setTimeout(e.proxy(function(){Xe.trigger("hold",[o.target]),i.hold&&(n=i.hold.call(Xe,o,o.target))},this),i.longTapThreshold)),ce(!0),null)}}}function P(e){var t=e.originalEvent?e.originalEvent:e;if(Ye!==S&&Ye!==$&&!le()){var o,n=t.touches,s=n?n[0]:t,r=ue(s);if(Ge=xe(),n&&(Be=n.length),i.hold&&clearTimeout(tt),Ye=b,2==Be&&(0==We?(pe(1,n[1]),We=qe=me(Qe[0].start,Qe[1].start)):(ue(n[1]),qe=me(Qe[0].end,Qe[1].end),Ue=Te(Qe[0].end,Qe[1].end)),Ne=ke(We,qe),Fe=Math.abs(We-qe)),Be===i.fingers||i.fingers===m||!n||U()){if(ze=$e(r.start,r.end),De=$e(r.last,r.end),N(e,De),Ie=be(r.start,r.end),_e=we(),he(ze,Ie),o=I(t,Ye),!i.triggerOnTouchEnd||i.triggerOnTouchLeave){var a=!0;if(i.triggerOnTouchLeave){var l=Ce(this);a=Ae(r.end,l)}!i.triggerOnTouchEnd&&a?Ye=H(b):i.triggerOnTouchLeave&&!a&&(Ye=H(S)),Ye!=$&&Ye!=S||I(t,Ye)}}else Ye=$,I(t,Ye);o===!1&&(Ye=$,I(t,Ye))}}function j(e){var t=e.originalEvent?e.originalEvent:e,o=t.touches;if(o){if(o.length&&!le())return re(t),!0;if(o.length&&le())return!0}return le()&&(Be=Je),Ge=xe(),_e=we(),_()||!D()?(Ye=$,I(t,Ye)):i.triggerOnTouchEnd||i.triggerOnTouchEnd===!1&&Ye===b?(i.preventDefaultEvents!==!1&&e.cancelable!==!1&&e.preventDefault(),Ye=S,I(t,Ye)):!i.triggerOnTouchEnd&&G()?(Ye=S,z(t,Ye,h)):Ye===b&&(Ye=$,I(t,Ye)),ce(!1),null}function M(){Be=0,Ge=0,Ve=0,We=0,qe=0,Ne=1,ae(),ce(!1)}function E(e){var t=e.originalEvent?e.originalEvent:e;i.triggerOnTouchLeave&&(Ye=H(S),I(t,Ye))}function L(){Xe.unbind(je,o),Xe.unbind(He,M),Xe.unbind(Me,P),Xe.unbind(Ee,j),Le&&Xe.unbind(Le,E),ce(!1)}function H(e){var t=e,o=q(),n=D(),s=_();return!o||s?t=$:!n||e!=b||i.triggerOnTouchEnd&&!i.triggerOnTouchLeave?!n&&e==S&&i.triggerOnTouchLeave&&(t=$):t=S,t}function I(e,t){var i,o=e.touches;return(B()||Y())&&(i=z(e,t,u)),(R()||U())&&i!==!1&&(i=z(e,t,f)),ne()&&i!==!1?i=z(e,t,v):se()&&i!==!1?i=z(e,t,g):oe()&&i!==!1&&(i=z(e,t,h)),t===$&&M(e),t===S&&(o?o.length||M(e):M(e)),i}function z(t,o,c){var p;if(c==u){if(Xe.trigger("swipeStatus",[o,ze||null,Ie||0,_e||0,Be,Qe,De]),i.swipeStatus&&(p=i.swipeStatus.call(Xe,t,o,ze||null,Ie||0,_e||0,Be,Qe,De),p===!1))return!1;if(o==S&&X()){if(clearTimeout(et),clearTimeout(tt),Xe.trigger("swipe",[ze,Ie,_e,Be,Qe,De]),i.swipe&&(p=i.swipe.call(Xe,t,ze,Ie,_e,Be,Qe,De),p===!1))return!1;switch(ze){case n:Xe.trigger("swipeLeft",[ze,Ie,_e,Be,Qe,De]),i.swipeLeft&&(p=i.swipeLeft.call(Xe,t,ze,Ie,_e,Be,Qe,De));break;case s:Xe.trigger("swipeRight",[ze,Ie,_e,Be,Qe,De]),i.swipeRight&&(p=i.swipeRight.call(Xe,t,ze,Ie,_e,Be,Qe,De));break;case r:Xe.trigger("swipeUp",[ze,Ie,_e,Be,Qe,De]),i.swipeUp&&(p=i.swipeUp.call(Xe,t,ze,Ie,_e,Be,Qe,De));break;case a:Xe.trigger("swipeDown",[ze,Ie,_e,Be,Qe,De]),i.swipeDown&&(p=i.swipeDown.call(Xe,t,ze,Ie,_e,Be,Qe,De))}}}if(c==f){if(Xe.trigger("pinchStatus",[o,Ue||null,Fe||0,_e||0,Be,Ne,Qe]),i.pinchStatus&&(p=i.pinchStatus.call(Xe,t,o,Ue||null,Fe||0,_e||0,Be,Ne,Qe),p===!1))return!1;if(o==S&&F())switch(Ue){case l:Xe.trigger("pinchIn",[Ue||null,Fe||0,_e||0,Be,Ne,Qe]),i.pinchIn&&(p=i.pinchIn.call(Xe,t,Ue||null,Fe||0,_e||0,Be,Ne,Qe));break;case d:Xe.trigger("pinchOut",[Ue||null,Fe||0,_e||0,Be,Ne,Qe]),i.pinchOut&&(p=i.pinchOut.call(Xe,t,Ue||null,Fe||0,_e||0,Be,Ne,Qe))}}return c==h?o!==$&&o!==S||(clearTimeout(et),clearTimeout(tt),Z()&&!ee()?(Ke=xe(),et=setTimeout(e.proxy(function(){Ke=null,Xe.trigger("tap",[t.target]),i.tap&&(p=i.tap.call(Xe,t,t.target))},this),i.doubleTapThreshold)):(Ke=null,Xe.trigger("tap",[t.target]),i.tap&&(p=i.tap.call(Xe,t,t.target)))):c==v?o!==$&&o!==S||(clearTimeout(et),clearTimeout(tt),Ke=null,Xe.trigger("doubletap",[t.target]),i.doubleTap&&(p=i.doubleTap.call(Xe,t,t.target))):c==g&&(o!==$&&o!==S||(clearTimeout(et),Ke=null,Xe.trigger("longtap",[t.target]),i.longTap&&(p=i.longTap.call(Xe,t,t.target)))),p}function D(){var e=!0;return null!==i.threshold&&(e=Ie>=i.threshold),e}function _(){var e=!1;return null!==i.cancelThreshold&&null!==ze&&(e=ve(ze)-Ie>=i.cancelThreshold),e}function W(){return null===i.pinchThreshold||Fe>=i.pinchThreshold}function q(){var e;return e=!(i.maxTimeThreshold&&_e>=i.maxTimeThreshold)}function N(e,t){if(i.preventDefaultEvents!==!1)if(i.allowPageScroll===c)e.preventDefault();else{var o=i.allowPageScroll===p;switch(t){case n:(i.swipeLeft&&o||!o&&i.allowPageScroll!=y)&&e.preventDefault();break;case s:(i.swipeRight&&o||!o&&i.allowPageScroll!=y)&&e.preventDefault();break;case r:(i.swipeUp&&o||!o&&i.allowPageScroll!=w)&&e.preventDefault();break;case a:(i.swipeDown&&o||!o&&i.allowPageScroll!=w)&&e.preventDefault();break;case c:}}}function F(){var e=Q(),t=V(),i=W();return e&&t&&i}function U(){return!!(i.pinchStatus||i.pinchIn||i.pinchOut)}function R(){return!(!F()||!U())}function X(){var e=q(),t=D(),i=Q(),o=V(),n=_(),s=!n&&o&&i&&t&&e;return s}function Y(){return!!(i.swipe||i.swipeStatus||i.swipeLeft||i.swipeRight||i.swipeUp||i.swipeDown)}function B(){return!(!X()||!Y())}function Q(){return Be===i.fingers||i.fingers===m||!x}function V(){return 0!==Qe[0].end.x}function G(){return!!i.tap}function Z(){return!!i.doubleTap}function J(){return!!i.longTap}function K(){if(null==Ke)return!1;var e=xe();return Z()&&e-Ke<=i.doubleTapThreshold}function ee(){return K()}function te(){return(1===Be||!x)&&(isNaN(Ie)||Ie<i.threshold)}function ie(){return _e>i.longTapThreshold&&Ie<k}function oe(){return!(!te()||!G())}function ne(){return!(!K()||!Z())}function se(){return!(!ie()||!J())}function re(e){Ze=xe(),Je=e.touches.length+1}function ae(){Ze=0,Je=0}function le(){var e=!1;if(Ze){var t=xe()-Ze;t<=i.fingerReleaseThreshold&&(e=!0)}return e}function de(){return!(Xe.data(O+"_intouch")!==!0)}function ce(e){Xe&&(e===!0?(Xe.bind(Me,P),Xe.bind(Ee,j),Le&&Xe.bind(Le,E)):(Xe.unbind(Me,P,!1),Xe.unbind(Ee,j,!1),Le&&Xe.unbind(Le,E,!1)),Xe.data(O+"_intouch",e===!0));
}function pe(e,t){var i={start:{x:0,y:0},last:{x:0,y:0},end:{x:0,y:0}};return i.start.x=i.last.x=i.end.x=t.pageX||t.clientX,i.start.y=i.last.y=i.end.y=t.pageY||t.clientY,Qe[e]=i,i}function ue(e){var t=void 0!==e.identifier?e.identifier:0,i=fe(t);return null===i&&(i=pe(t,e)),i.last.x=i.end.x,i.last.y=i.end.y,i.end.x=e.pageX||e.clientX,i.end.y=e.pageY||e.clientY,i}function fe(e){return Qe[e]||null}function he(e,t){e!=c&&(t=Math.max(t,ve(e)),Re[e].distance=t)}function ve(e){if(Re[e])return Re[e].distance}function ge(){var e={};return e[n]=ye(n),e[s]=ye(s),e[r]=ye(r),e[a]=ye(a),e}function ye(e){return{direction:e,distance:0}}function we(){return Ge-Ve}function me(e,t){var i=Math.abs(e.x-t.x),o=Math.abs(e.y-t.y);return Math.round(Math.sqrt(i*i+o*o))}function ke(e,t){var i=t/e*1;return i.toFixed(2)}function Te(){return Ne<1?d:l}function be(e,t){return Math.round(Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)))}function Se(e,t){var i=e.x-t.x,o=t.y-e.y,n=Math.atan2(o,i),s=Math.round(180*n/Math.PI);return s<0&&(s=360-Math.abs(s)),s}function $e(e,t){if(Oe(e,t))return c;var i=Se(e,t);return i<=45&&i>=0?n:i<=360&&i>=315?n:i>=135&&i<=225?s:i>45&&i<135?a:r}function xe(){var e=new Date;return e.getTime()}function Ce(t){t=e(t);var i=t.offset(),o={left:i.left,right:i.left+t.outerWidth(),top:i.top,bottom:i.top+t.outerHeight()};return o}function Ae(e,t){return e.x>t.left&&e.x<t.right&&e.y>t.top&&e.y<t.bottom}function Oe(e,t){return e.x==t.x&&e.y==t.y}var i=e.extend({},i),Pe=x||A||!i.fallbackToMouseEvents,je=Pe?A?C?"MSPointerDown":"pointerdown":"touchstart":"mousedown",Me=Pe?A?C?"MSPointerMove":"pointermove":"touchmove":"mousemove",Ee=Pe?A?C?"MSPointerUp":"pointerup":"touchend":"mouseup",Le=Pe?A?"mouseleave":null:"mouseleave",He=A?C?"MSPointerCancel":"pointercancel":"touchcancel",Ie=0,ze=null,De=null,_e=0,We=0,qe=0,Ne=1,Fe=0,Ue=0,Re=null,Xe=e(t),Ye="start",Be=0,Qe={},Ve=0,Ge=0,Ze=0,Je=0,Ke=0,et=null,tt=null;try{Xe.bind(je,o),Xe.bind(He,M)}catch(it){e.error("events not supported "+je+","+He+" on jQuery.swipe")}this.enable=function(){return this.disable(),Xe.bind(je,o),Xe.bind(He,M),Xe},this.disable=function(){return L(),Xe},this.destroy=function(){L(),Xe.data(O,null),Xe=null},this.option=function(t,o){if("object"==typeof t)i=e.extend(i,t);else if(void 0!==i[t]){if(void 0===o)return i[t];i[t]=o}else{if(!t)return i;e.error("Option "+t+" does not exist on jQuery.swipe.options")}return null}}var o="1.6.18",n="left",s="right",r="up",a="down",l="in",d="out",c="none",p="auto",u="swipe",f="pinch",h="tap",v="doubletap",g="longtap",y="horizontal",w="vertical",m="all",k=10,T="start",b="move",S="end",$="cancel",x="ontouchstart"in window,C=window.navigator.msPointerEnabled&&!window.navigator.pointerEnabled&&!x,A=(window.navigator.pointerEnabled||window.navigator.msPointerEnabled)&&!x,O="TouchSwipe",P={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:!0,triggerOnTouchLeave:!1,allowPageScroll:"auto",fallbackToMouseEvents:!0,excludedElements:".noSwipe",preventDefaultEvents:!0};e.fn.swipe=function(i){var o=e(this),n=o.data(O);if(n&&"string"==typeof i){if(n[i])return n[i].apply(n,Array.prototype.slice.call(arguments,1));e.error("Method "+i+" does not exist on jQuery.swipe")}else if(n&&"object"==typeof i)n.option.apply(n,arguments);else if(!(n||"object"!=typeof i&&i))return t.apply(this,arguments);return o},e.fn.swipe.version=o,e.fn.swipe.defaults=P,e.fn.swipe.phases={PHASE_START:T,PHASE_MOVE:b,PHASE_END:S,PHASE_CANCEL:$},e.fn.swipe.directions={LEFT:n,RIGHT:s,UP:r,DOWN:a,IN:l,OUT:d},e.fn.swipe.pageScroll={NONE:c,HORIZONTAL:y,VERTICAL:w,AUTO:p},e.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,ALL:m}}),$(function(){$(function(){var e=0;$(".cards_inner__card").on("mouseenter",function(){$(this).css("transition","auto"),on(),console.log("ok")}).on("mouseleave",function(){$(this).css("transition","all 0.2s ease-in-out")}),$(".currency__pic").swipe({swipe:function(t,i,o,n,s,r){console.log("You swiped "+i);var a=$(".cards_inner__card:last-child").attr("class").split(" ")[1];"right"==i&&($(".cards_inner__card:last-child").css({transform:"translateX(320px) rotate(10deg)"}),setTimeout(function(){$(".cards_inner__card:last-child").css({opacity:0,zIndex:"-2"})},250),setTimeout(function(){$(".cards_inner__card:last-child").remove(),$(".cards").prepend('<div class="cards_inner__card '+a+'"></div>')},600),e<3?($(".points").find(".active").removeClass("active").next().addClass("active"),e++):($(".points").find(".active").removeClass("active"),$(".points").find(".first").addClass("active"),e=0)),"left"==i&&($(".cards_inner__card:last-child").css({transform:"translateX(-320px) rotate(10deg)"}),setTimeout(function(){$(".cards_inner__card:last-child").css({opacity:0,zIndex:"-2"})},250),setTimeout(function(){$(".cards_inner__card:last-child").remove(),$(".cards").prepend('<div class="cards_inner__card '+a+'"></div>')},600),e<3?($(".points").find(".active").removeClass("active").next().addClass("active"),e++):($(".points").find(".active").removeClass("active"),$(".points").find(".first").addClass("active"),e=0)),"down"!=i&&"up"!=i||(t.preventDefault(),console.log(t))},allowPageScroll:"auto"}),$(".points_point").on("click",function(t){t.preventDefault(),$(this).addClass("active").siblings().removeClass("active");var i=$(this).attr("data-index");i!==$(".cards_inner__card:last-child").attr("class").split(" ")[1]&&($(".cards").find("."+i).remove(),$(".cards").append('<div class="cards_inner__card '+i+'"></div>'),$(".cards").find("."+i).css({transform:"scale(0.94)",opacity:"0",zIndex:"-2"}),setTimeout(function(){$(".cards").find("."+i).css({transform:"scale(1) translateY(-300px)",opacity:"1",zIndex:"1"})},100),setTimeout(function(){$(".cards").find("."+i).css({transform:""})},1100),e=$(this).attr("data-id"),setTimeout(function(){$(".cards").find("."+i).css("opacity","1")},50),setTimeout(function(){$(".cards").find("."+i).css("transform","")},500))})}),$(".members__slider").slick({infinite:!0,slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,fade:!0}),$(".carousel").slick({infinite:!0,slidesToShow:4,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,responsive:[{breakpoint:824,settings:{slidesToShow:2,slidesToScroll:2,infinite:!0}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1,centerMode:!0,fade:!0}}]}),$(".bt-menu").click(function(e){e.preventDefault(),$(this).toggleClass("active"),$(".header__container").toggleClass("active"),$(".header__nav").toggleClass("open")}),$(window).scroll(function(){$(window).scrollTop()>43?($(".header__container").addClass("scroll"),$("footer.block").fadeOut("200")):($(".header__container").removeClass("scroll"),$("footer.block").fadeIn("400"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
