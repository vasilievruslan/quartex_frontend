"use strict";!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){var t=window.Slick||{};t=function(){function t(t,o){var n,s=this;s.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:e(t),appendDots:e(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(t,i){return e('<button type="button" />').text(i+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},s.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},e.extend(s,s.initials),s.activeBreakpoint=null,s.animType=null,s.animProp=null,s.breakpoints=[],s.breakpointSettings=[],s.cssTransitions=!1,s.focussed=!1,s.interrupted=!1,s.hidden="hidden",s.paused=!0,s.positionProp=null,s.respondTo=null,s.rowCount=1,s.shouldClick=!0,s.$slider=e(t),s.$slidesCache=null,s.transformType=null,s.transitionType=null,s.visibilityChange="visibilitychange",s.windowWidth=0,s.windowTimer=null,n=e(t).data("slick")||{},s.options=e.extend({},s.defaults,o,n),s.currentSlide=s.options.initialSlide,s.originalSettings=s.options,"undefined"!=typeof document.mozHidden?(s.hidden="mozHidden",s.visibilityChange="mozvisibilitychange"):"undefined"!=typeof document.webkitHidden&&(s.hidden="webkitHidden",s.visibilityChange="webkitvisibilitychange"),s.autoPlay=e.proxy(s.autoPlay,s),s.autoPlayClear=e.proxy(s.autoPlayClear,s),s.autoPlayIterator=e.proxy(s.autoPlayIterator,s),s.changeSlide=e.proxy(s.changeSlide,s),s.clickHandler=e.proxy(s.clickHandler,s),s.selectHandler=e.proxy(s.selectHandler,s),s.setPosition=e.proxy(s.setPosition,s),s.swipeHandler=e.proxy(s.swipeHandler,s),s.dragHandler=e.proxy(s.dragHandler,s),s.keyHandler=e.proxy(s.keyHandler,s),s.instanceUid=i++,s.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,s.registerBreakpoints(),s.init(!0)}var i=0;return t}(),t.prototype.activateADA=function(){var e=this;e.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},t.prototype.addSlide=t.prototype.slickAdd=function(t,i,o){var n=this;if("boolean"==typeof i)o=i,i=null;else if(i<0||i>=n.slideCount)return!1;n.unload(),"number"==typeof i?0===i&&0===n.$slides.length?e(t).appendTo(n.$slideTrack):o?e(t).insertBefore(n.$slides.eq(i)):e(t).insertAfter(n.$slides.eq(i)):o===!0?e(t).prependTo(n.$slideTrack):e(t).appendTo(n.$slideTrack),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slides.each(function(t,i){e(i).attr("data-slick-index",t)}),n.$slidesCache=n.$slides,n.reinit()},t.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&e.options.adaptiveHeight===!0&&e.options.vertical===!1){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},t.prototype.animateSlide=function(t,i){var o={},n=this;n.animateHeight(),n.options.rtl===!0&&n.options.vertical===!1&&(t=-t),n.transformsEnabled===!1?n.options.vertical===!1?n.$slideTrack.animate({left:t},n.options.speed,n.options.easing,i):n.$slideTrack.animate({top:t},n.options.speed,n.options.easing,i):n.cssTransitions===!1?(n.options.rtl===!0&&(n.currentLeft=-n.currentLeft),e({animStart:n.currentLeft}).animate({animStart:t},{duration:n.options.speed,easing:n.options.easing,step:function(e){e=Math.ceil(e),n.options.vertical===!1?(o[n.animType]="translate("+e+"px, 0px)",n.$slideTrack.css(o)):(o[n.animType]="translate(0px,"+e+"px)",n.$slideTrack.css(o))},complete:function(){i&&i.call()}})):(n.applyTransition(),t=Math.ceil(t),n.options.vertical===!1?o[n.animType]="translate3d("+t+"px, 0px, 0px)":o[n.animType]="translate3d(0px,"+t+"px, 0px)",n.$slideTrack.css(o),i&&setTimeout(function(){n.disableTransition(),i.call()},n.options.speed))},t.prototype.getNavTarget=function(){var t=this,i=t.options.asNavFor;return i&&null!==i&&(i=e(i).not(t.$slider)),i},t.prototype.asNavFor=function(t){var i=this,o=i.getNavTarget();null!==o&&"object"==typeof o&&o.each(function(){var i=e(this).slick("getSlick");i.unslicked||i.slideHandler(t,!0)})},t.prototype.applyTransition=function(e){var t=this,i={};t.options.fade===!1?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,t.options.fade===!1?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},t.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},t.prototype.autoPlayClear=function(){var e=this;e.autoPlayTimer&&clearInterval(e.autoPlayTimer)},t.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(e.options.infinite===!1&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1===0&&(e.direction=1))),e.slideHandler(t))},t.prototype.buildArrows=function(){var t=this;t.options.arrows===!0&&(t.$prevArrow=e(t.options.prevArrow).addClass("slick-arrow"),t.$nextArrow=e(t.options.nextArrow).addClass("slick-arrow"),t.slideCount>t.options.slidesToShow?(t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.prependTo(t.options.appendArrows),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.appendTo(t.options.appendArrows),t.options.infinite!==!0&&t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},t.prototype.buildDots=function(){var t,i,o=this;if(o.options.dots===!0){for(o.$slider.addClass("slick-dotted"),i=e("<ul />").addClass(o.options.dotsClass),t=0;t<=o.getDotCount();t+=1)i.append(e("<li />").append(o.options.customPaging.call(this,o,t)));o.$dots=i.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},t.prototype.buildOut=function(){var t=this;t.$slides=t.$slider.children(t.options.slide+":not(.slick-cloned)").addClass("slick-slide"),t.slideCount=t.$slides.length,t.$slides.each(function(t,i){e(i).attr("data-slick-index",t).data("originalStyling",e(i).attr("style")||"")}),t.$slider.addClass("slick-slider"),t.$slideTrack=0===t.slideCount?e('<div class="slick-track"/>').appendTo(t.$slider):t.$slides.wrapAll('<div class="slick-track"/>').parent(),t.$list=t.$slideTrack.wrap('<div class="slick-list"/>').parent(),t.$slideTrack.css("opacity",0),t.options.centerMode!==!0&&t.options.swipeToSlide!==!0||(t.options.slidesToScroll=1),e("img[data-lazy]",t.$slider).not("[src]").addClass("slick-loading"),t.setupInfinite(),t.buildArrows(),t.buildDots(),t.updateDots(),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.options.draggable===!0&&t.$list.addClass("draggable")},t.prototype.buildRows=function(){var e,t,i,o,n,s,r,a=this;if(o=document.createDocumentFragment(),s=a.$slider.children(),a.options.rows>1){for(r=a.options.slidesPerRow*a.options.rows,n=Math.ceil(s.length/r),e=0;e<n;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*r+(t*a.options.slidesPerRow+i);s.get(c)&&d.appendChild(s.get(c))}l.appendChild(d)}o.appendChild(l)}a.$slider.empty().append(o),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},t.prototype.checkResponsive=function(t,i){var o,n,s,r=this,a=!1,l=r.$slider.width(),d=window.innerWidth||e(window).width();if("window"===r.respondTo?s=d:"slider"===r.respondTo?s=l:"min"===r.respondTo&&(s=Math.min(d,l)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){n=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(r.originalSettings.mobileFirst===!1?s<r.breakpoints[o]&&(n=r.breakpoints[o]):s>r.breakpoints[o]&&(n=r.breakpoints[o]));null!==n?null!==r.activeBreakpoint?(n!==r.activeBreakpoint||i)&&(r.activeBreakpoint=n,"unslick"===r.breakpointSettings[n]?r.unslick(n):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[n]),t===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(t)),a=n):(r.activeBreakpoint=n,"unslick"===r.breakpointSettings[n]?r.unslick(n):(r.options=e.extend({},r.originalSettings,r.breakpointSettings[n]),t===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(t)),a=n):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,t===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(t),a=n),t||a===!1||r.$slider.trigger("breakpoint",[r,a])}},t.prototype.changeSlide=function(t,i){var o,n,s,r=this,a=e(t.currentTarget);switch(a.is("a")&&t.preventDefault(),a.is("li")||(a=a.closest("li")),s=r.slideCount%r.options.slidesToScroll!==0,o=s?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,t.data.message){case"previous":n=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-n,!1,i);break;case"next":n=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+n,!1,i);break;case"index":var l=0===t.data.index?0:t.data.index||a.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(l),!1,i),a.children().trigger("focus");break;default:return}},t.prototype.checkNavigable=function(e){var t,i,o=this;if(t=o.getNavigableIndexes(),i=0,e>t[t.length-1])e=t[t.length-1];else for(var n in t){if(e<t[n]){e=i;break}i=t[n]}return e},t.prototype.cleanUpEvents=function(){var t=this;t.options.dots&&null!==t.$dots&&(e("li",t.$dots).off("click.slick",t.changeSlide).off("mouseenter.slick",e.proxy(t.interrupt,t,!0)).off("mouseleave.slick",e.proxy(t.interrupt,t,!1)),t.options.accessibility===!0&&t.$dots.off("keydown.slick",t.keyHandler)),t.$slider.off("focus.slick blur.slick"),t.options.arrows===!0&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow&&t.$prevArrow.off("click.slick",t.changeSlide),t.$nextArrow&&t.$nextArrow.off("click.slick",t.changeSlide),t.options.accessibility===!0&&(t.$prevArrow&&t.$prevArrow.off("keydown.slick",t.keyHandler),t.$nextArrow&&t.$nextArrow.off("keydown.slick",t.keyHandler))),t.$list.off("touchstart.slick mousedown.slick",t.swipeHandler),t.$list.off("touchmove.slick mousemove.slick",t.swipeHandler),t.$list.off("touchend.slick mouseup.slick",t.swipeHandler),t.$list.off("touchcancel.slick mouseleave.slick",t.swipeHandler),t.$list.off("click.slick",t.clickHandler),e(document).off(t.visibilityChange,t.visibility),t.cleanUpSlideEvents(),t.options.accessibility===!0&&t.$list.off("keydown.slick",t.keyHandler),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().off("click.slick",t.selectHandler),e(window).off("orientationchange.slick.slick-"+t.instanceUid,t.orientationChange),e(window).off("resize.slick.slick-"+t.instanceUid,t.resize),e("[draggable!=true]",t.$slideTrack).off("dragstart",t.preventDefault),e(window).off("load.slick.slick-"+t.instanceUid,t.setPosition)},t.prototype.cleanUpSlideEvents=function(){var t=this;t.$list.off("mouseenter.slick",e.proxy(t.interrupt,t,!0)),t.$list.off("mouseleave.slick",e.proxy(t.interrupt,t,!1))},t.prototype.cleanUpRows=function(){var e,t=this;t.options.rows>1&&(e=t.$slides.children().children(),e.removeAttr("style"),t.$slider.empty().append(e))},t.prototype.clickHandler=function(e){var t=this;t.shouldClick===!1&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},t.prototype.destroy=function(t){var i=this;i.autoPlayClear(),i.touchObject={},i.cleanUpEvents(),e(".slick-cloned",i.$slider).detach(),i.$dots&&i.$dots.remove(),i.$prevArrow&&i.$prevArrow.length&&(i.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.remove()),i.$nextArrow&&i.$nextArrow.length&&(i.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.remove()),i.$slides&&(i.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){e(this).attr("style",e(this).data("originalStyling"))}),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.detach(),i.$list.detach(),i.$slider.append(i.$slides)),i.cleanUpRows(),i.$slider.removeClass("slick-slider"),i.$slider.removeClass("slick-initialized"),i.$slider.removeClass("slick-dotted"),i.unslicked=!0,t||i.$slider.trigger("destroy",[i])},t.prototype.disableTransition=function(e){var t=this,i={};i[t.transitionType]="",t.options.fade===!1?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},t.prototype.fadeSlide=function(e,t){var i=this;i.cssTransitions===!1?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},t.prototype.fadeSlideOut=function(e){var t=this;t.cssTransitions===!1?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},t.prototype.filterSlides=t.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},t.prototype.focusHandler=function(){var t=this;t.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(i){i.stopImmediatePropagation();var o=e(this);setTimeout(function(){t.options.pauseOnFocus&&(t.focussed=o.is(":focus"),t.autoPlay())},0)})},t.prototype.getCurrent=t.prototype.slickCurrentSlide=function(){var e=this;return e.currentSlide},t.prototype.getDotCount=function(){var e=this,t=0,i=0,o=0;if(e.options.infinite===!0)if(e.slideCount<=e.options.slidesToShow)++o;else for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(e.options.centerMode===!0)o=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},t.prototype.getLeft=function(e){var t,i,o,n,s=this,r=0;return s.slideOffset=0,i=s.$slides.first().outerHeight(!0),s.options.infinite===!0?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,n=-1,s.options.vertical===!0&&s.options.centerMode===!0&&(2===s.options.slidesToShow?n=-1.5:1===s.options.slidesToShow&&(n=-2)),r=i*s.options.slidesToShow*n),s.slideCount%s.options.slidesToScroll!==0&&e+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(e>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(e-s.slideCount))*s.slideWidth*-1,r=(s.options.slidesToShow-(e-s.slideCount))*i*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,r=s.slideCount%s.options.slidesToScroll*i*-1))):e+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(e+s.options.slidesToShow-s.slideCount)*s.slideWidth,r=(e+s.options.slidesToShow-s.slideCount)*i),s.slideCount<=s.options.slidesToShow&&(s.slideOffset=0,r=0),s.options.centerMode===!0&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:s.options.centerMode===!0&&s.options.infinite===!0?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:s.options.centerMode===!0&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),t=s.options.vertical===!1?e*s.slideWidth*-1+s.slideOffset:e*i*-1+r,s.options.variableWidth===!0&&(o=s.slideCount<=s.options.slidesToShow||s.options.infinite===!1?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow),t=s.options.rtl===!0?o[0]?(s.$slideTrack.width()-o[0].offsetLeft-o.width())*-1:0:o[0]?o[0].offsetLeft*-1:0,s.options.centerMode===!0&&(o=s.slideCount<=s.options.slidesToShow||s.options.infinite===!1?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow+1),t=s.options.rtl===!0?o[0]?(s.$slideTrack.width()-o[0].offsetLeft-o.width())*-1:0:o[0]?o[0].offsetLeft*-1:0,t+=(s.$list.width()-o.outerWidth())/2)),t},t.prototype.getOption=t.prototype.slickGetOption=function(e){var t=this;return t.options[e]},t.prototype.getNavigableIndexes=function(){var e,t=this,i=0,o=0,n=[];for(t.options.infinite===!1?e=t.slideCount:(i=t.options.slidesToScroll*-1,o=t.options.slidesToScroll*-1,e=2*t.slideCount);i<e;)n.push(i),i=o+t.options.slidesToScroll,o+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return n},t.prototype.getSlick=function(){return this},t.prototype.getSlideCount=function(){var t,i,o,n=this;return o=n.options.centerMode===!0?n.slideWidth*Math.floor(n.options.slidesToShow/2):0,n.options.swipeToSlide===!0?(n.$slideTrack.find(".slick-slide").each(function(t,s){if(s.offsetLeft-o+e(s).outerWidth()/2>n.swipeLeft*-1)return i=s,!1}),t=Math.abs(e(i).attr("data-slick-index")-n.currentSlide)||1):n.options.slidesToScroll},t.prototype.goTo=t.prototype.slickGoTo=function(e,t){var i=this;i.changeSlide({data:{message:"index",index:parseInt(e)}},t)},t.prototype.init=function(t){var i=this;e(i.$slider).hasClass("slick-initialized")||(e(i.$slider).addClass("slick-initialized"),i.buildRows(),i.buildOut(),i.setProps(),i.startLoad(),i.loadSlider(),i.initializeEvents(),i.updateArrows(),i.updateDots(),i.checkResponsive(!0),i.focusHandler()),t&&i.$slider.trigger("init",[i]),i.options.accessibility===!0&&i.initADA(),i.options.autoplay&&(i.paused=!1,i.autoPlay())},t.prototype.initADA=function(){var t=this,i=Math.ceil(t.slideCount/t.options.slidesToShow),o=t.getNavigableIndexes().filter(function(e){return e>=0&&e<t.slideCount});t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==t.$dots&&(t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function(i){var n=o.indexOf(i);e(this).attr({role:"tabpanel",id:"slick-slide"+t.instanceUid+i,tabindex:-1}),n!==-1&&e(this).attr({"aria-describedby":"slick-slide-control"+t.instanceUid+n})}),t.$dots.attr("role","tablist").find("li").each(function(n){var s=o[n];e(this).attr({role:"presentation"}),e(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+t.instanceUid+n,"aria-controls":"slick-slide"+t.instanceUid+s,"aria-label":n+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(t.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var n=t.currentSlide,s=n+t.options.slidesToShow;n<s;n++)t.$slides.eq(n).attr("tabindex",0);t.activateADA()},t.prototype.initArrowEvents=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),e.options.accessibility===!0&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},t.prototype.initDotEvents=function(){var t=this;t.options.dots===!0&&(e("li",t.$dots).on("click.slick",{message:"index"},t.changeSlide),t.options.accessibility===!0&&t.$dots.on("keydown.slick",t.keyHandler)),t.options.dots===!0&&t.options.pauseOnDotsHover===!0&&e("li",t.$dots).on("mouseenter.slick",e.proxy(t.interrupt,t,!0)).on("mouseleave.slick",e.proxy(t.interrupt,t,!1))},t.prototype.initSlideEvents=function(){var t=this;t.options.pauseOnHover&&(t.$list.on("mouseenter.slick",e.proxy(t.interrupt,t,!0)),t.$list.on("mouseleave.slick",e.proxy(t.interrupt,t,!1)))},t.prototype.initializeEvents=function(){var t=this;t.initArrowEvents(),t.initDotEvents(),t.initSlideEvents(),t.$list.on("touchstart.slick mousedown.slick",{action:"start"},t.swipeHandler),t.$list.on("touchmove.slick mousemove.slick",{action:"move"},t.swipeHandler),t.$list.on("touchend.slick mouseup.slick",{action:"end"},t.swipeHandler),t.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},t.swipeHandler),t.$list.on("click.slick",t.clickHandler),e(document).on(t.visibilityChange,e.proxy(t.visibility,t)),t.options.accessibility===!0&&t.$list.on("keydown.slick",t.keyHandler),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),e(window).on("orientationchange.slick.slick-"+t.instanceUid,e.proxy(t.orientationChange,t)),e(window).on("resize.slick.slick-"+t.instanceUid,e.proxy(t.resize,t)),e("[draggable!=true]",t.$slideTrack).on("dragstart",t.preventDefault),e(window).on("load.slick.slick-"+t.instanceUid,t.setPosition),e(t.setPosition)},t.prototype.initUI=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},t.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&t.options.accessibility===!0?t.changeSlide({data:{message:t.options.rtl===!0?"next":"previous"}}):39===e.keyCode&&t.options.accessibility===!0&&t.changeSlide({data:{message:t.options.rtl===!0?"previous":"next"}}))},t.prototype.lazyLoad=function(){function t(t){e("img[data-lazy]",t).each(function(){var t=e(this),i=e(this).attr("data-lazy"),o=e(this).attr("data-srcset"),n=e(this).attr("data-sizes")||r.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){t.animate({opacity:0},100,function(){o&&(t.attr("srcset",o),n&&t.attr("sizes",n)),t.attr("src",i).animate({opacity:1},200,function(){t.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),r.$slider.trigger("lazyLoaded",[r,t,i])})},s.onerror=function(){t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i])},s.src=i})}var i,o,n,s,r=this;if(r.options.centerMode===!0?r.options.infinite===!0?(n=r.currentSlide+(r.options.slidesToShow/2+1),s=n+r.options.slidesToShow+2):(n=Math.max(0,r.currentSlide-(r.options.slidesToShow/2+1)),s=2+(r.options.slidesToShow/2+1)+r.currentSlide):(n=r.options.infinite?r.options.slidesToShow+r.currentSlide:r.currentSlide,s=Math.ceil(n+r.options.slidesToShow),r.options.fade===!0&&(n>0&&n--,s<=r.slideCount&&s++)),i=r.$slider.find(".slick-slide").slice(n,s),"anticipated"===r.options.lazyLoad)for(var a=n-1,l=s,d=r.$slider.find(".slick-slide"),c=0;c<r.options.slidesToScroll;c++)a<0&&(a=r.slideCount-1),i=i.add(d.eq(a)),i=i.add(d.eq(l)),a--,l++;t(i),r.slideCount<=r.options.slidesToShow?(o=r.$slider.find(".slick-slide"),t(o)):r.currentSlide>=r.slideCount-r.options.slidesToShow?(o=r.$slider.find(".slick-cloned").slice(0,r.options.slidesToShow),t(o)):0===r.currentSlide&&(o=r.$slider.find(".slick-cloned").slice(r.options.slidesToShow*-1),t(o))},t.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},t.prototype.next=t.prototype.slickNext=function(){var e=this;e.changeSlide({data:{message:"next"}})},t.prototype.orientationChange=function(){var e=this;e.checkResponsive(),e.setPosition()},t.prototype.pause=t.prototype.slickPause=function(){var e=this;e.autoPlayClear(),e.paused=!0},t.prototype.play=t.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},t.prototype.postSlide=function(t){var i=this;if(!i.unslicked&&(i.$slider.trigger("afterChange",[i,t]),i.animating=!1,i.slideCount>i.options.slidesToShow&&i.setPosition(),i.swipeLeft=null,i.options.autoplay&&i.autoPlay(),i.options.accessibility===!0&&(i.initADA(),i.options.focusOnChange))){var o=e(i.$slides.get(i.currentSlide));o.attr("tabindex",0).focus()}},t.prototype.prev=t.prototype.slickPrev=function(){var e=this;e.changeSlide({data:{message:"previous"}})},t.prototype.preventDefault=function(e){e.preventDefault()},t.prototype.progressiveLazyLoad=function(t){t=t||1;var i,o,n,s,r,a=this,l=e("img[data-lazy]",a.$slider);l.length?(i=l.first(),o=i.attr("data-lazy"),n=i.attr("data-srcset"),s=i.attr("data-sizes")||a.$slider.attr("data-sizes"),r=document.createElement("img"),r.onload=function(){n&&(i.attr("srcset",n),s&&i.attr("sizes",s)),i.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),a.options.adaptiveHeight===!0&&a.setPosition(),a.$slider.trigger("lazyLoaded",[a,i,o]),a.progressiveLazyLoad()},r.onerror=function(){t<3?setTimeout(function(){a.progressiveLazyLoad(t+1)},500):(i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,i,o]),a.progressiveLazyLoad())},r.src=o):a.$slider.trigger("allImagesLoaded",[a])},t.prototype.refresh=function(t){var i,o,n=this;o=n.slideCount-n.options.slidesToShow,!n.options.infinite&&n.currentSlide>o&&(n.currentSlide=o),n.slideCount<=n.options.slidesToShow&&(n.currentSlide=0),i=n.currentSlide,n.destroy(!0),e.extend(n,n.initials,{currentSlide:i}),n.init(),t||n.changeSlide({data:{message:"index",index:i}},!1)},t.prototype.registerBreakpoints=function(){var t,i,o,n=this,s=n.options.responsive||null;if("array"===e.type(s)&&s.length){n.respondTo=n.options.respondTo||"window";for(t in s)if(o=n.breakpoints.length-1,s.hasOwnProperty(t)){for(i=s[t].breakpoint;o>=0;)n.breakpoints[o]&&n.breakpoints[o]===i&&n.breakpoints.splice(o,1),o--;n.breakpoints.push(i),n.breakpointSettings[i]=s[t].settings}n.breakpoints.sort(function(e,t){return n.options.mobileFirst?e-t:t-e})}},t.prototype.reinit=function(){var t=this;t.$slides=t.$slideTrack.children(t.options.slide).addClass("slick-slide"),t.slideCount=t.$slides.length,t.currentSlide>=t.slideCount&&0!==t.currentSlide&&(t.currentSlide=t.currentSlide-t.options.slidesToScroll),t.slideCount<=t.options.slidesToShow&&(t.currentSlide=0),t.registerBreakpoints(),t.setProps(),t.setupInfinite(),t.buildArrows(),t.updateArrows(),t.initArrowEvents(),t.buildDots(),t.updateDots(),t.initDotEvents(),t.cleanUpSlideEvents(),t.initSlideEvents(),t.checkResponsive(!1,!0),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.setPosition(),t.focusHandler(),t.paused=!t.options.autoplay,t.autoPlay(),t.$slider.trigger("reInit",[t])},t.prototype.resize=function(){var t=this;e(window).width()!==t.windowWidth&&(clearTimeout(t.windowDelay),t.windowDelay=window.setTimeout(function(){t.windowWidth=e(window).width(),t.checkResponsive(),t.unslicked||t.setPosition()},50))},t.prototype.removeSlide=t.prototype.slickRemove=function(e,t,i){var o=this;return"boolean"==typeof e?(t=e,e=t===!0?0:o.slideCount-1):e=t===!0?--e:e,!(o.slideCount<1||e<0||e>o.slideCount-1)&&(o.unload(),i===!0?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,void o.reinit())},t.prototype.setCSS=function(e){var t,i,o=this,n={};o.options.rtl===!0&&(e=-e),t="left"==o.positionProp?Math.ceil(e)+"px":"0px",i="top"==o.positionProp?Math.ceil(e)+"px":"0px",n[o.positionProp]=e,o.transformsEnabled===!1?o.$slideTrack.css(n):(n={},o.cssTransitions===!1?(n[o.animType]="translate("+t+", "+i+")",o.$slideTrack.css(n)):(n[o.animType]="translate3d("+t+", "+i+", 0px)",o.$slideTrack.css(n)))},t.prototype.setDimensions=function(){var e=this;e.options.vertical===!1?e.options.centerMode===!0&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),e.options.centerMode===!0&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),e.options.vertical===!1&&e.options.variableWidth===!1?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):e.options.variableWidth===!0?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();e.options.variableWidth===!1&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},t.prototype.setFade=function(){var t,i=this;i.$slides.each(function(o,n){t=i.slideWidth*o*-1,i.options.rtl===!0?e(n).css({position:"relative",right:t,top:0,zIndex:i.options.zIndex-2,opacity:0}):e(n).css({position:"relative",left:t,top:0,zIndex:i.options.zIndex-2,opacity:0})}),i.$slides.eq(i.currentSlide).css({zIndex:i.options.zIndex-1,opacity:1})},t.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&e.options.adaptiveHeight===!0&&e.options.vertical===!1){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},t.prototype.setOption=t.prototype.slickSetOption=function(){var t,i,o,n,s,r=this,a=!1;if("object"===e.type(arguments[0])?(o=arguments[0],a=arguments[1],s="multiple"):"string"===e.type(arguments[0])&&(o=arguments[0],n=arguments[1],a=arguments[2],"responsive"===arguments[0]&&"array"===e.type(arguments[1])?s="responsive":"undefined"!=typeof arguments[1]&&(s="single")),"single"===s)r.options[o]=n;else if("multiple"===s)e.each(o,function(e,t){r.options[e]=t});else if("responsive"===s)for(i in n)if("array"!==e.type(r.options.responsive))r.options.responsive=[n[i]];else{for(t=r.options.responsive.length-1;t>=0;)r.options.responsive[t].breakpoint===n[i].breakpoint&&r.options.responsive.splice(t,1),t--;r.options.responsive.push(n[i])}a&&(r.unload(),r.reinit())},t.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),e.options.fade===!1?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},t.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=e.options.vertical===!0?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||e.options.useCSS===!0&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),
void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&e.animType!==!1&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&e.animType!==!1},t.prototype.setSlideClasses=function(e){var t,i,o,n,s=this;if(i=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),s.$slides.eq(e).addClass("slick-current"),s.options.centerMode===!0){var r=s.options.slidesToShow%2===0?1:0;t=Math.floor(s.options.slidesToShow/2),s.options.infinite===!0&&(e>=t&&e<=s.slideCount-1-t?s.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(o=s.options.slidesToShow+e,i.slice(o-t+1+r,o+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-s.options.slidesToShow).addClass("slick-center"):e===s.slideCount-1&&i.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(e).addClass("slick-center")}else e>=0&&e<=s.slideCount-s.options.slidesToShow?s.$slides.slice(e,e+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=s.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(n=s.slideCount%s.options.slidesToShow,o=s.options.infinite===!0?s.options.slidesToShow+e:e,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-e<s.options.slidesToShow?i.slice(o-(s.options.slidesToShow-n),o+n).addClass("slick-active").attr("aria-hidden","false"):i.slice(o,o+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},t.prototype.setupInfinite=function(){var t,i,o,n=this;if(n.options.fade===!0&&(n.options.centerMode=!1),n.options.infinite===!0&&n.options.fade===!1&&(i=null,n.slideCount>n.options.slidesToShow)){for(o=n.options.centerMode===!0?n.options.slidesToShow+1:n.options.slidesToShow,t=n.slideCount;t>n.slideCount-o;t-=1)i=t-1,e(n.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i-n.slideCount).prependTo(n.$slideTrack).addClass("slick-cloned");for(t=0;t<o+n.slideCount;t+=1)i=t,e(n.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i+n.slideCount).appendTo(n.$slideTrack).addClass("slick-cloned");n.$slideTrack.find(".slick-cloned").find("[id]").each(function(){e(this).attr("id","")})}},t.prototype.interrupt=function(e){var t=this;e||t.autoPlay(),t.interrupted=e},t.prototype.selectHandler=function(t){var i=this,o=e(t.target).is(".slick-slide")?e(t.target):e(t.target).parents(".slick-slide"),n=parseInt(o.attr("data-slick-index"));return n||(n=0),i.slideCount<=i.options.slidesToShow?void i.slideHandler(n,!1,!0):void i.slideHandler(n)},t.prototype.slideHandler=function(e,t,i){var o,n,s,r,a,l=null,d=this;if(t=t||!1,!(d.animating===!0&&d.options.waitForAnimate===!0||d.options.fade===!0&&d.currentSlide===e))return t===!1&&d.asNavFor(e),o=e,l=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,d.options.infinite===!1&&d.options.centerMode===!1&&(e<0||e>d.getDotCount()*d.options.slidesToScroll)?void(d.options.fade===!1&&(o=d.currentSlide,i!==!0?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o))):d.options.infinite===!1&&d.options.centerMode===!0&&(e<0||e>d.slideCount-d.options.slidesToScroll)?void(d.options.fade===!1&&(o=d.currentSlide,i!==!0?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o))):(d.options.autoplay&&clearInterval(d.autoPlayTimer),n=o<0?d.slideCount%d.options.slidesToScroll!==0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!==0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,n]),s=d.currentSlide,d.currentSlide=n,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(a=d.getNavTarget(),a=a.slick("getSlick"),a.slideCount<=a.options.slidesToShow&&a.setSlideClasses(d.currentSlide)),d.updateDots(),d.updateArrows(),d.options.fade===!0?(i!==!0?(d.fadeSlideOut(s),d.fadeSlide(n,function(){d.postSlide(n)})):d.postSlide(n),void d.animateHeight()):void(i!==!0?d.animateSlide(l,function(){d.postSlide(n)}):d.postSlide(n)))},t.prototype.startLoad=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},t.prototype.swipeDirection=function(){var e,t,i,o,n=this;return e=n.touchObject.startX-n.touchObject.curX,t=n.touchObject.startY-n.touchObject.curY,i=Math.atan2(t,e),o=Math.round(180*i/Math.PI),o<0&&(o=360-Math.abs(o)),o<=45&&o>=0?n.options.rtl===!1?"left":"right":o<=360&&o>=315?n.options.rtl===!1?"left":"right":o>=135&&o<=225?n.options.rtl===!1?"right":"left":n.options.verticalSwiping===!0?o>=35&&o<=135?"down":"up":"vertical"},t.prototype.swipeEnd=function(e){var t,i,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(o.touchObject.edgeHit===!0&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(i=o.swipeDirection()){case"left":case"down":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=i&&(o.slideHandler(t),o.touchObject={},o.$slider.trigger("swipe",[o,i]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},t.prototype.swipeHandler=function(e){var t=this;if(!(t.options.swipe===!1||"ontouchend"in document&&t.options.swipe===!1||t.options.draggable===!1&&e.type.indexOf("mouse")!==-1))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,t.options.verticalSwiping===!0&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},t.prototype.swipeMove=function(e){var t,i,o,n,s,r,a=this;return s=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||s&&1!==s.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==s?s[0].pageX:e.clientX,a.touchObject.curY=void 0!==s?s[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&r>4?(a.scrolling=!0,!1):(a.options.verticalSwiping===!0&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&a.touchObject.swipeLength>4&&(a.swiping=!0,e.preventDefault()),n=(a.options.rtl===!1?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),a.options.verticalSwiping===!0&&(n=a.touchObject.curY>a.touchObject.startY?1:-1),o=a.touchObject.swipeLength,a.touchObject.edgeHit=!1,a.options.infinite===!1&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(o=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),a.options.vertical===!1?a.swipeLeft=t+o*n:a.swipeLeft=t+o*(a.$list.height()/a.listWidth)*n,a.options.verticalSwiping===!0&&(a.swipeLeft=t+o*n),a.options.fade!==!0&&a.options.touchMove!==!1&&(a.animating===!0?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},t.prototype.swipeStart=function(e){var t,i=this;return i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow?(i.touchObject={},!1):(void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,void(i.dragging=!0))},t.prototype.unfilterSlides=t.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},t.prototype.unload=function(){var t=this;e(".slick-cloned",t.$slider).remove(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove(),t.$nextArrow&&t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove(),t.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},t.prototype.unslick=function(e){var t=this;t.$slider.trigger("unslick",[t,e]),t.destroy()},t.prototype.updateArrows=function(){var e,t=this;e=Math.floor(t.options.slidesToShow/2),t.options.arrows===!0&&t.slideCount>t.options.slidesToShow&&!t.options.infinite&&(t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===t.currentSlide?(t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-t.options.slidesToShow&&t.options.centerMode===!1?(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-1&&t.options.centerMode===!0&&(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},t.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},t.prototype.visibility=function(){var e=this;e.options.autoplay&&(document[e.hidden]?e.interrupted=!0:e.interrupted=!1)},e.fn.slick=function(){var e,i,o=this,n=arguments[0],s=Array.prototype.slice.call(arguments,1),r=o.length;for(e=0;e<r;e++)if("object"==typeof n||"undefined"==typeof n?o[e].slick=new t(o[e],n):i=o[e].slick[n].apply(o[e].slick,s),"undefined"!=typeof i)return i;return o}});var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){if(i.get||i.set)throw new TypeError("ES3 does not support getters and setters.");e!=Array.prototype&&e!=Object.prototype&&(e[t]=i.value)},$jscomp.getGlobal=function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.SYMBOL_PREFIX="jscomp_symbol_",$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){},$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)},$jscomp.symbolCounter_=0,$jscomp.Symbol=function(e){return $jscomp.SYMBOL_PREFIX+(e||"")+$jscomp.symbolCounter_++},$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var e=$jscomp.global.Symbol.iterator;e||(e=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator")),"function"!=typeof Array.prototype[e]&&$jscomp.defineProperty(Array.prototype,e,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}}),$jscomp.initSymbolIterator=function(){}},$jscomp.arrayIterator=function(e){var t=0;return $jscomp.iteratorPrototype(function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}})},$jscomp.iteratorPrototype=function(e){return $jscomp.initSymbolIterator(),e={next:e},e[$jscomp.global.Symbol.iterator]=function(){return this},e},$jscomp.array=$jscomp.array||{},$jscomp.iteratorFromArray=function(e,t){$jscomp.initSymbolIterator(),e instanceof String&&(e+="");var i=0,o={next:function(){if(i<e.length){var n=i++;return{value:t(n,e[n]),done:!1}}return o.next=function(){return{done:!0,value:void 0}},o.next()}};return o[Symbol.iterator]=function(){return o},o},$jscomp.polyfill=function(e,t,i,o){if(t){for(i=$jscomp.global,e=e.split("."),o=0;o<e.length-1;o++){var n=e[o];n in i||(i[n]={}),i=i[n]}e=e[e.length-1],o=i[e],t=t(o),t!=o&&null!=t&&$jscomp.defineProperty(i,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill("Array.prototype.keys",function(e){return e?e:function(){return $jscomp.iteratorFromArray(this,function(e){return e})}},"es6-impl","es3");var $jscomp$this=this;!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof module&&module.exports?module.exports=t():e.anime=t()}(this,function(){function e(e){if(!z.col(e))try{return document.querySelectorAll(e)}catch(t){}}function t(e,t){for(var i=e.length,o=2<=arguments.length?arguments[1]:void 0,n=[],s=0;s<i;s++)if(s in e){var r=e[s];t.call(o,r,s,e)&&n.push(r)}return n}function i(e){return e.reduce(function(e,t){return e.concat(z.arr(t)?i(t):t)},[])}function o(t){return z.arr(t)?t:(z.str(t)&&(t=e(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function n(e,t){return e.some(function(e){return e===t})}function s(e){var t,i={};for(t in e)i[t]=e[t];return i}function r(e,t){var i,o=s(e);for(i in e)o[i]=t.hasOwnProperty(i)?t[i]:e[i];return o}function a(e,t){var i,o=s(e);for(i in t)o[i]=z.und(e[i])?t[i]:e[i];return o}function l(e){e=e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(e,t,i,o){return t+t+i+i+o+o});var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);e=parseInt(t[1],16);var i=parseInt(t[2],16),t=parseInt(t[3],16);return"rgba("+e+","+i+","+t+",1)"}function d(e){function t(e,t,i){return 0>i&&(i+=1),1<i&&--i,i<1/6?e+6*(t-e)*i:.5>i?t:i<2/3?e+(t-e)*(2/3-i)*6:e}var i=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(e)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(e);e=parseInt(i[1])/360;var o=parseInt(i[2])/100,n=parseInt(i[3])/100,i=i[4]||1;if(0==o)n=o=e=n;else{var s=.5>n?n*(1+o):n+o-n*o,r=2*n-s,n=t(r,s,e+1/3),o=t(r,s,e);e=t(r,s,e-1/3)}return"rgba("+255*n+","+255*o+","+255*e+","+i+")"}function c(e){if(e=/([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(e))return e[2]}function p(e){return-1<e.indexOf("translate")||"perspective"===e?"px":-1<e.indexOf("rotate")||-1<e.indexOf("skew")?"deg":void 0}function u(e,t){return z.fnc(e)?e(t.target,t.id,t.total):e}function f(e,t){if(t in e.style)return getComputedStyle(e).getPropertyValue(t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase())||"0"}function h(e,t){return z.dom(e)&&n(_,t)?"transform":z.dom(e)&&(e.getAttribute(t)||z.svg(e)&&e[t])?"attribute":z.dom(e)&&"transform"!==t&&f(e,t)?"css":null!=e[t]?"object":void 0}function v(e,i){var o=p(i),o=-1<i.indexOf("scale")?1:0+o;if(e=e.style.transform,!e)return o;for(var n=[],s=[],r=[],a=/(\w+)\((.+?)\)/g;n=a.exec(e);)s.push(n[1]),r.push(n[2]);return e=t(r,function(e,t){return s[t]===i}),e.length?e[0]:o}function g(e,t){switch(h(e,t)){case"transform":return v(e,t);case"css":return f(e,t);case"attribute":return e.getAttribute(t)}return e[t]||0}function y(e,t){var i=/^(\*=|\+=|-=)/.exec(e);if(!i)return e;var o=c(e)||0;switch(t=parseFloat(t),e=parseFloat(e.replace(i[0],"")),i[0][0]){case"+":return t+e+o;case"-":return t-e+o;case"*":return t*e+o}}function m(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function w(e){e=e.points;for(var t,i=0,o=0;o<e.numberOfItems;o++){var n=e.getItem(o);0<o&&(i+=m(t,n)),t=n}return i}function k(e){if(e.getTotalLength)return e.getTotalLength();switch(e.tagName.toLowerCase()){case"circle":return 2*Math.PI*e.getAttribute("r");case"rect":return 2*e.getAttribute("width")+2*e.getAttribute("height");case"line":return m({x:e.getAttribute("x1"),y:e.getAttribute("y1")},{x:e.getAttribute("x2"),y:e.getAttribute("y2")});case"polyline":return w(e);case"polygon":var t=e.points;return w(e)+m(t.getItem(t.numberOfItems-1),t.getItem(0))}}function b(e,t){function i(i){return i=void 0===i?0:i,e.el.getPointAtLength(1<=t+i?t+i:0)}var o=i(),n=i(-1),s=i(1);switch(e.property){case"x":return o.x;case"y":return o.y;case"angle":return 180*Math.atan2(s.y-n.y,s.x-n.x)/Math.PI}}function T(e,t){var i,o=/-?\d*\.?\d+/g;if(i=z.pth(e)?e.totalLength:e,z.col(i))if(z.rgb(i)){var n=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(i);i=n?"rgba("+n[1]+",1)":i}else i=z.hex(i)?l(i):z.hsl(i)?d(i):void 0;else n=(n=c(i))?i.substr(0,i.length-n.length):i,i=t&&!/\s/g.test(i)?n+t:n;return i+="",{original:i,numbers:i.match(o)?i.match(o).map(Number):[0],strings:z.str(e)||t?i.split(o):[]}}function $(e){return e=e?i(z.arr(e)?e.map(o):o(e)):[],t(e,function(e,t,i){return i.indexOf(e)===t})}function S(e){var t=$(e);return t.map(function(e,i){return{target:e,id:i,total:t.length}})}function C(e,t){var i=s(t);if(z.arr(e)){var n=e.length;2!==n||z.obj(e[0])?z.fnc(t.duration)||(i.duration=t.duration/n):e={value:e}}return o(e).map(function(e,i){return i=i?0:t.delay,e=z.obj(e)&&!z.pth(e)?e:{value:e},z.und(e.delay)&&(e.delay=i),e}).map(function(e){return a(e,i)})}function x(e,t){var i,o={};for(i in e){var n=u(e[i],t);z.arr(n)&&(n=n.map(function(e){return u(e,t)}),1===n.length&&(n=n[0])),o[i]=n}return o.duration=parseFloat(o.duration),o.delay=parseFloat(o.delay),o}function O(e){return z.arr(e)?D.apply(this,e):q[e]}function A(e,t){var i;return e.tweens.map(function(o){o=x(o,t);var n=o.value,s=g(t.target,e.name),r=i?i.to.original:s,r=z.arr(n)?n[0]:r,a=y(z.arr(n)?n[1]:n,r),s=c(a)||c(r)||c(s);return o.from=T(r,s),o.to=T(a,s),o.start=i?i.end:e.offset,o.end=o.start+o.delay+o.duration,o.easing=O(o.easing),o.elasticity=(1e3-Math.min(Math.max(o.elasticity,1),999))/1e3,o.isPath=z.pth(n),o.isColor=z.col(o.from.original),o.isColor&&(o.round=1),i=o})}function P(e,o){return t(i(e.map(function(e){return o.map(function(t){var i=h(e.target,t.name);if(i){var o=A(t,e);t={type:i,property:t.name,animatable:e,tweens:o,duration:o[o.length-1].end,delay:o[0].delay}}else t=void 0;return t})})),function(e){return!z.und(e)})}function M(e,t,i,o){var n="delay"===e;return t.length?(n?Math.min:Math.max).apply(Math,t.map(function(t){return t[e]})):n?o.delay:i.offset+o.delay+o.duration}function j(e){var t,i=r(L,e),o=r(H,e),n=S(e.targets),s=[],l=a(i,o);for(t in e)l.hasOwnProperty(t)||"targets"===t||s.push({name:t,offset:l.offset,tweens:C(e[t],o)});return e=P(n,s),a(i,{children:[],animatables:n,animations:e,duration:M("duration",e,i,o),delay:M("delay",e,i,o)})}function E(e){function i(){return window.Promise&&new Promise(function(e){return p=e})}function o(e){return h.reversed?h.duration-e:e}function n(e){for(var i=0,o={},n=h.animations,s=n.length;i<s;){var r=n[i],a=r.animatable,l=r.tweens,d=l.length-1,c=l[d];d&&(c=t(l,function(t){return e<t.end})[0]||c);for(var l=Math.min(Math.max(e-c.start-c.delay,0),c.duration)/c.duration,p=isNaN(l)?1:c.easing(l,c.elasticity),l=c.to.strings,u=c.round,d=[],v=void 0,v=c.to.numbers.length,g=0;g<v;g++){var y=void 0,y=c.to.numbers[g],m=c.from.numbers[g],y=c.isPath?b(c.value,p*y):m+p*(y-m);u&&(c.isColor&&2<g||(y=Math.round(y*u)/u)),d.push(y)}if(c=l.length)for(v=l[0],p=0;p<c;p++)u=l[p+1],g=d[p],isNaN(g)||(v=u?v+(g+u):v+(g+" "));else v=d[0];W[r.type](a.target,r.property,v,o,a.id),r.currentValue=v,i++}if(i=Object.keys(o).length)for(n=0;n<i;n++)I||(I=f(document.body,"transform")?"transform":"-webkit-transform"),h.animatables[n].target.style[I]=o[n].join(" ");h.currentTime=e,h.progress=e/h.duration*100}function s(e){h[e]&&h[e](h)}function r(){h.remaining&&!0!==h.remaining&&h.remaining--}function a(e){var t=h.duration,a=h.offset,f=a+h.delay,v=h.currentTime,g=h.reversed,y=o(e);if(h.children.length){var m=h.children,w=m.length;if(y>=h.currentTime)for(var k=0;k<w;k++)m[k].seek(y);else for(;w--;)m[w].seek(y)}(y>=f||!t)&&(h.began||(h.began=!0,s("begin")),s("run")),y>a&&y<t?n(y):(y<=a&&0!==v&&(n(0),g&&r()),(y>=t&&v!==t||!t)&&(n(t),g||r())),s("update"),e>=t&&(h.remaining?(d=l,"alternate"===h.direction&&(h.reversed=!h.reversed)):(h.pause(),h.completed||(h.completed=!0,s("complete"),"Promise"in window&&(p(),u=i()))),c=0)}e=void 0===e?{}:e;var l,d,c=0,p=null,u=i(),h=j(e);return h.reset=function(){var e=h.direction,t=h.loop;for(h.currentTime=0,h.progress=0,h.paused=!0,h.began=!1,h.completed=!1,h.reversed="reverse"===e,h.remaining="alternate"===e&&1===t?2:t,n(0),e=h.children.length;e--;)h.children[e].reset()},h.tick=function(e){l=e,d||(d=l),a((c+l-d)*E.speed)},h.seek=function(e){a(o(e))},h.pause=function(){var e=F.indexOf(h);-1<e&&F.splice(e,1),h.paused=!0},h.play=function(){h.paused&&(h.paused=!1,d=0,c=o(h.currentTime),F.push(h),N||U())},h.reverse=function(){h.reversed=!h.reversed,d=0,c=o(h.currentTime)},h.restart=function(){h.pause(),h.reset(),h.play()},h.finished=u,h.reset(),h.autoplay&&h.play(),h}var I,L={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:"normal",autoplay:!0,offset:0},H={duration:1e3,delay:0,easing:"easeOutElastic",elasticity:500,round:0},_="translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective".split(" "),z={arr:function(e){return Array.isArray(e)},obj:function(e){return-1<Object.prototype.toString.call(e).indexOf("Object")},pth:function(e){return z.obj(e)&&e.hasOwnProperty("totalLength")},svg:function(e){return e instanceof SVGElement},dom:function(e){return e.nodeType||z.svg(e)},str:function(e){return"string"==typeof e},fnc:function(e){return"function"==typeof e},und:function(e){return"undefined"==typeof e},hex:function(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e)},rgb:function(e){return/^rgb/.test(e)},hsl:function(e){return/^hsl/.test(e)},col:function(e){return z.hex(e)||z.rgb(e)||z.hsl(e)}},D=function(){function e(e,t,i){return(((1-3*i+3*t)*e+(3*i-6*t))*e+3*t)*e}return function(t,i,o,n){if(0<=t&&1>=t&&0<=o&&1>=o){var s=new Float32Array(11);if(t!==i||o!==n)for(var r=0;11>r;++r)s[r]=e(.1*r,t,o);return function(r){if(t===i&&o===n)return r;if(0===r)return 0;if(1===r)return 1;for(var a=0,l=1;10!==l&&s[l]<=r;++l)a+=.1;--l;var l=a+(r-s[l])/(s[l+1]-s[l])*.1,d=3*(1-3*o+3*t)*l*l+2*(3*o-6*t)*l+3*t;if(.001<=d){for(a=0;4>a&&(d=3*(1-3*o+3*t)*l*l+2*(3*o-6*t)*l+3*t,0!==d);++a)var c=e(l,t,o)-r,l=l-c/d;r=l}else if(0===d)r=l;else{var l=a,a=a+.1,p=0;do c=l+(a-l)/2,d=e(c,t,o)-r,0<d?a=c:l=c;while(1e-7<Math.abs(d)&&10>++p);r=c}return e(r,i,n)}}}}(),q=function(){function e(e,t){return 0===e||1===e?e:-Math.pow(2,10*(e-1))*Math.sin(2*(e-1-t/(2*Math.PI)*Math.asin(1))*Math.PI/t)}var t,i="Quad Cubic Quart Quint Sine Expo Circ Back Elastic".split(" "),o={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],e],Out:[[.25,.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],function(t,i){return 1-e(1-t,i)}],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],function(t,i){return.5>t?e(2*t,i)/2:1-e(-2*t+2,i)/2}]},n={linear:D(.25,.25,.75,.75)},s={};for(t in o)s.type=t,o[s.type].forEach(function(e){return function(t,o){n["ease"+e.type+i[o]]=z.fnc(t)?t:D.apply($jscomp$this,t)}}(s)),s={type:s.type};return n}(),W={css:function(e,t,i){return e.style[t]=i},attribute:function(e,t,i){return e.setAttribute(t,i)},object:function(e,t,i){return e[t]=i},transform:function(e,t,i,o,n){o[n]||(o[n]=[]),o[n].push(t+"("+i+")")}},F=[],N=0,U=function(){function e(){N=requestAnimationFrame(t)}function t(t){var i=F.length;if(i){for(var o=0;o<i;)F[o]&&F[o].tick(t),o++;e()}else cancelAnimationFrame(N),N=0}return e}();return E.version="2.2.0",E.speed=1,E.running=F,E.remove=function(e){e=$(e);for(var t=F.length;t--;)for(var i=F[t],o=i.animations,s=o.length;s--;)n(e,o[s].animatable.target)&&(o.splice(s,1),o.length||i.pause())},E.getValue=g,E.path=function(t,i){var o=z.str(t)?e(t)[0]:t,n=i||100;return function(e){return{el:o,property:e,totalLength:k(o)*(n/100)}}},E.setDashoffset=function(e){var t=k(e);return e.setAttribute("stroke-dasharray",t),t},E.bezier=D,E.easings=q,E.timeline=function(e){var t=E(e);return t.pause(),t.duration=0,t.add=function(i){return t.children.forEach(function(e){e.began=!0,e.completed=!0}),o(i).forEach(function(i){var o=a(i,r(H,e||{}));o.targets=o.targets||e.targets,i=t.duration;var n=o.offset;o.autoplay=!1,o.direction=t.direction,o.offset=z.und(n)?i:y(n,i),t.began=!0,t.completed=!0,t.seek(o.offset),o=E(o),o.began=!0,o.completed=!0,o.duration>i&&(t.duration=o.duration),t.children.push(o)}),t.seek(0),t.reset(),t.autoplay&&t.restart(),t},t},E.random=function(e,t){return Math.floor(Math.random()*(t-e+1))+e},E}),!function(e){"function"==typeof define&&define.amd&&define.amd.jQuery?define(["jquery"],e):e("undefined"!=typeof module&&module.exports?require("jquery"):jQuery)}(function(e){function t(t){return!t||void 0!==t.allowPageScroll||void 0===t.swipe&&void 0===t.swipeStatus||(t.allowPageScroll=c),void 0!==t.click&&void 0===t.tap&&(t.tap=t.click),t||(t={}),t=e.extend({},e.fn.swipe.defaults,t),this.each(function(){var o=e(this),n=o.data(A);n||(n=new i(this,t),o.data(A,n))})}function i(t,i){function o(t){if(!(de()||e(t.target).closest(i.excludedElements,Xe).length>0)){var o=t.originalEvent?t.originalEvent:t;if(!o.pointerType||"mouse"!=o.pointerType||0!=i.fallbackToMouseEvents){var n,s=o.touches,r=s?s[0]:o;return Ye=b,s?Be=s.length:i.preventDefaultEvents!==!1&&t.preventDefault(),He=0,_e=null,ze=null,Ue=null,De=0,qe=0,We=0,Fe=1,Ne=0,Re=ge(),ae(),pe(0,r),!s||Be===i.fingers||i.fingers===w||U()?(Ve=Ce(),2==Be&&(pe(1,s[1]),qe=We=we(Qe[0].start,Qe[1].start)),(i.swipeStatus||i.pinchStatus)&&(n=H(o,Ye))):n=!1,n===!1?(Ye=S,H(o,Ye),n):(i.hold&&(tt=setTimeout(e.proxy(function(){Xe.trigger("hold",[o.target]),i.hold&&(n=i.hold.call(Xe,o,o.target))},this),i.longTapThreshold)),ce(!0),null)}}}function P(e){var t=e.originalEvent?e.originalEvent:e;if(Ye!==$&&Ye!==S&&!le()){var o,n=t.touches,s=n?n[0]:t,r=ue(s);if(Ge=Ce(),n&&(Be=n.length),i.hold&&clearTimeout(tt),Ye=T,2==Be&&(0==qe?(pe(1,n[1]),qe=We=we(Qe[0].start,Qe[1].start)):(ue(n[1]),We=we(Qe[0].end,Qe[1].end),Ue=be(Qe[0].end,Qe[1].end)),Fe=ke(qe,We),Ne=Math.abs(qe-We)),Be===i.fingers||i.fingers===w||!n||U()){if(_e=Se(r.start,r.end),ze=Se(r.last,r.end),F(e,ze),He=Te(r.start,r.end),De=me(),he(_e,He),o=H(t,Ye),!i.triggerOnTouchEnd||i.triggerOnTouchLeave){var a=!0;if(i.triggerOnTouchLeave){var l=xe(this);a=Oe(r.end,l)}!i.triggerOnTouchEnd&&a?Ye=L(T):i.triggerOnTouchLeave&&!a&&(Ye=L($)),Ye!=S&&Ye!=$||H(t,Ye)}}else Ye=S,H(t,Ye);o===!1&&(Ye=S,H(t,Ye))}}function M(e){var t=e.originalEvent?e.originalEvent:e,o=t.touches;if(o){if(o.length&&!le())return re(t),!0;if(o.length&&le())return!0}return le()&&(Be=Je),Ge=Ce(),De=me(),D()||!z()?(Ye=S,H(t,Ye)):i.triggerOnTouchEnd||i.triggerOnTouchEnd===!1&&Ye===T?(i.preventDefaultEvents!==!1&&e.cancelable!==!1&&e.preventDefault(),Ye=$,H(t,Ye)):!i.triggerOnTouchEnd&&G()?(Ye=$,_(t,Ye,h)):Ye===T&&(Ye=S,H(t,Ye)),ce(!1),null}function j(){Be=0,Ge=0,Ve=0,qe=0,We=0,Fe=1,ae(),ce(!1)}function E(e){var t=e.originalEvent?e.originalEvent:e;i.triggerOnTouchLeave&&(Ye=L($),H(t,Ye))}function I(){Xe.unbind(Me,o),Xe.unbind(Le,j),Xe.unbind(je,P),Xe.unbind(Ee,M),Ie&&Xe.unbind(Ie,E),ce(!1)}function L(e){var t=e,o=W(),n=z(),s=D();return!o||s?t=S:!n||e!=T||i.triggerOnTouchEnd&&!i.triggerOnTouchLeave?!n&&e==$&&i.triggerOnTouchLeave&&(t=S):t=$,t}function H(e,t){var i,o=e.touches;return(B()||Y())&&(i=_(e,t,u)),(R()||U())&&i!==!1&&(i=_(e,t,f)),ne()&&i!==!1?i=_(e,t,v):se()&&i!==!1?i=_(e,t,g):oe()&&i!==!1&&(i=_(e,t,h)),t===S&&j(e),t===$&&(o?o.length||j(e):j(e)),i}function _(t,o,c){var p;if(c==u){if(Xe.trigger("swipeStatus",[o,_e||null,He||0,De||0,Be,Qe,ze]),i.swipeStatus&&(p=i.swipeStatus.call(Xe,t,o,_e||null,He||0,De||0,Be,Qe,ze),p===!1))return!1;if(o==$&&X()){if(clearTimeout(et),clearTimeout(tt),Xe.trigger("swipe",[_e,He,De,Be,Qe,ze]),i.swipe&&(p=i.swipe.call(Xe,t,_e,He,De,Be,Qe,ze),p===!1))return!1;switch(_e){case n:Xe.trigger("swipeLeft",[_e,He,De,Be,Qe,ze]),i.swipeLeft&&(p=i.swipeLeft.call(Xe,t,_e,He,De,Be,Qe,ze));break;case s:Xe.trigger("swipeRight",[_e,He,De,Be,Qe,ze]),i.swipeRight&&(p=i.swipeRight.call(Xe,t,_e,He,De,Be,Qe,ze));break;case r:Xe.trigger("swipeUp",[_e,He,De,Be,Qe,ze]),i.swipeUp&&(p=i.swipeUp.call(Xe,t,_e,He,De,Be,Qe,ze));break;case a:Xe.trigger("swipeDown",[_e,He,De,Be,Qe,ze]),i.swipeDown&&(p=i.swipeDown.call(Xe,t,_e,He,De,Be,Qe,ze))}}}if(c==f){if(Xe.trigger("pinchStatus",[o,Ue||null,Ne||0,De||0,Be,Fe,Qe]),i.pinchStatus&&(p=i.pinchStatus.call(Xe,t,o,Ue||null,Ne||0,De||0,Be,Fe,Qe),p===!1))return!1;if(o==$&&N())switch(Ue){case l:Xe.trigger("pinchIn",[Ue||null,Ne||0,De||0,Be,Fe,Qe]),i.pinchIn&&(p=i.pinchIn.call(Xe,t,Ue||null,Ne||0,De||0,Be,Fe,Qe));break;case d:Xe.trigger("pinchOut",[Ue||null,Ne||0,De||0,Be,Fe,Qe]),i.pinchOut&&(p=i.pinchOut.call(Xe,t,Ue||null,Ne||0,De||0,Be,Fe,Qe))}}return c==h?o!==S&&o!==$||(clearTimeout(et),clearTimeout(tt),Z()&&!ee()?(Ke=Ce(),et=setTimeout(e.proxy(function(){Ke=null,Xe.trigger("tap",[t.target]),i.tap&&(p=i.tap.call(Xe,t,t.target))},this),i.doubleTapThreshold)):(Ke=null,Xe.trigger("tap",[t.target]),i.tap&&(p=i.tap.call(Xe,t,t.target)))):c==v?o!==S&&o!==$||(clearTimeout(et),clearTimeout(tt),Ke=null,Xe.trigger("doubletap",[t.target]),i.doubleTap&&(p=i.doubleTap.call(Xe,t,t.target))):c==g&&(o!==S&&o!==$||(clearTimeout(et),Ke=null,Xe.trigger("longtap",[t.target]),i.longTap&&(p=i.longTap.call(Xe,t,t.target)))),p}function z(){var e=!0;return null!==i.threshold&&(e=He>=i.threshold),e}function D(){var e=!1;return null!==i.cancelThreshold&&null!==_e&&(e=ve(_e)-He>=i.cancelThreshold),e}function q(){return null===i.pinchThreshold||Ne>=i.pinchThreshold}function W(){var e;return e=!(i.maxTimeThreshold&&De>=i.maxTimeThreshold)}function F(e,t){if(i.preventDefaultEvents!==!1)if(i.allowPageScroll===c)e.preventDefault();else{var o=i.allowPageScroll===p;switch(t){case n:(i.swipeLeft&&o||!o&&i.allowPageScroll!=y)&&e.preventDefault();break;case s:(i.swipeRight&&o||!o&&i.allowPageScroll!=y)&&e.preventDefault();break;case r:(i.swipeUp&&o||!o&&i.allowPageScroll!=m)&&e.preventDefault();break;case a:(i.swipeDown&&o||!o&&i.allowPageScroll!=m)&&e.preventDefault();break;case c:}}}function N(){var e=Q(),t=V(),i=q();return e&&t&&i}function U(){return!!(i.pinchStatus||i.pinchIn||i.pinchOut)}function R(){return!(!N()||!U())}function X(){var e=W(),t=z(),i=Q(),o=V(),n=D(),s=!n&&o&&i&&t&&e;return s}function Y(){return!!(i.swipe||i.swipeStatus||i.swipeLeft||i.swipeRight||i.swipeUp||i.swipeDown)}function B(){return!(!X()||!Y())}function Q(){return Be===i.fingers||i.fingers===w||!C}function V(){return 0!==Qe[0].end.x}function G(){return!!i.tap}function Z(){return!!i.doubleTap}function J(){return!!i.longTap}function K(){if(null==Ke)return!1;var e=Ce();return Z()&&e-Ke<=i.doubleTapThreshold}function ee(){return K()}function te(){return(1===Be||!C)&&(isNaN(He)||He<i.threshold)}function ie(){return De>i.longTapThreshold&&He<k}function oe(){return!(!te()||!G())}function ne(){return!(!K()||!Z())}function se(){return!(!ie()||!J())}function re(e){Ze=Ce(),Je=e.touches.length+1}function ae(){Ze=0,Je=0}function le(){var e=!1;if(Ze){var t=Ce()-Ze;t<=i.fingerReleaseThreshold&&(e=!0)}return e}function de(){return!(Xe.data(A+"_intouch")!==!0)}function ce(e){Xe&&(e===!0?(Xe.bind(je,P),Xe.bind(Ee,M),Ie&&Xe.bind(Ie,E)):(Xe.unbind(je,P,!1),Xe.unbind(Ee,M,!1),Ie&&Xe.unbind(Ie,E,!1)),Xe.data(A+"_intouch",e===!0));
}function pe(e,t){var i={start:{x:0,y:0},last:{x:0,y:0},end:{x:0,y:0}};return i.start.x=i.last.x=i.end.x=t.pageX||t.clientX,i.start.y=i.last.y=i.end.y=t.pageY||t.clientY,Qe[e]=i,i}function ue(e){var t=void 0!==e.identifier?e.identifier:0,i=fe(t);return null===i&&(i=pe(t,e)),i.last.x=i.end.x,i.last.y=i.end.y,i.end.x=e.pageX||e.clientX,i.end.y=e.pageY||e.clientY,i}function fe(e){return Qe[e]||null}function he(e,t){e!=c&&(t=Math.max(t,ve(e)),Re[e].distance=t)}function ve(e){if(Re[e])return Re[e].distance}function ge(){var e={};return e[n]=ye(n),e[s]=ye(s),e[r]=ye(r),e[a]=ye(a),e}function ye(e){return{direction:e,distance:0}}function me(){return Ge-Ve}function we(e,t){var i=Math.abs(e.x-t.x),o=Math.abs(e.y-t.y);return Math.round(Math.sqrt(i*i+o*o))}function ke(e,t){var i=t/e*1;return i.toFixed(2)}function be(){return Fe<1?d:l}function Te(e,t){return Math.round(Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)))}function $e(e,t){var i=e.x-t.x,o=t.y-e.y,n=Math.atan2(o,i),s=Math.round(180*n/Math.PI);return s<0&&(s=360-Math.abs(s)),s}function Se(e,t){if(Ae(e,t))return c;var i=$e(e,t);return i<=45&&i>=0?n:i<=360&&i>=315?n:i>=135&&i<=225?s:i>45&&i<135?a:r}function Ce(){var e=new Date;return e.getTime()}function xe(t){t=e(t);var i=t.offset(),o={left:i.left,right:i.left+t.outerWidth(),top:i.top,bottom:i.top+t.outerHeight()};return o}function Oe(e,t){return e.x>t.left&&e.x<t.right&&e.y>t.top&&e.y<t.bottom}function Ae(e,t){return e.x==t.x&&e.y==t.y}var i=e.extend({},i),Pe=C||O||!i.fallbackToMouseEvents,Me=Pe?O?x?"MSPointerDown":"pointerdown":"touchstart":"mousedown",je=Pe?O?x?"MSPointerMove":"pointermove":"touchmove":"mousemove",Ee=Pe?O?x?"MSPointerUp":"pointerup":"touchend":"mouseup",Ie=Pe?O?"mouseleave":null:"mouseleave",Le=O?x?"MSPointerCancel":"pointercancel":"touchcancel",He=0,_e=null,ze=null,De=0,qe=0,We=0,Fe=1,Ne=0,Ue=0,Re=null,Xe=e(t),Ye="start",Be=0,Qe={},Ve=0,Ge=0,Ze=0,Je=0,Ke=0,et=null,tt=null;try{Xe.bind(Me,o),Xe.bind(Le,j)}catch(it){e.error("events not supported "+Me+","+Le+" on jQuery.swipe")}this.enable=function(){return this.disable(),Xe.bind(Me,o),Xe.bind(Le,j),Xe},this.disable=function(){return I(),Xe},this.destroy=function(){I(),Xe.data(A,null),Xe=null},this.option=function(t,o){if("object"==typeof t)i=e.extend(i,t);else if(void 0!==i[t]){if(void 0===o)return i[t];i[t]=o}else{if(!t)return i;e.error("Option "+t+" does not exist on jQuery.swipe.options")}return null}}var o="1.6.18",n="left",s="right",r="up",a="down",l="in",d="out",c="none",p="auto",u="swipe",f="pinch",h="tap",v="doubletap",g="longtap",y="horizontal",m="vertical",w="all",k=10,b="start",T="move",$="end",S="cancel",C="ontouchstart"in window,x=window.navigator.msPointerEnabled&&!window.navigator.pointerEnabled&&!C,O=(window.navigator.pointerEnabled||window.navigator.msPointerEnabled)&&!C,A="TouchSwipe",P={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:!0,triggerOnTouchLeave:!1,allowPageScroll:"auto",fallbackToMouseEvents:!0,excludedElements:".noSwipe",preventDefaultEvents:!0};e.fn.swipe=function(i){var o=e(this),n=o.data(A);if(n&&"string"==typeof i){if(n[i])return n[i].apply(n,Array.prototype.slice.call(arguments,1));e.error("Method "+i+" does not exist on jQuery.swipe")}else if(n&&"object"==typeof i)n.option.apply(n,arguments);else if(!(n||"object"!=typeof i&&i))return t.apply(this,arguments);return o},e.fn.swipe.version=o,e.fn.swipe.defaults=P,e.fn.swipe.phases={PHASE_START:b,PHASE_MOVE:T,PHASE_END:$,PHASE_CANCEL:S},e.fn.swipe.directions={LEFT:n,RIGHT:s,UP:r,DOWN:a,IN:l,OUT:d},e.fn.swipe.pageScroll={NONE:c,HORIZONTAL:y,VERTICAL:m,AUTO:p},e.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,ALL:w}}),$(function(){function e(){o=setInterval(function(){$(".cards").find('[data-card-id="3"]').addClass("animate").attr("data-card-id","0").siblings().each(function(){var e=$(this).attr("data-card-id");e++,$(this).attr("data-card-id",e)}),setTimeout(function(){$(".cards_inner__card").removeClass("animate")},200),t<3?($(".points").find(".active").removeClass("active").next().addClass("active"),t++):($(".points").find(".active").removeClass("active"),$(".points").find(".first").addClass("active"),t=0)},5e3)}$(document).ready(function(e){setTimeout(function(){e(".loader").fadeOut(600)},1500)}),$.get("https://wex.nz/api/3/ticker/btc_usd-eth_usd",function(e){$("#btc_usd").html(Math.floor(e.btc_usd.avg)),$("#eth_usd").html(Math.floor(e.eth_usd.avg))},"jsonp"),$(".block__btn").click(function(e){e.preventDefault(),$(this).find(".store__toolkit").fadeIn(300).delay(3e3).fadeOut(600)}),$(".kakao").click(function(e){$(this).toggleClass("active")});var t=0;$(".cards_inner__card").swipe({swipe:function(e,i,o,n,s,r){"left"==i&&($(this).addClass("animate").attr("data-card-id","0").siblings().each(function(){var e=$(this).attr("data-card-id");e++,$(this).attr("data-card-id",e)}),setTimeout(function(){$(".cards_inner__card").removeClass("animate")},200),t<3?($(".points").find(".active").removeClass("active").next().addClass("active"),t++):($(".points").find(".active").removeClass("active"),$(".points").find(".first").addClass("active"),t=0))},allowPageScroll:"auto"});var i=[0,1,2];$(".points_point").on("click",function(e){var o=0;t=parseFloat($(this).attr("data-id")),e.preventDefault(),$(this).addClass("active").siblings().removeClass("active");var n=$(this).attr("data-index");$(".cards").find("."+n).addClass("animate").attr("data-card-id","3").siblings().each(function(){3!=o?($(this).attr("data-card-id",i[o]),o++):(o=0,$(this).attr("data-card-id",i[o]),o++)}),setTimeout(function(){$(".cards").find("."+n).removeClass("animate")},200)});var o=null;e(),$(".cards_inner__card, .points_point").hover(function(){clearInterval(o)},function(){e()}),$(".members__slider").slick({infinite:!0,slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,fade:!0,dots:!0,pauseOnDotsHover:!0}),$(".carousel").slick({infinite:!0,slidesToShow:4,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,pauseOnDotsHover:!0,responsive:[{breakpoint:824,settings:{slidesToShow:2,slidesToScroll:2,infinite:!0}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1,centerMode:!0,fade:!0}}]}),$(".bt-menu").click(function(e){e.preventDefault(),$(this).toggleClass("active"),$(".header__container").toggleClass("active"),$(".header__nav").toggleClass("open")}),$(window).scroll(function(){$(window).scrollTop()>43?($(".header__container").addClass("scroll"),$("footer.block").fadeOut("200")):($(".header__container").removeClass("scroll"),$("footer.block").fadeIn("400"));var e=$(this).scrollTop()+$(this).height();try{var t=$(".roadmap").offset().top+$(".roadmap").height()/2}catch(i){console.log(i)}e>t&&s.play()});var n=document.querySelectorAll(".progress__rect"),s=anime({direction:"reverse",targets:n,width:0,easing:"linear"});setTimeout(function(){s.pause()},50),$(".roadmap__responsive").on("click",function(e){$(".roadmap__responsive__button").is(".active")?($(".roadmap__responsive__container").slideToggle(600),setTimeout(function(){$(".rm__arrow").toggleClass("active"),$(".roadmap__responsive__button").toggleClass("active")},600)):($(".rm__arrow").toggleClass("active"),$(".roadmap__responsive__button").toggleClass("active"),setTimeout(function(){$(".roadmap__responsive__container").slideToggle(600)},200))});var r=1e3,a=60*r,l=60*a,d=24*l,c=new Date("Jul26, 2018 00:00:00 UTC"),p=setInterval(function(){for(var e=(new Date).getTime(),t=c-e,i=[Math.floor(t/d),Math.floor(t%d/l),Math.floor(t%l/a),Math.floor(t%a/r)],o=i.length-1;o>=0;o--)i[o]<10&&(i[o]="0"+i[o]);$("#days").html(i[0]),$("#hours").html(i[1]),$("#minutes").html(i[2]),$("#seconds").html(i[3]),t<0&&clearInterval(p)},r),u=.125223;$("#input").keyup(function(e){var t=parseFloat($("#input").val())/u;$("#output").val(t.toFixed(2))});var f=function(e){var t=e.prop("src");e.prop("src",""),e.prop("src",t)};$(".rose__playbtn").click(function(e){e.preventDefault(),$(".pop-up").fadeIn(400)}),$(".close-btn").click(function(){$(".pop-up").fadeOut(400),f($("#qvideo"))}),$(".pop-layout").click(function(){$(".pop-up").fadeOut(400),f($("#qvideo"))}),$('a[href*="#"]').not('[href="#"]').not('[href="#0"]').click(function(e){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);t=t.length?t:$("[name="+this.hash.slice(1)+"]"),t.length&&(e.preventDefault(),$("html, body").animate({scrollTop:t.offset().top},1e3,function(){var e=$(t);return e.focus(),!e.is(":focus")&&(e.attr("tabindex","-1"),void e.focus())}))}}),$(".faq__item").click(function(e){$(this).toggleClass("active").find(".item__p").slideToggle(400).parent().siblings().removeClass("active").find(".item__p").slideUp(400)});var h=[anime({targets:"#fdOval-5-Copy-4",r:[function(e){return 1.2*e.getAttribute("r")}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1}),anime({targets:"#fdOval-5-Copy-6",r:[function(e){return e.getAttribute("r")/1.2}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1}),anime({targets:"#fdOval-5-Copy-5",r:[function(e){return e.getAttribute("r")/1.2}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1}),anime({targets:"#fdOval-5-Copy-7",r:[function(e){return 1.4*e.getAttribute("r")}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1})],v=[anime({targets:"#tOval-5-Copy-2",r:[function(e){return e.getAttribute("r")/1.2}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1}),anime({targets:"#tOval-5",r:[function(e){return 1.1*e.getAttribute("r")}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1}),anime({targets:"#tOval-5-Copy",r:[function(e){return e.getAttribute("r")/1.2}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1}),anime({targets:"#tOval-5-Copy-3",r:[function(e){return e.getAttribute("r")/1.2}],easing:"easeInCubic",duration:2e3,loop:!0,direction:"alternate",autoplay:!1})],g=0,y=0,m=setInterval(function(){y<=3?(v[g].play(),y++):clearInterval(m)},700),w=setInterval(function(){g<=3?(h[g].play(),g++):clearInterval(w)},900)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJyZXF1aXJlIiwialF1ZXJ5IiwiJCIsIlNsaWNrIiwid2luZG93IiwiZWxlbWVudCIsInNldHRpbmdzIiwiZGF0YVNldHRpbmdzIiwiXyIsInRoaXMiLCJkZWZhdWx0cyIsImFjY2Vzc2liaWxpdHkiLCJhZGFwdGl2ZUhlaWdodCIsImFwcGVuZEFycm93cyIsImFwcGVuZERvdHMiLCJhcnJvd3MiLCJhc05hdkZvciIsInByZXZBcnJvdyIsIm5leHRBcnJvdyIsImF1dG9wbGF5IiwiYXV0b3BsYXlTcGVlZCIsImNlbnRlck1vZGUiLCJjZW50ZXJQYWRkaW5nIiwiY3NzRWFzZSIsImN1c3RvbVBhZ2luZyIsInNsaWRlciIsImkiLCJ0ZXh0IiwiZG90cyIsImRvdHNDbGFzcyIsImRyYWdnYWJsZSIsImVhc2luZyIsImVkZ2VGcmljdGlvbiIsImZhZGUiLCJmb2N1c09uU2VsZWN0IiwiZm9jdXNPbkNoYW5nZSIsImluZmluaXRlIiwiaW5pdGlhbFNsaWRlIiwibGF6eUxvYWQiLCJtb2JpbGVGaXJzdCIsInBhdXNlT25Ib3ZlciIsInBhdXNlT25Gb2N1cyIsInBhdXNlT25Eb3RzSG92ZXIiLCJyZXNwb25kVG8iLCJyZXNwb25zaXZlIiwicm93cyIsInJ0bCIsInNsaWRlIiwic2xpZGVzUGVyUm93Iiwic2xpZGVzVG9TaG93Iiwic2xpZGVzVG9TY3JvbGwiLCJzcGVlZCIsInN3aXBlIiwic3dpcGVUb1NsaWRlIiwidG91Y2hNb3ZlIiwidG91Y2hUaHJlc2hvbGQiLCJ1c2VDU1MiLCJ1c2VUcmFuc2Zvcm0iLCJ2YXJpYWJsZVdpZHRoIiwidmVydGljYWwiLCJ2ZXJ0aWNhbFN3aXBpbmciLCJ3YWl0Rm9yQW5pbWF0ZSIsInpJbmRleCIsImluaXRpYWxzIiwiYW5pbWF0aW5nIiwiZHJhZ2dpbmciLCJhdXRvUGxheVRpbWVyIiwiY3VycmVudERpcmVjdGlvbiIsImN1cnJlbnRMZWZ0IiwiY3VycmVudFNsaWRlIiwiZGlyZWN0aW9uIiwiJGRvdHMiLCJsaXN0V2lkdGgiLCJsaXN0SGVpZ2h0IiwibG9hZEluZGV4IiwiJG5leHRBcnJvdyIsIiRwcmV2QXJyb3ciLCJzY3JvbGxpbmciLCJzbGlkZUNvdW50Iiwic2xpZGVXaWR0aCIsIiRzbGlkZVRyYWNrIiwiJHNsaWRlcyIsInNsaWRpbmciLCJzbGlkZU9mZnNldCIsInN3aXBlTGVmdCIsInN3aXBpbmciLCIkbGlzdCIsInRvdWNoT2JqZWN0IiwidHJhbnNmb3Jtc0VuYWJsZWQiLCJ1bnNsaWNrZWQiLCJleHRlbmQiLCJhY3RpdmVCcmVha3BvaW50IiwiYW5pbVR5cGUiLCJhbmltUHJvcCIsImJyZWFrcG9pbnRzIiwiYnJlYWtwb2ludFNldHRpbmdzIiwiY3NzVHJhbnNpdGlvbnMiLCJmb2N1c3NlZCIsImludGVycnVwdGVkIiwiaGlkZGVuIiwicGF1c2VkIiwicG9zaXRpb25Qcm9wIiwicm93Q291bnQiLCJzaG91bGRDbGljayIsIiRzbGlkZXIiLCIkc2xpZGVzQ2FjaGUiLCJ0cmFuc2Zvcm1UeXBlIiwidHJhbnNpdGlvblR5cGUiLCJ2aXNpYmlsaXR5Q2hhbmdlIiwid2luZG93V2lkdGgiLCJ3aW5kb3dUaW1lciIsImRhdGEiLCJvcHRpb25zIiwib3JpZ2luYWxTZXR0aW5ncyIsImRvY3VtZW50IiwibW96SGlkZGVuIiwid2Via2l0SGlkZGVuIiwiYXV0b1BsYXkiLCJwcm94eSIsImF1dG9QbGF5Q2xlYXIiLCJhdXRvUGxheUl0ZXJhdG9yIiwiY2hhbmdlU2xpZGUiLCJjbGlja0hhbmRsZXIiLCJzZWxlY3RIYW5kbGVyIiwic2V0UG9zaXRpb24iLCJzd2lwZUhhbmRsZXIiLCJkcmFnSGFuZGxlciIsImtleUhhbmRsZXIiLCJpbnN0YW5jZVVpZCIsImh0bWxFeHByIiwicmVnaXN0ZXJCcmVha3BvaW50cyIsImluaXQiLCJwcm90b3R5cGUiLCJhY3RpdmF0ZUFEQSIsImZpbmQiLCJhdHRyIiwiYXJpYS1oaWRkZW4iLCJ0YWJpbmRleCIsImFkZFNsaWRlIiwic2xpY2tBZGQiLCJtYXJrdXAiLCJpbmRleCIsImFkZEJlZm9yZSIsInVubG9hZCIsImxlbmd0aCIsImFwcGVuZFRvIiwiaW5zZXJ0QmVmb3JlIiwiZXEiLCJpbnNlcnRBZnRlciIsInByZXBlbmRUbyIsImNoaWxkcmVuIiwiZGV0YWNoIiwiYXBwZW5kIiwiZWFjaCIsInJlaW5pdCIsImFuaW1hdGVIZWlnaHQiLCJ0YXJnZXRIZWlnaHQiLCJvdXRlckhlaWdodCIsImFuaW1hdGUiLCJoZWlnaHQiLCJhbmltYXRlU2xpZGUiLCJ0YXJnZXRMZWZ0IiwiY2FsbGJhY2siLCJhbmltUHJvcHMiLCJsZWZ0IiwidG9wIiwiYW5pbVN0YXJ0IiwiZHVyYXRpb24iLCJzdGVwIiwibm93IiwiTWF0aCIsImNlaWwiLCJjc3MiLCJjb21wbGV0ZSIsImNhbGwiLCJhcHBseVRyYW5zaXRpb24iLCJzZXRUaW1lb3V0IiwiZGlzYWJsZVRyYW5zaXRpb24iLCJnZXROYXZUYXJnZXQiLCJub3QiLCJ0YXJnZXQiLCJzbGljayIsInNsaWRlSGFuZGxlciIsInRyYW5zaXRpb24iLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJzbGlkZVRvIiwiYnVpbGRBcnJvd3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicmVtb3ZlQXR0ciIsInRlc3QiLCJhZGQiLCJhcmlhLWRpc2FibGVkIiwiYnVpbGREb3RzIiwiZG90IiwiZ2V0RG90Q291bnQiLCJmaXJzdCIsImJ1aWxkT3V0Iiwid3JhcEFsbCIsInBhcmVudCIsIndyYXAiLCJzZXR1cEluZmluaXRlIiwidXBkYXRlRG90cyIsInNldFNsaWRlQ2xhc3NlcyIsImJ1aWxkUm93cyIsImEiLCJiIiwiYyIsIm5ld1NsaWRlcyIsIm51bU9mU2xpZGVzIiwib3JpZ2luYWxTbGlkZXMiLCJzbGlkZXNQZXJTZWN0aW9uIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJyb3ciLCJnZXQiLCJhcHBlbmRDaGlsZCIsImVtcHR5Iiwid2lkdGgiLCJkaXNwbGF5IiwiY2hlY2tSZXNwb25zaXZlIiwiaW5pdGlhbCIsImZvcmNlVXBkYXRlIiwiYnJlYWtwb2ludCIsInRhcmdldEJyZWFrcG9pbnQiLCJyZXNwb25kVG9XaWR0aCIsInRyaWdnZXJCcmVha3BvaW50Iiwic2xpZGVyV2lkdGgiLCJpbm5lcldpZHRoIiwibWluIiwiaGFzT3duUHJvcGVydHkiLCJ1bnNsaWNrIiwicmVmcmVzaCIsInRyaWdnZXIiLCJldmVudCIsImRvbnRBbmltYXRlIiwiaW5kZXhPZmZzZXQiLCJ1bmV2ZW5PZmZzZXQiLCIkdGFyZ2V0IiwiY3VycmVudFRhcmdldCIsImlzIiwicHJldmVudERlZmF1bHQiLCJjbG9zZXN0IiwibWVzc2FnZSIsImNoZWNrTmF2aWdhYmxlIiwibmF2aWdhYmxlcyIsInByZXZOYXZpZ2FibGUiLCJnZXROYXZpZ2FibGVJbmRleGVzIiwibiIsImNsZWFuVXBFdmVudHMiLCJvZmYiLCJpbnRlcnJ1cHQiLCJ2aXNpYmlsaXR5IiwiY2xlYW5VcFNsaWRlRXZlbnRzIiwib3JpZW50YXRpb25DaGFuZ2UiLCJyZXNpemUiLCJjbGVhblVwUm93cyIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInN0b3BQcm9wYWdhdGlvbiIsImRlc3Ryb3kiLCJyZW1vdmUiLCJmYWRlU2xpZGUiLCJzbGlkZUluZGV4Iiwib3BhY2l0eSIsImZhZGVTbGlkZU91dCIsImZpbHRlclNsaWRlcyIsInNsaWNrRmlsdGVyIiwiZmlsdGVyIiwiZm9jdXNIYW5kbGVyIiwib24iLCIkc2YiLCJnZXRDdXJyZW50Iiwic2xpY2tDdXJyZW50U2xpZGUiLCJicmVha1BvaW50IiwiY291bnRlciIsInBhZ2VyUXR5IiwiZ2V0TGVmdCIsInZlcnRpY2FsSGVpZ2h0IiwidGFyZ2V0U2xpZGUiLCJjb2VmIiwidmVydGljYWxPZmZzZXQiLCJmbG9vciIsIm9mZnNldExlZnQiLCJvdXRlcldpZHRoIiwiZ2V0T3B0aW9uIiwic2xpY2tHZXRPcHRpb24iLCJvcHRpb24iLCJtYXgiLCJpbmRleGVzIiwicHVzaCIsImdldFNsaWNrIiwiZ2V0U2xpZGVDb3VudCIsInNsaWRlc1RyYXZlcnNlZCIsInN3aXBlZFNsaWRlIiwiY2VudGVyT2Zmc2V0IiwiYWJzIiwiZ29UbyIsInNsaWNrR29UbyIsInBhcnNlSW50IiwiY3JlYXRpb24iLCJoYXNDbGFzcyIsInNldFByb3BzIiwic3RhcnRMb2FkIiwibG9hZFNsaWRlciIsImluaXRpYWxpemVFdmVudHMiLCJ1cGRhdGVBcnJvd3MiLCJpbml0QURBIiwibnVtRG90R3JvdXBzIiwidGFiQ29udHJvbEluZGV4ZXMiLCJ2YWwiLCJzbGlkZUNvbnRyb2xJbmRleCIsImluZGV4T2YiLCJyb2xlIiwiaWQiLCJhcmlhLWRlc2NyaWJlZGJ5IiwibWFwcGVkU2xpZGVJbmRleCIsImFyaWEtY29udHJvbHMiLCJhcmlhLWxhYmVsIiwiYXJpYS1zZWxlY3RlZCIsImVuZCIsImluaXRBcnJvd0V2ZW50cyIsImluaXREb3RFdmVudHMiLCJpbml0U2xpZGVFdmVudHMiLCJhY3Rpb24iLCJpbml0VUkiLCJzaG93IiwidGFnTmFtZSIsIm1hdGNoIiwia2V5Q29kZSIsImxvYWRJbWFnZXMiLCJpbWFnZXNTY29wZSIsImltYWdlIiwiaW1hZ2VTb3VyY2UiLCJpbWFnZVNyY1NldCIsImltYWdlU2l6ZXMiLCJpbWFnZVRvTG9hZCIsIm9ubG9hZCIsIm9uZXJyb3IiLCJzcmMiLCJsb2FkUmFuZ2UiLCJjbG9uZVJhbmdlIiwicmFuZ2VTdGFydCIsInJhbmdlRW5kIiwic2xpY2UiLCJwcmV2U2xpZGUiLCJuZXh0U2xpZGUiLCJwcm9ncmVzc2l2ZUxhenlMb2FkIiwibmV4dCIsInNsaWNrTmV4dCIsInBhdXNlIiwic2xpY2tQYXVzZSIsInBsYXkiLCJzbGlja1BsYXkiLCJwb3N0U2xpZGUiLCIkY3VycmVudFNsaWRlIiwiZm9jdXMiLCJwcmV2Iiwic2xpY2tQcmV2IiwidHJ5Q291bnQiLCIkaW1nc1RvTG9hZCIsImluaXRpYWxpemluZyIsImxhc3RWaXNpYmxlSW5kZXgiLCJjdXJyZW50QnJlYWtwb2ludCIsImwiLCJyZXNwb25zaXZlU2V0dGluZ3MiLCJ0eXBlIiwic3BsaWNlIiwic29ydCIsImNsZWFyVGltZW91dCIsIndpbmRvd0RlbGF5IiwicmVtb3ZlU2xpZGUiLCJzbGlja1JlbW92ZSIsInJlbW92ZUJlZm9yZSIsInJlbW92ZUFsbCIsInNldENTUyIsInBvc2l0aW9uIiwieCIsInkiLCJwb3NpdGlvblByb3BzIiwic2V0RGltZW5zaW9ucyIsInBhZGRpbmciLCJvZmZzZXQiLCJzZXRGYWRlIiwicmlnaHQiLCJzZXRIZWlnaHQiLCJzZXRPcHRpb24iLCJzbGlja1NldE9wdGlvbiIsIml0ZW0iLCJ2YWx1ZSIsImFyZ3VtZW50cyIsIm9wdCIsImJvZHlTdHlsZSIsImJvZHkiLCJzdHlsZSIsInVuZGVmaW5lZCIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwibXNUcmFuc2l0aW9uIiwiT1RyYW5zZm9ybSIsInBlcnNwZWN0aXZlUHJvcGVydHkiLCJ3ZWJraXRQZXJzcGVjdGl2ZSIsIk1velRyYW5zZm9ybSIsIk1velBlcnNwZWN0aXZlIiwid2Via2l0VHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm0iLCJhbGxTbGlkZXMiLCJyZW1haW5kZXIiLCJldmVuQ29lZiIsImluZmluaXRlQ291bnQiLCJjbG9uZSIsInRvZ2dsZSIsInRhcmdldEVsZW1lbnQiLCJwYXJlbnRzIiwic3luYyIsImFuaW1TbGlkZSIsIm9sZFNsaWRlIiwic2xpZGVMZWZ0IiwibmF2VGFyZ2V0IiwiaGlkZSIsInN3aXBlRGlyZWN0aW9uIiwieERpc3QiLCJ5RGlzdCIsInIiLCJzd2lwZUFuZ2xlIiwic3RhcnRYIiwiY3VyWCIsInN0YXJ0WSIsImN1clkiLCJhdGFuMiIsInJvdW5kIiwiUEkiLCJzd2lwZUVuZCIsInN3aXBlTGVuZ3RoIiwiZWRnZUhpdCIsIm1pblN3aXBlIiwiZmluZ2VyQ291bnQiLCJvcmlnaW5hbEV2ZW50IiwidG91Y2hlcyIsInN3aXBlU3RhcnQiLCJzd2lwZU1vdmUiLCJjdXJMZWZ0IiwicG9zaXRpb25PZmZzZXQiLCJ2ZXJ0aWNhbFN3aXBlTGVuZ3RoIiwicGFnZVgiLCJjbGllbnRYIiwicGFnZVkiLCJjbGllbnRZIiwic3FydCIsInBvdyIsInVuZmlsdGVyU2xpZGVzIiwic2xpY2tVbmZpbHRlciIsImZyb21CcmVha3BvaW50IiwiZm4iLCJyZXQiLCJhcmdzIiwiQXJyYXkiLCJhcHBseSIsIiRqc2NvbXAiLCJzY29wZSIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydGllcyIsImUiLCJwIiwic2V0IiwiVHlwZUVycm9yIiwiZ2V0R2xvYmFsIiwiZ2xvYmFsIiwiU1lNQk9MX1BSRUZJWCIsImluaXRTeW1ib2wiLCJTeW1ib2wiLCJzeW1ib2xDb3VudGVyXyIsImluaXRTeW1ib2xJdGVyYXRvciIsIml0ZXJhdG9yIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcnJheUl0ZXJhdG9yIiwiaXRlcmF0b3JQcm90b3R5cGUiLCJkb25lIiwiYXJyYXkiLCJpdGVyYXRvckZyb21BcnJheSIsIlN0cmluZyIsIm0iLCJ1IiwicG9seWZpbGwiLCJzcGxpdCIsIiRqc2NvbXAkdGhpcyIsImFuaW1lIiwiaCIsImNvbCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJkIiwiZiIsImsiLCJyZWR1Y2UiLCJjb25jYXQiLCJhcnIiLCJzdHIiLCJOb2RlTGlzdCIsIkhUTUxDb2xsZWN0aW9uIiwic29tZSIsIkMiLCJEIiwieiIsInVuZCIsIlQiLCJyZXBsYWNlIiwiZXhlYyIsIlUiLCJWIiwiSSIsImZuYyIsInRvdGFsIiwiRSIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwidG9Mb3dlckNhc2UiLCJKIiwiZG9tIiwiVyIsImdldEF0dHJpYnV0ZSIsInN2ZyIsIlgiLCJLIiwiTCIsInBhcnNlRmxvYXQiLCJGIiwiTSIsInBvaW50cyIsIm51bWJlck9mSXRlbXMiLCJnZXRJdGVtIiwiTiIsImdldFRvdGFsTGVuZ3RoIiwiWSIsImVsIiwiZ2V0UG9pbnRBdExlbmd0aCIsInByb3BlcnR5IiwiTyIsInB0aCIsInRvdGFsTGVuZ3RoIiwicmdiIiwiaGV4IiwiaHNsIiwic3Vic3RyIiwib3JpZ2luYWwiLCJudW1iZXJzIiwibWFwIiwiTnVtYmVyIiwic3RyaW5ncyIsIlAiLCJaIiwiYWEiLCJvYmoiLCJkZWxheSIsImJhIiwiY2EiLCJBIiwiUSIsImRhIiwidHdlZW5zIiwibmFtZSIsInRvIiwidyIsImZyb20iLCJzdGFydCIsImVsYXN0aWNpdHkiLCJpc1BhdGgiLCJpc0NvbG9yIiwiZWEiLCJhbmltYXRhYmxlIiwiUiIsImZhIiwiZ2EiLCJTIiwidGFyZ2V0cyIsImFuaW1hdGFibGVzIiwiYW5pbWF0aW9ucyIsInEiLCJQcm9taXNlIiwiZyIsInJldmVyc2VkIiwiaXNOYU4iLCJ0IiwiaGEiLCJjdXJyZW50VmFsdWUiLCJrZXlzIiwiSCIsImpvaW4iLCJjdXJyZW50VGltZSIsInByb2dyZXNzIiwicmVtYWluaW5nIiwidiIsIkciLCJzZWVrIiwiYmVnYW4iLCJjb21wbGV0ZWQiLCJyZXNldCIsImxvb3AiLCJ0aWNrIiwiQiIsImlhIiwicmV2ZXJzZSIsInJlc3RhcnQiLCJmaW5pc2hlZCIsInVwZGF0ZSIsImJlZ2luIiwicnVuIiwiaXNBcnJheSIsInRvU3RyaW5nIiwiU1ZHRWxlbWVudCIsIm5vZGVUeXBlIiwiRmxvYXQzMkFycmF5Iiwic2luIiwiYXNpbiIsIkluIiwiT3V0IiwiSW5PdXQiLCJsaW5lYXIiLCJmb3JFYWNoIiwiYXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwib2JqZWN0IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJ2ZXJzaW9uIiwicnVubmluZyIsImdldFZhbHVlIiwicGF0aCIsInNldERhc2hvZmZzZXQiLCJiZXppZXIiLCJlYXNpbmdzIiwidGltZWxpbmUiLCJyYW5kb20iLCJhbGxvd1BhZ2VTY3JvbGwiLCJzd2lwZVN0YXR1cyIsIk5PTkUiLCJjbGljayIsInRhcCIsIiR0aGlzIiwicGx1Z2luIiwiUExVR0lOX05TIiwiVG91Y2hTd2lwZSIsInRvdWNoU3RhcnQiLCJqcUV2ZW50IiwiZ2V0VG91Y2hJblByb2dyZXNzIiwiZXhjbHVkZWRFbGVtZW50cyIsIiRlbGVtZW50IiwicG9pbnRlclR5cGUiLCJmYWxsYmFja1RvTW91c2VFdmVudHMiLCJldnQiLCJwaGFzZSIsIlBIQVNFX1NUQVJUIiwicHJldmVudERlZmF1bHRFdmVudHMiLCJkaXN0YW5jZSIsInBpbmNoRGlyZWN0aW9uIiwic3RhcnRUb3VjaGVzRGlzdGFuY2UiLCJlbmRUb3VjaGVzRGlzdGFuY2UiLCJwaW5jaFpvb20iLCJwaW5jaERpc3RhbmNlIiwibWF4aW11bXNNYXAiLCJjcmVhdGVNYXhpbXVtc0RhdGEiLCJjYW5jZWxNdWx0aUZpbmdlclJlbGVhc2UiLCJjcmVhdGVGaW5nZXJEYXRhIiwiZmluZ2VycyIsIkFMTF9GSU5HRVJTIiwiaGFzUGluY2hlcyIsInN0YXJ0VGltZSIsImdldFRpbWVTdGFtcCIsImNhbGN1bGF0ZVRvdWNoZXNEaXN0YW5jZSIsImZpbmdlckRhdGEiLCJwaW5jaFN0YXR1cyIsInRyaWdnZXJIYW5kbGVyIiwiUEhBU0VfQ0FOQ0VMIiwiaG9sZCIsImhvbGRUaW1lb3V0IiwibG9uZ1RhcFRocmVzaG9sZCIsInNldFRvdWNoSW5Qcm9ncmVzcyIsIlBIQVNFX0VORCIsImluTXVsdGlGaW5nZXJSZWxlYXNlIiwiY3VycmVudEZpbmdlciIsInVwZGF0ZUZpbmdlckRhdGEiLCJlbmRUaW1lIiwiUEhBU0VfTU9WRSIsImNhbGN1bGF0ZVBpbmNoRGlyZWN0aW9uIiwiY2FsY3VsYXRlUGluY2hab29tIiwiY2FsY3VsYXRlRGlyZWN0aW9uIiwibGFzdCIsInZhbGlkYXRlRGVmYXVsdEV2ZW50IiwiY2FsY3VsYXRlRGlzdGFuY2UiLCJjYWxjdWxhdGVEdXJhdGlvbiIsInNldE1heERpc3RhbmNlIiwidHJpZ2dlck9uVG91Y2hFbmQiLCJ0cmlnZ2VyT25Ub3VjaExlYXZlIiwiaW5Cb3VuZHMiLCJib3VuZHMiLCJnZXRib3VuZHMiLCJpc0luQm91bmRzIiwiZ2V0TmV4dFBoYXNlIiwidG91Y2hFbmQiLCJzdGFydE11bHRpRmluZ2VyUmVsZWFzZSIsImZpbmdlckNvdW50QXRSZWxlYXNlIiwiZGlkU3dpcGVCYWNrVG9DYW5jZWwiLCJ2YWxpZGF0ZVN3aXBlRGlzdGFuY2UiLCJjYW5jZWxhYmxlIiwiaGFzVGFwIiwidHJpZ2dlckhhbmRsZXJGb3JHZXN0dXJlIiwiVEFQIiwidG91Y2hDYW5jZWwiLCJ0b3VjaExlYXZlIiwicmVtb3ZlTGlzdGVuZXJzIiwidW5iaW5kIiwiU1RBUlRfRVYiLCJDQU5DRUxfRVYiLCJNT1ZFX0VWIiwiRU5EX0VWIiwiTEVBVkVfRVYiLCJjdXJyZW50UGhhc2UiLCJuZXh0UGhhc2UiLCJ2YWxpZFRpbWUiLCJ2YWxpZGF0ZVN3aXBlVGltZSIsInZhbGlkRGlzdGFuY2UiLCJkaWRDYW5jZWwiLCJkaWRTd2lwZSIsImhhc1N3aXBlcyIsIlNXSVBFIiwiZGlkUGluY2giLCJQSU5DSCIsImRpZERvdWJsZVRhcCIsIkRPVUJMRV9UQVAiLCJkaWRMb25nVGFwIiwiTE9OR19UQVAiLCJkaWRUYXAiLCJnZXN0dXJlIiwidmFsaWRhdGVTd2lwZSIsInNpbmdsZVRhcFRpbWVvdXQiLCJMRUZUIiwiUklHSFQiLCJzd2lwZVJpZ2h0IiwiVVAiLCJzd2lwZVVwIiwiRE9XTiIsInN3aXBlRG93biIsInZhbGlkYXRlUGluY2giLCJJTiIsInBpbmNoSW4iLCJPVVQiLCJwaW5jaE91dCIsImhhc0RvdWJsZVRhcCIsImluRG91YmxlVGFwIiwiZG91YmxlVGFwU3RhcnRUaW1lIiwiZG91YmxlVGFwVGhyZXNob2xkIiwiZG91YmxlVGFwIiwibG9uZ1RhcCIsInZhbGlkIiwidGhyZXNob2xkIiwiY2FuY2VsbGVkIiwiY2FuY2VsVGhyZXNob2xkIiwiZ2V0TWF4RGlzdGFuY2UiLCJ2YWxpZGF0ZVBpbmNoRGlzdGFuY2UiLCJwaW5jaFRocmVzaG9sZCIsInJlc3VsdCIsIm1heFRpbWVUaHJlc2hvbGQiLCJhdXRvIiwiQVVUTyIsIkhPUklaT05UQUwiLCJWRVJUSUNBTCIsImhhc0NvcnJlY3RGaW5nZXJDb3VudCIsInZhbGlkYXRlRmluZ2VycyIsImhhc0VuZFBvaW50IiwidmFsaWRhdGVFbmRQb2ludCIsImhhc0NvcnJlY3REaXN0YW5jZSIsImhhc1ZhbGlkVGltZSIsImhhc1ZhbGlkRGlzdGFuY2UiLCJTVVBQT1JUU19UT1VDSCIsImhhc0xvbmdUYXAiLCJ2YWxpZGF0ZURvdWJsZVRhcCIsInZhbGlkYXRlVGFwIiwidmFsaWRhdGVMb25nVGFwIiwiRE9VQkxFX1RBUF9USFJFU0hPTEQiLCJwcmV2aW91c1RvdWNoRW5kVGltZSIsIndpdGhpblRocmVzaG9sZCIsImRpZmYiLCJmaW5nZXJSZWxlYXNlVGhyZXNob2xkIiwiYmluZCIsImlkZW50aWZpZXIiLCJnZXRGaW5nZXJEYXRhIiwibWF4RGF0YSIsImNyZWF0ZU1heGltdW1WTyIsImRpciIsInN0YXJ0UG9pbnQiLCJlbmRQb2ludCIsImRpZmZYIiwiZGlmZlkiLCJzdGFydERpc3RhbmNlIiwiZW5kRGlzdGFuY2UiLCJwZXJjZW50IiwidG9GaXhlZCIsImNhbGN1bGF0ZUFuZ2xlIiwiYW5nbGUiLCJjb21wYXJlUG9pbnRzIiwiRGF0ZSIsImdldFRpbWUiLCJib3R0b20iLCJwb2ludCIsInBvaW50QSIsInBvaW50QiIsInVzZVRvdWNoRXZlbnRzIiwiU1VQUE9SVFNfUE9JTlRFUiIsIlNVUFBPUlRTX1BPSU5URVJfSUUxMCIsImVycm9yIiwiZW5hYmxlIiwiZGlzYWJsZSIsIlZFUlNJT04iLCJuYXZpZ2F0b3IiLCJtc1BvaW50ZXJFbmFibGVkIiwicG9pbnRlckVuYWJsZWQiLCJtZXRob2QiLCJwaGFzZXMiLCJkaXJlY3Rpb25zIiwicGFnZVNjcm9sbCIsIk9ORSIsIlRXTyIsIlRIUkVFIiwiRk9VUiIsIkZJVkUiLCJBTEwiLCJhdXRvU2xpZGUiLCJzaWJsaW5ncyIsInJlYWR5IiwiZmFkZU91dCIsImh0bWwiLCJidGNfdXNkIiwiYXZnIiwiZXRoX3VzZCIsImZhZGVJbiIsInRvZ2dsZUNsYXNzIiwic2liSSIsImhvdmVyIiwic2Nyb2xsIiwic2Nyb2xsVG9wIiwic2IiLCJtcCIsImNvbnNvbGUiLCJsb2ciLCJyZWN0cyIsInNsaWRlVG9nZ2xlIiwic2Vjb25kIiwibWludXRlIiwiaG91ciIsImRheSIsImNvdW50RG93biIsInByaWNlIiwia2V5dXAiLCJyZXMiLCJzdG9wVmlkZW8iLCJwbGF5ZXIiLCJ2aWRTcmMiLCJwcm9wIiwibG9jYXRpb24iLCJwYXRobmFtZSIsImhvc3RuYW1lIiwiaGFzaCIsInNsaWRlVXAiLCJhbmltQ3ljbGVzIiwiYW5pbUN5Y2xlczEiLCJmaXJzdERpYXJncmFtczEiLCJmaXJzdERpYXJncmFtcyJdLCJtYXBwaW5ncyI6IkFBQUEsY0FtQkUsU0FBU0EsR0FFZSxrQkFBWEMsU0FBeUJBLE9BQU9DLElBQ3ZDRCxRQUFRLFVBQVdELEdBQ08sbUJBQVpHLFNBQ2RDLE9BQU9ELFFBQVVILEVBQVFLLFFBQVEsV0FFakNMLEVBQVFNLFNBR2QsU0FBU0MsR0FFUCxHQUFJQyxHQUFRQyxPQUFPRCxTQUVuQkEsR0FBUyxXQUlMLFFBQVNBLEdBQU1FLEVBQVNDLEdBRXBCLEdBQWNDLEdBQVZDLEVBQUlDLElBRVJELEdBQUVFLFVBQ0VDLGVBQWUsRUFDZkMsZ0JBQWdCLEVBQ2hCQyxhQUFjWCxFQUFFRyxHQUNoQlMsV0FBWVosRUFBRUcsR0FDZFUsUUFBUSxFQUNSQyxTQUFVLEtBQ1ZDLFVBQVcsbUZBQ1hDLFVBQVcsMkVBQ1hDLFVBQVUsRUFDVkMsY0FBZSxJQUNmQyxZQUFZLEVBQ1pDLGNBQWUsT0FDZkMsUUFBUyxPQUNUQyxhQUFjLFNBQVNDLEVBQVFDLEdBQzNCLE1BQU94QixHQUFFLDRCQUE0QnlCLEtBQUtELEVBQUksSUFFbERFLE1BQU0sRUFDTkMsVUFBVyxhQUNYQyxXQUFXLEVBQ1hDLE9BQVEsU0FDUkMsYUFBYyxJQUNkQyxNQUFNLEVBQ05DLGVBQWUsRUFDZkMsZUFBZSxFQUNmQyxVQUFVLEVBQ1ZDLGFBQWMs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QUFJLEVBRUpzTCxFQUFJLEVBRUptcEIsRUFBa0IzcUIsWUFBWSxXQUM3QndCLEdBQUssR0FDTmtwQixFQUFZeDBCLEdBQUdzVSxPQUNmaEosS0FFQXZCLGNBQWMwcUIsSUFHZixLQUVDQyxFQUFpQjVxQixZQUFZLFdBQzVCOUosR0FBSyxHQUNOdTBCLEVBQVd2MEIsR0FBR3NVLE9BQ2R0VSxLQUVBK0osY0FBYzJxQixJQUdmIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLypcbiAgICAgXyBfICAgICAgXyAgICAgICBfXG4gX19ffCAoXykgX19ffCB8IF9fICAoXylfX19cbi8gX198IHwgfC8gX198IHwvIC8gIHwgLyBfX3xcblxcX18gXFwgfCB8IChfX3wgICA8IF8gfCBcXF9fIFxcXG58X19fL198X3xcXF9fX3xffFxcXyhfKS8gfF9fXy9cbiAgICAgICAgICAgICAgICAgICB8X18vXG5cbiBWZXJzaW9uOiAxLjguMFxuICBBdXRob3I6IEtlbiBXaGVlbGVyXG4gV2Vic2l0ZTogaHR0cDovL2tlbndoZWVsZXIuZ2l0aHViLmlvXG4gICAgRG9jczogaHR0cDovL2tlbndoZWVsZXIuZ2l0aHViLmlvL3NsaWNrXG4gICAgUmVwbzogaHR0cDovL2dpdGh1Yi5jb20va2Vud2hlZWxlci9zbGlja1xuICBJc3N1ZXM6IGh0dHA6Ly9naXRodWIuY29tL2tlbndoZWVsZXIvc2xpY2svaXNzdWVzXG5cbiAqL1xuLyogZ2xvYmFsIHdpbmRvdywgZG9jdW1lbnQsIGRlZmluZSwgalF1ZXJ5LCBzZXRJbnRlcnZhbCwgY2xlYXJJbnRlcnZhbCAqL1xuOyhmdW5jdGlvbihmYWN0b3J5KSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgZGVmaW5lKFsnanF1ZXJ5J10sIGZhY3RvcnkpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCdqcXVlcnknKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZmFjdG9yeShqUXVlcnkpO1xuICAgIH1cblxufShmdW5jdGlvbigkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciBTbGljayA9IHdpbmRvdy5TbGljayB8fCB7fTtcblxuICAgIFNsaWNrID0gKGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBpbnN0YW5jZVVpZCA9IDA7XG5cbiAgICAgICAgZnVuY3Rpb24gU2xpY2soZWxlbWVudCwgc2V0dGluZ3MpIHtcblxuICAgICAgICAgICAgdmFyIF8gPSB0aGlzLCBkYXRhU2V0dGluZ3M7XG5cbiAgICAgICAgICAgIF8uZGVmYXVsdHMgPSB7XG4gICAgICAgICAgICAgICAgYWNjZXNzaWJpbGl0eTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhZGFwdGl2ZUhlaWdodDogZmFsc2UsXG4gICAgICAgICAgICAgICAgYXBwZW5kQXJyb3dzOiAkKGVsZW1lbnQpLFxuICAgICAgICAgICAgICAgIGFwcGVuZERvdHM6ICQoZWxlbWVudCksXG4gICAgICAgICAgICAgICAgYXJyb3dzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFzTmF2Rm9yOiBudWxsLFxuICAgICAgICAgICAgICAgIHByZXZBcnJvdzogJzxidXR0b24gY2xhc3M9XCJzbGljay1wcmV2XCIgYXJpYS1sYWJlbD1cIlByZXZpb3VzXCIgdHlwZT1cImJ1dHRvblwiPlByZXZpb3VzPC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICBuZXh0QXJyb3c6ICc8YnV0dG9uIGNsYXNzPVwic2xpY2stbmV4dFwiIGFyaWEtbGFiZWw9XCJOZXh0XCIgdHlwZT1cImJ1dHRvblwiPk5leHQ8L2J1dHRvbj4nLFxuICAgICAgICAgICAgICAgIGF1dG9wbGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhdXRvcGxheVNwZWVkOiAzMDAwLFxuICAgICAgICAgICAgICAgIGNlbnRlck1vZGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNlbnRlclBhZGRpbmc6ICc1MHB4JyxcbiAgICAgICAgICAgICAgICBjc3NFYXNlOiAnZWFzZScsXG4gICAgICAgICAgICAgICAgY3VzdG9tUGFnaW5nOiBmdW5jdGlvbihzbGlkZXIsIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQoJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIC8+JykudGV4dChpICsgMSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkb3RzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkb3RzQ2xhc3M6ICdzbGljay1kb3RzJyxcbiAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgZWFzaW5nOiAnbGluZWFyJyxcbiAgICAgICAgICAgICAgICBlZGdlRnJpY3Rpb246IDAuMzUsXG4gICAgICAgICAgICAgICAgZmFkZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZm9jdXNPblNlbGVjdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgZm9jdXNPbkNoYW5nZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW5maW5pdGU6IHRydWUsXG4gICAgICAgICAgICAgICAgaW5pdGlhbFNsaWRlOiAwLFxuICAgICAgICAgICAgICAgIGxhenlMb2FkOiAnb25kZW1hbmQnLFxuICAgICAgICAgICAgICAgIG1vYmlsZUZpcnN0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYXVzZU9uSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgcGF1c2VPbkZvY3VzOiB0cnVlLFxuICAgICAgICAgICAgICAgIHBhdXNlT25Eb3RzSG92ZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHJlc3BvbmRUbzogJ3dpbmRvdycsXG4gICAgICAgICAgICAgICAgcmVzcG9uc2l2ZTogbnVsbCxcbiAgICAgICAgICAgICAgICByb3dzOiAxLFxuICAgICAgICAgICAgICAgIHJ0bDogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2xpZGU6ICcnLFxuICAgICAgICAgICAgICAgIHNsaWRlc1BlclJvdzogMSxcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgICAgICAgICAgc3BlZWQ6IDUwMCxcbiAgICAgICAgICAgICAgICBzd2lwZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzd2lwZVRvU2xpZGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHRvdWNoTW92ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0b3VjaFRocmVzaG9sZDogNSxcbiAgICAgICAgICAgICAgICB1c2VDU1M6IHRydWUsXG4gICAgICAgICAgICAgICAgdXNlVHJhbnNmb3JtOiB0cnVlLFxuICAgICAgICAgICAgICAgIHZhcmlhYmxlV2lkdGg6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHZlcnRpY2FsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbFN3aXBpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdhaXRGb3JBbmltYXRlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHpJbmRleDogMTAwMFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgXy5pbml0aWFscyA9IHtcbiAgICAgICAgICAgICAgICBhbmltYXRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGRyYWdnaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhdXRvUGxheVRpbWVyOiBudWxsLFxuICAgICAgICAgICAgICAgIGN1cnJlbnREaXJlY3Rpb246IDAsXG4gICAgICAgICAgICAgICAgY3VycmVudExlZnQ6IG51bGwsXG4gICAgICAgICAgICAgICAgY3VycmVudFNsaWRlOiAwLFxuICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogMSxcbiAgICAgICAgICAgICAgICAkZG90czogbnVsbCxcbiAgICAgICAgICAgICAgICBsaXN0V2lkdGg6IG51bGwsXG4gICAgICAgICAgICAgICAgbGlzdEhlaWdodDogbnVsbCxcbiAgICAgICAgICAgICAgICBsb2FkSW5kZXg6IDAsXG4gICAgICAgICAgICAgICAgJG5leHRBcnJvdzogbnVsbCxcbiAgICAgICAgICAgICAgICAkcHJldkFycm93OiBudWxsLFxuICAgICAgICAgICAgICAgIHNjcm9sbGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2xpZGVDb3VudDogbnVsbCxcbiAgICAgICAgICAgICAgICBzbGlkZVdpZHRoOiBudWxsLFxuICAgICAgICAgICAgICAgICRzbGlkZVRyYWNrOiBudWxsLFxuICAgICAgICAgICAgICAgICRzbGlkZXM6IG51bGwsXG4gICAgICAgICAgICAgICAgc2xpZGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2xpZGVPZmZzZXQ6IDAsXG4gICAgICAgICAgICAgICAgc3dpcGVMZWZ0OiBudWxsLFxuICAgICAgICAgICAgICAgIHN3aXBpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICRsaXN0OiBudWxsLFxuICAgICAgICAgICAgICAgIHRvdWNoT2JqZWN0OiB7fSxcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1zRW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgdW5zbGlja2VkOiBmYWxzZVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgJC5leHRlbmQoXywgXy5pbml0aWFscyk7XG5cbiAgICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9IG51bGw7XG4gICAgICAgICAgICBfLmFuaW1UeXBlID0gbnVsbDtcbiAgICAgICAgICAgIF8uYW5pbVByb3AgPSBudWxsO1xuICAgICAgICAgICAgXy5icmVha3BvaW50cyA9IFtdO1xuICAgICAgICAgICAgXy5icmVha3BvaW50U2V0dGluZ3MgPSBbXTtcbiAgICAgICAgICAgIF8uY3NzVHJhbnNpdGlvbnMgPSBmYWxzZTtcbiAgICAgICAgICAgIF8uZm9jdXNzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIF8uaW50ZXJydXB0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIF8uaGlkZGVuID0gJ2hpZGRlbic7XG4gICAgICAgICAgICBfLnBhdXNlZCA9IHRydWU7XG4gICAgICAgICAgICBfLnBvc2l0aW9uUHJvcCA9IG51bGw7XG4gICAgICAgICAgICBfLnJlc3BvbmRUbyA9IG51bGw7XG4gICAgICAgICAgICBfLnJvd0NvdW50ID0gMTtcbiAgICAgICAgICAgIF8uc2hvdWxkQ2xpY2sgPSB0cnVlO1xuICAgICAgICAgICAgXy4kc2xpZGVyID0gJChlbGVtZW50KTtcbiAgICAgICAgICAgIF8uJHNsaWRlc0NhY2hlID0gbnVsbDtcbiAgICAgICAgICAgIF8udHJhbnNmb3JtVHlwZSA9IG51bGw7XG4gICAgICAgICAgICBfLnRyYW5zaXRpb25UeXBlID0gbnVsbDtcbiAgICAgICAgICAgIF8udmlzaWJpbGl0eUNoYW5nZSA9ICd2aXNpYmlsaXR5Y2hhbmdlJztcbiAgICAgICAgICAgIF8ud2luZG93V2lkdGggPSAwO1xuICAgICAgICAgICAgXy53aW5kb3dUaW1lciA9IG51bGw7XG5cbiAgICAgICAgICAgIGRhdGFTZXR0aW5ncyA9ICQoZWxlbWVudCkuZGF0YSgnc2xpY2snKSB8fCB7fTtcblxuICAgICAgICAgICAgXy5vcHRpb25zID0gJC5leHRlbmQoe30sIF8uZGVmYXVsdHMsIHNldHRpbmdzLCBkYXRhU2V0dGluZ3MpO1xuXG4gICAgICAgICAgICBfLmN1cnJlbnRTbGlkZSA9IF8ub3B0aW9ucy5pbml0aWFsU2xpZGU7XG5cbiAgICAgICAgICAgIF8ub3JpZ2luYWxTZXR0aW5ncyA9IF8ub3B0aW9ucztcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5tb3pIaWRkZW4gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgXy5oaWRkZW4gPSAnbW96SGlkZGVuJztcbiAgICAgICAgICAgICAgICBfLnZpc2liaWxpdHlDaGFuZ2UgPSAnbW96dmlzaWJpbGl0eWNoYW5nZSc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBkb2N1bWVudC53ZWJraXRIaWRkZW4gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgXy5oaWRkZW4gPSAnd2Via2l0SGlkZGVuJztcbiAgICAgICAgICAgICAgICBfLnZpc2liaWxpdHlDaGFuZ2UgPSAnd2Via2l0dmlzaWJpbGl0eWNoYW5nZSc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF8uYXV0b1BsYXkgPSAkLnByb3h5KF8uYXV0b1BsYXksIF8pO1xuICAgICAgICAgICAgXy5hdXRvUGxheUNsZWFyID0gJC5wcm94eShfLmF1dG9QbGF5Q2xlYXIsIF8pO1xuICAgICAgICAgICAgXy5hdXRvUGxheUl0ZXJhdG9yID0gJC5wcm94eShfLmF1dG9QbGF5SXRlcmF0b3IsIF8pO1xuICAgICAgICAgICAgXy5jaGFuZ2VTbGlkZSA9ICQucHJveHkoXy5jaGFuZ2VTbGlkZSwgXyk7XG4gICAgICAgICAgICBfLmNsaWNrSGFuZGxlciA9ICQucHJveHkoXy5jbGlja0hhbmRsZXIsIF8pO1xuICAgICAgICAgICAgXy5zZWxlY3RIYW5kbGVyID0gJC5wcm94eShfLnNlbGVjdEhhbmRsZXIsIF8pO1xuICAgICAgICAgICAgXy5zZXRQb3NpdGlvbiA9ICQucHJveHkoXy5zZXRQb3NpdGlvbiwgXyk7XG4gICAgICAgICAgICBfLnN3aXBlSGFuZGxlciA9ICQucHJveHkoXy5zd2lwZUhhbmRsZXIsIF8pO1xuICAgICAgICAgICAgXy5kcmFnSGFuZGxlciA9ICQucHJveHkoXy5kcmFnSGFuZGxlciwgXyk7XG4gICAgICAgICAgICBfLmtleUhhbmRsZXIgPSAkLnByb3h5KF8ua2V5SGFuZGxlciwgXyk7XG5cbiAgICAgICAgICAgIF8uaW5zdGFuY2VVaWQgPSBpbnN0YW5jZVVpZCsrO1xuXG4gICAgICAgICAgICAvLyBBIHNpbXBsZSB3YXkgdG8gY2hlY2sgZm9yIEhUTUwgc3RyaW5nc1xuICAgICAgICAgICAgLy8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKG11c3Qgc3RhcnQgd2l0aCA8KVxuICAgICAgICAgICAgLy8gRXh0cmFjdGVkIGZyb20galF1ZXJ5IHYxLjExIHNvdXJjZVxuICAgICAgICAgICAgXy5odG1sRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKikkLztcblxuXG4gICAgICAgICAgICBfLnJlZ2lzdGVyQnJlYWtwb2ludHMoKTtcbiAgICAgICAgICAgIF8uaW5pdCh0cnVlKTtcblxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFNsaWNrO1xuXG4gICAgfSgpKTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5hY3RpdmF0ZUFEQSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy4kc2xpZGVUcmFjay5maW5kKCcuc2xpY2stYWN0aXZlJykuYXR0cih7XG4gICAgICAgICAgICAnYXJpYS1oaWRkZW4nOiAnZmFsc2UnXG4gICAgICAgIH0pLmZpbmQoJ2EsIGlucHV0LCBidXR0b24sIHNlbGVjdCcpLmF0dHIoe1xuICAgICAgICAgICAgJ3RhYmluZGV4JzogJzAnXG4gICAgICAgIH0pO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5hZGRTbGlkZSA9IFNsaWNrLnByb3RvdHlwZS5zbGlja0FkZCA9IGZ1bmN0aW9uKG1hcmt1cCwgaW5kZXgsIGFkZEJlZm9yZSkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBpZiAodHlwZW9mKGluZGV4KSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgICAgICBhZGRCZWZvcmUgPSBpbmRleDtcbiAgICAgICAgICAgIGluZGV4ID0gbnVsbDtcbiAgICAgICAgfSBlbHNlIGlmIChpbmRleCA8IDAgfHwgKGluZGV4ID49IF8uc2xpZGVDb3VudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIF8udW5sb2FkKCk7XG5cbiAgICAgICAgaWYgKHR5cGVvZihpbmRleCkgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDAgJiYgXy4kc2xpZGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICQobWFya3VwKS5hcHBlbmRUbyhfLiRzbGlkZVRyYWNrKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYWRkQmVmb3JlKSB7XG4gICAgICAgICAgICAgICAgJChtYXJrdXApLmluc2VydEJlZm9yZShfLiRzbGlkZXMuZXEoaW5kZXgpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJChtYXJrdXApLmluc2VydEFmdGVyKF8uJHNsaWRlcy5lcShpbmRleCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGFkZEJlZm9yZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICQobWFya3VwKS5wcmVwZW5kVG8oXy4kc2xpZGVUcmFjayk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICQobWFya3VwKS5hcHBlbmRUbyhfLiRzbGlkZVRyYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIF8uJHNsaWRlcyA9IF8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKTtcblxuICAgICAgICBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCk7XG5cbiAgICAgICAgXy4kc2xpZGVUcmFjay5hcHBlbmQoXy4kc2xpZGVzKTtcblxuICAgICAgICBfLiRzbGlkZXMuZWFjaChmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xuICAgICAgICAgICAgJChlbGVtZW50KS5hdHRyKCdkYXRhLXNsaWNrLWluZGV4JywgaW5kZXgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBfLiRzbGlkZXNDYWNoZSA9IF8uJHNsaWRlcztcblxuICAgICAgICBfLnJlaW5pdCgpO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5hbmltYXRlSGVpZ2h0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBfID0gdGhpcztcbiAgICAgICAgaWYgKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPT09IDEgJiYgXy5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ID09PSB0cnVlICYmIF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXRIZWlnaHQgPSBfLiRzbGlkZXMuZXEoXy5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KHRydWUpO1xuICAgICAgICAgICAgXy4kbGlzdC5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHRhcmdldEhlaWdodFxuICAgICAgICAgICAgfSwgXy5vcHRpb25zLnNwZWVkKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuYW5pbWF0ZVNsaWRlID0gZnVuY3Rpb24odGFyZ2V0TGVmdCwgY2FsbGJhY2spIHtcblxuICAgICAgICB2YXIgYW5pbVByb3BzID0ge30sXG4gICAgICAgICAgICBfID0gdGhpcztcblxuICAgICAgICBfLmFuaW1hdGVIZWlnaHQoKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLnJ0bCA9PT0gdHJ1ZSAmJiBfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0YXJnZXRMZWZ0ID0gLXRhcmdldExlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF8udHJhbnNmb3Jtc0VuYWJsZWQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IHRhcmdldExlZnRcbiAgICAgICAgICAgICAgICB9LCBfLm9wdGlvbnMuc3BlZWQsIF8ub3B0aW9ucy5lYXNpbmcsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgXy4kc2xpZGVUcmFjay5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiB0YXJnZXRMZWZ0XG4gICAgICAgICAgICAgICAgfSwgXy5vcHRpb25zLnNwZWVkLCBfLm9wdGlvbnMuZWFzaW5nLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgaWYgKF8uY3NzVHJhbnNpdGlvbnMgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy5ydGwgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgXy5jdXJyZW50TGVmdCA9IC0oXy5jdXJyZW50TGVmdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICQoe1xuICAgICAgICAgICAgICAgICAgICBhbmltU3RhcnQ6IF8uY3VycmVudExlZnRcbiAgICAgICAgICAgICAgICB9KS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgYW5pbVN0YXJ0OiB0YXJnZXRMZWZ0XG4gICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogXy5vcHRpb25zLnNwZWVkLFxuICAgICAgICAgICAgICAgICAgICBlYXNpbmc6IF8ub3B0aW9ucy5lYXNpbmcsXG4gICAgICAgICAgICAgICAgICAgIHN0ZXA6IGZ1bmN0aW9uKG5vdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm93ID0gTWF0aC5jZWlsKG5vdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuaW1Qcm9wc1tfLmFuaW1UeXBlXSA9ICd0cmFuc2xhdGUoJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdyArICdweCwgMHB4KSc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXy4kc2xpZGVUcmFjay5jc3MoYW5pbVByb3BzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5pbVByb3BzW18uYW5pbVR5cGVdID0gJ3RyYW5zbGF0ZSgwcHgsJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdyArICdweCknO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKGFuaW1Qcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmNhbGwoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgXy5hcHBseVRyYW5zaXRpb24oKTtcbiAgICAgICAgICAgICAgICB0YXJnZXRMZWZ0ID0gTWF0aC5jZWlsKHRhcmdldExlZnQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgYW5pbVByb3BzW18uYW5pbVR5cGVdID0gJ3RyYW5zbGF0ZTNkKCcgKyB0YXJnZXRMZWZ0ICsgJ3B4LCAwcHgsIDBweCknO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFuaW1Qcm9wc1tfLmFuaW1UeXBlXSA9ICd0cmFuc2xhdGUzZCgwcHgsJyArIHRhcmdldExlZnQgKyAncHgsIDBweCknO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfLiRzbGlkZVRyYWNrLmNzcyhhbmltUHJvcHMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIF8uZGlzYWJsZVRyYW5zaXRpb24oKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbCgpO1xuICAgICAgICAgICAgICAgICAgICB9LCBfLm9wdGlvbnMuc3BlZWQpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuZ2V0TmF2VGFyZ2V0ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgYXNOYXZGb3IgPSBfLm9wdGlvbnMuYXNOYXZGb3I7XG5cbiAgICAgICAgaWYgKCBhc05hdkZvciAmJiBhc05hdkZvciAhPT0gbnVsbCApIHtcbiAgICAgICAgICAgIGFzTmF2Rm9yID0gJChhc05hdkZvcikubm90KF8uJHNsaWRlcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYXNOYXZGb3I7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmFzTmF2Rm9yID0gZnVuY3Rpb24oaW5kZXgpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAgICAgICBhc05hdkZvciA9IF8uZ2V0TmF2VGFyZ2V0KCk7XG5cbiAgICAgICAgaWYgKCBhc05hdkZvciAhPT0gbnVsbCAmJiB0eXBlb2YgYXNOYXZGb3IgPT09ICdvYmplY3QnICkge1xuICAgICAgICAgICAgYXNOYXZGb3IuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5zbGljaygnZ2V0U2xpY2snKTtcbiAgICAgICAgICAgICAgICBpZighdGFyZ2V0LnVuc2xpY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuc2xpZGVIYW5kbGVyKGluZGV4LCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5hcHBseVRyYW5zaXRpb24gPSBmdW5jdGlvbihzbGlkZSkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIHRyYW5zaXRpb24gPSB7fTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uW18udHJhbnNpdGlvblR5cGVdID0gXy50cmFuc2Zvcm1UeXBlICsgJyAnICsgXy5vcHRpb25zLnNwZWVkICsgJ21zICcgKyBfLm9wdGlvbnMuY3NzRWFzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyYW5zaXRpb25bXy50cmFuc2l0aW9uVHlwZV0gPSAnb3BhY2l0eSAnICsgXy5vcHRpb25zLnNwZWVkICsgJ21zICcgKyBfLm9wdGlvbnMuY3NzRWFzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKHRyYW5zaXRpb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgXy4kc2xpZGVzLmVxKHNsaWRlKS5jc3ModHJhbnNpdGlvbik7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuYXV0b1BsYXkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy5hdXRvUGxheUNsZWFyKCk7XG5cbiAgICAgICAgaWYgKCBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICkge1xuICAgICAgICAgICAgXy5hdXRvUGxheVRpbWVyID0gc2V0SW50ZXJ2YWwoIF8uYXV0b1BsYXlJdGVyYXRvciwgXy5vcHRpb25zLmF1dG9wbGF5U3BlZWQgKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5hdXRvUGxheUNsZWFyID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLmF1dG9QbGF5VGltZXIpIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoXy5hdXRvUGxheVRpbWVyKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgc2xpZGVUbyA9IF8uY3VycmVudFNsaWRlICsgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO1xuXG4gICAgICAgIGlmICggIV8ucGF1c2VkICYmICFfLmludGVycnVwdGVkICYmICFfLmZvY3Vzc2VkICkge1xuXG4gICAgICAgICAgICBpZiAoIF8ub3B0aW9ucy5pbmZpbml0ZSA9PT0gZmFsc2UgKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoIF8uZGlyZWN0aW9uID09PSAxICYmICggXy5jdXJyZW50U2xpZGUgKyAxICkgPT09ICggXy5zbGlkZUNvdW50IC0gMSApKSB7XG4gICAgICAgICAgICAgICAgICAgIF8uZGlyZWN0aW9uID0gMDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBlbHNlIGlmICggXy5kaXJlY3Rpb24gPT09IDAgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgc2xpZGVUbyA9IF8uY3VycmVudFNsaWRlIC0gXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICggXy5jdXJyZW50U2xpZGUgLSAxID09PSAwICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgXy5kaXJlY3Rpb24gPSAxO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgXy5zbGlkZUhhbmRsZXIoIHNsaWRlVG8gKTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmJ1aWxkQXJyb3dzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuYXJyb3dzID09PSB0cnVlICkge1xuXG4gICAgICAgICAgICBfLiRwcmV2QXJyb3cgPSAkKF8ub3B0aW9ucy5wcmV2QXJyb3cpLmFkZENsYXNzKCdzbGljay1hcnJvdycpO1xuICAgICAgICAgICAgXy4kbmV4dEFycm93ID0gJChfLm9wdGlvbnMubmV4dEFycm93KS5hZGRDbGFzcygnc2xpY2stYXJyb3cnKTtcblxuICAgICAgICAgICAgaWYoIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKSB7XG5cbiAgICAgICAgICAgICAgICBfLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoJ3NsaWNrLWhpZGRlbicpLnJlbW92ZUF0dHIoJ2FyaWEtaGlkZGVuIHRhYmluZGV4Jyk7XG4gICAgICAgICAgICAgICAgXy4kbmV4dEFycm93LnJlbW92ZUNsYXNzKCdzbGljay1oaWRkZW4nKS5yZW1vdmVBdHRyKCdhcmlhLWhpZGRlbiB0YWJpbmRleCcpO1xuXG4gICAgICAgICAgICAgICAgaWYgKF8uaHRtbEV4cHIudGVzdChfLm9wdGlvbnMucHJldkFycm93KSkge1xuICAgICAgICAgICAgICAgICAgICBfLiRwcmV2QXJyb3cucHJlcGVuZFRvKF8ub3B0aW9ucy5hcHBlbmRBcnJvd3MpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChfLmh0bWxFeHByLnRlc3QoXy5vcHRpb25zLm5leHRBcnJvdykpIHtcbiAgICAgICAgICAgICAgICAgICAgXy4kbmV4dEFycm93LmFwcGVuZFRvKF8ub3B0aW9ucy5hcHBlbmRBcnJvd3MpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgIT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgXy4kcHJldkFycm93XG4gICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoJ3NsaWNrLWRpc2FibGVkJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdhcmlhLWRpc2FibGVkJywgJ3RydWUnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICBfLiRwcmV2QXJyb3cuYWRkKCBfLiRuZXh0QXJyb3cgKVxuXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2staGlkZGVuJylcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2FyaWEtZGlzYWJsZWQnOiAndHJ1ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAndGFiaW5kZXgnOiAnLTEnXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5idWlsZERvdHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAgICAgICBpLCBkb3Q7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5kb3RzID09PSB0cnVlKSB7XG5cbiAgICAgICAgICAgIF8uJHNsaWRlci5hZGRDbGFzcygnc2xpY2stZG90dGVkJyk7XG5cbiAgICAgICAgICAgIGRvdCA9ICQoJzx1bCAvPicpLmFkZENsYXNzKF8ub3B0aW9ucy5kb3RzQ2xhc3MpO1xuXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDw9IF8uZ2V0RG90Q291bnQoKTsgaSArPSAxKSB7XG4gICAgICAgICAgICAgICAgZG90LmFwcGVuZCgkKCc8bGkgLz4nKS5hcHBlbmQoXy5vcHRpb25zLmN1c3RvbVBhZ2luZy5jYWxsKHRoaXMsIF8sIGkpKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF8uJGRvdHMgPSBkb3QuYXBwZW5kVG8oXy5vcHRpb25zLmFwcGVuZERvdHMpO1xuXG4gICAgICAgICAgICBfLiRkb3RzLmZpbmQoJ2xpJykuZmlyc3QoKS5hZGRDbGFzcygnc2xpY2stYWN0aXZlJyk7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5idWlsZE91dCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBfLiRzbGlkZXMgPVxuICAgICAgICAgICAgXy4kc2xpZGVyXG4gICAgICAgICAgICAgICAgLmNoaWxkcmVuKCBfLm9wdGlvbnMuc2xpZGUgKyAnOm5vdCguc2xpY2stY2xvbmVkKScpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKCdzbGljay1zbGlkZScpO1xuXG4gICAgICAgIF8uc2xpZGVDb3VudCA9IF8uJHNsaWRlcy5sZW5ndGg7XG5cbiAgICAgICAgXy4kc2xpZGVzLmVhY2goZnVuY3Rpb24oaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgICQoZWxlbWVudClcbiAgICAgICAgICAgICAgICAuYXR0cignZGF0YS1zbGljay1pbmRleCcsIGluZGV4KVxuICAgICAgICAgICAgICAgIC5kYXRhKCdvcmlnaW5hbFN0eWxpbmcnLCAkKGVsZW1lbnQpLmF0dHIoJ3N0eWxlJykgfHwgJycpO1xuICAgICAgICB9KTtcblxuICAgICAgICBfLiRzbGlkZXIuYWRkQ2xhc3MoJ3NsaWNrLXNsaWRlcicpO1xuXG4gICAgICAgIF8uJHNsaWRlVHJhY2sgPSAoXy5zbGlkZUNvdW50ID09PSAwKSA/XG4gICAgICAgICAgICAkKCc8ZGl2IGNsYXNzPVwic2xpY2stdHJhY2tcIi8+JykuYXBwZW5kVG8oXy4kc2xpZGVyKSA6XG4gICAgICAgICAgICBfLiRzbGlkZXMud3JhcEFsbCgnPGRpdiBjbGFzcz1cInNsaWNrLXRyYWNrXCIvPicpLnBhcmVudCgpO1xuXG4gICAgICAgIF8uJGxpc3QgPSBfLiRzbGlkZVRyYWNrLndyYXAoXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cInNsaWNrLWxpc3RcIi8+JykucGFyZW50KCk7XG4gICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKCdvcGFjaXR5JywgMCk7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5jZW50ZXJNb2RlID09PSB0cnVlIHx8IF8ub3B0aW9ucy5zd2lwZVRvU2xpZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA9IDE7XG4gICAgICAgIH1cblxuICAgICAgICAkKCdpbWdbZGF0YS1sYXp5XScsIF8uJHNsaWRlcikubm90KCdbc3JjXScpLmFkZENsYXNzKCdzbGljay1sb2FkaW5nJyk7XG5cbiAgICAgICAgXy5zZXR1cEluZmluaXRlKCk7XG5cbiAgICAgICAgXy5idWlsZEFycm93cygpO1xuXG4gICAgICAgIF8uYnVpbGREb3RzKCk7XG5cbiAgICAgICAgXy51cGRhdGVEb3RzKCk7XG5cblxuICAgICAgICBfLnNldFNsaWRlQ2xhc3Nlcyh0eXBlb2YgXy5jdXJyZW50U2xpZGUgPT09ICdudW1iZXInID8gXy5jdXJyZW50U2xpZGUgOiAwKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmRyYWdnYWJsZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgXy4kbGlzdC5hZGRDbGFzcygnZHJhZ2dhYmxlJyk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuYnVpbGRSb3dzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLCBhLCBiLCBjLCBuZXdTbGlkZXMsIG51bU9mU2xpZGVzLCBvcmlnaW5hbFNsaWRlcyxzbGlkZXNQZXJTZWN0aW9uO1xuXG4gICAgICAgIG5ld1NsaWRlcyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgb3JpZ2luYWxTbGlkZXMgPSBfLiRzbGlkZXIuY2hpbGRyZW4oKTtcblxuICAgICAgICBpZihfLm9wdGlvbnMucm93cyA+IDEpIHtcblxuICAgICAgICAgICAgc2xpZGVzUGVyU2VjdGlvbiA9IF8ub3B0aW9ucy5zbGlkZXNQZXJSb3cgKiBfLm9wdGlvbnMucm93cztcbiAgICAgICAgICAgIG51bU9mU2xpZGVzID0gTWF0aC5jZWlsKFxuICAgICAgICAgICAgICAgIG9yaWdpbmFsU2xpZGVzLmxlbmd0aCAvIHNsaWRlc1BlclNlY3Rpb25cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGZvcihhID0gMDsgYSA8IG51bU9mU2xpZGVzOyBhKyspe1xuICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIGZvcihiID0gMDsgYiA8IF8ub3B0aW9ucy5yb3dzOyBiKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICBmb3IoYyA9IDA7IGMgPCBfLm9wdGlvbnMuc2xpZGVzUGVyUm93OyBjKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSAoYSAqIHNsaWRlc1BlclNlY3Rpb24gKyAoKGIgKiBfLm9wdGlvbnMuc2xpZGVzUGVyUm93KSArIGMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcmlnaW5hbFNsaWRlcy5nZXQodGFyZ2V0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChvcmlnaW5hbFNsaWRlcy5nZXQodGFyZ2V0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2xpZGUuYXBwZW5kQ2hpbGQocm93KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV3U2xpZGVzLmFwcGVuZENoaWxkKHNsaWRlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgXy4kc2xpZGVyLmVtcHR5KCkuYXBwZW5kKG5ld1NsaWRlcyk7XG4gICAgICAgICAgICBfLiRzbGlkZXIuY2hpbGRyZW4oKS5jaGlsZHJlbigpLmNoaWxkcmVuKClcbiAgICAgICAgICAgICAgICAuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJzooMTAwIC8gXy5vcHRpb25zLnNsaWRlc1BlclJvdykgKyAnJScsXG4gICAgICAgICAgICAgICAgICAgICdkaXNwbGF5JzogJ2lubGluZS1ibG9jaydcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmNoZWNrUmVzcG9uc2l2ZSA9IGZ1bmN0aW9uKGluaXRpYWwsIGZvcmNlVXBkYXRlKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgYnJlYWtwb2ludCwgdGFyZ2V0QnJlYWtwb2ludCwgcmVzcG9uZFRvV2lkdGgsIHRyaWdnZXJCcmVha3BvaW50ID0gZmFsc2U7XG4gICAgICAgIHZhciBzbGlkZXJXaWR0aCA9IF8uJHNsaWRlci53aWR0aCgpO1xuICAgICAgICB2YXIgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCB8fCAkKHdpbmRvdykud2lkdGgoKTtcblxuICAgICAgICBpZiAoXy5yZXNwb25kVG8gPT09ICd3aW5kb3cnKSB7XG4gICAgICAgICAgICByZXNwb25kVG9XaWR0aCA9IHdpbmRvd1dpZHRoO1xuICAgICAgICB9IGVsc2UgaWYgKF8ucmVzcG9uZFRvID09PSAnc2xpZGVyJykge1xuICAgICAgICAgICAgcmVzcG9uZFRvV2lkdGggPSBzbGlkZXJXaWR0aDtcbiAgICAgICAgfSBlbHNlIGlmIChfLnJlc3BvbmRUbyA9PT0gJ21pbicpIHtcbiAgICAgICAgICAgIHJlc3BvbmRUb1dpZHRoID0gTWF0aC5taW4od2luZG93V2lkdGgsIHNsaWRlcldpZHRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICggXy5vcHRpb25zLnJlc3BvbnNpdmUgJiZcbiAgICAgICAgICAgIF8ub3B0aW9ucy5yZXNwb25zaXZlLmxlbmd0aCAmJlxuICAgICAgICAgICAgXy5vcHRpb25zLnJlc3BvbnNpdmUgIT09IG51bGwpIHtcblxuICAgICAgICAgICAgdGFyZ2V0QnJlYWtwb2ludCA9IG51bGw7XG5cbiAgICAgICAgICAgIGZvciAoYnJlYWtwb2ludCBpbiBfLmJyZWFrcG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgaWYgKF8uYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkoYnJlYWtwb2ludCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF8ub3JpZ2luYWxTZXR0aW5ncy5tb2JpbGVGaXJzdCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25kVG9XaWR0aCA8IF8uYnJlYWtwb2ludHNbYnJlYWtwb2ludF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRCcmVha3BvaW50ID0gXy5icmVha3BvaW50c1ticmVha3BvaW50XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25kVG9XaWR0aCA+IF8uYnJlYWtwb2ludHNbYnJlYWtwb2ludF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRCcmVha3BvaW50ID0gXy5icmVha3BvaW50c1ticmVha3BvaW50XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRhcmdldEJyZWFrcG9pbnQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoXy5hY3RpdmVCcmVha3BvaW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXRCcmVha3BvaW50ICE9PSBfLmFjdGl2ZUJyZWFrcG9pbnQgfHwgZm9yY2VVcGRhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QnJlYWtwb2ludDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfLmJyZWFrcG9pbnRTZXR0aW5nc1t0YXJnZXRCcmVha3BvaW50XSA9PT0gJ3Vuc2xpY2snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXy51bnNsaWNrKHRhcmdldEJyZWFrcG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgXy5vcmlnaW5hbFNldHRpbmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLmJyZWFrcG9pbnRTZXR0aW5nc1tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEJyZWFrcG9pbnRdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLmN1cnJlbnRTbGlkZSA9IF8ub3B0aW9ucy5pbml0aWFsU2xpZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF8ucmVmcmVzaChpbml0aWFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWdnZXJCcmVha3BvaW50ID0gdGFyZ2V0QnJlYWtwb2ludDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9IHRhcmdldEJyZWFrcG9pbnQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfLmJyZWFrcG9pbnRTZXR0aW5nc1t0YXJnZXRCcmVha3BvaW50XSA9PT0gJ3Vuc2xpY2snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfLnVuc2xpY2sodGFyZ2V0QnJlYWtwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgXy5vcmlnaW5hbFNldHRpbmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF8uYnJlYWtwb2ludFNldHRpbmdzW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRCcmVha3BvaW50XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF8uY3VycmVudFNsaWRlID0gXy5vcHRpb25zLmluaXRpYWxTbGlkZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF8ucmVmcmVzaChpbml0aWFsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyQnJlYWtwb2ludCA9IHRhcmdldEJyZWFrcG9pbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoXy5hY3RpdmVCcmVha3BvaW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIF8ub3B0aW9ucyA9IF8ub3JpZ2luYWxTZXR0aW5ncztcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluaXRpYWwgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF8uY3VycmVudFNsaWRlID0gXy5vcHRpb25zLmluaXRpYWxTbGlkZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBfLnJlZnJlc2goaW5pdGlhbCk7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXJCcmVha3BvaW50ID0gdGFyZ2V0QnJlYWtwb2ludDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIG9ubHkgdHJpZ2dlciBicmVha3BvaW50cyBkdXJpbmcgYW4gYWN0dWFsIGJyZWFrLiBub3Qgb24gaW5pdGlhbGl6ZS5cbiAgICAgICAgICAgIGlmKCAhaW5pdGlhbCAmJiB0cmlnZ2VyQnJlYWtwb2ludCAhPT0gZmFsc2UgKSB7XG4gICAgICAgICAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ2JyZWFrcG9pbnQnLCBbXywgdHJpZ2dlckJyZWFrcG9pbnRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5jaGFuZ2VTbGlkZSA9IGZ1bmN0aW9uKGV2ZW50LCBkb250QW5pbWF0ZSkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgICR0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLFxuICAgICAgICAgICAgaW5kZXhPZmZzZXQsIHNsaWRlT2Zmc2V0LCB1bmV2ZW5PZmZzZXQ7XG5cbiAgICAgICAgLy8gSWYgdGFyZ2V0IGlzIGEgbGluaywgcHJldmVudCBkZWZhdWx0IGFjdGlvbi5cbiAgICAgICAgaWYoJHRhcmdldC5pcygnYScpKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgdGFyZ2V0IGlzIG5vdCB0aGUgPGxpPiBlbGVtZW50IChpZTogYSBjaGlsZCksIGZpbmQgdGhlIDxsaT4uXG4gICAgICAgIGlmKCEkdGFyZ2V0LmlzKCdsaScpKSB7XG4gICAgICAgICAgICAkdGFyZ2V0ID0gJHRhcmdldC5jbG9zZXN0KCdsaScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdW5ldmVuT2Zmc2V0ID0gKF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPT0gMCk7XG4gICAgICAgIGluZGV4T2Zmc2V0ID0gdW5ldmVuT2Zmc2V0ID8gMCA6IChfLnNsaWRlQ291bnQgLSBfLmN1cnJlbnRTbGlkZSkgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG5cbiAgICAgICAgc3dpdGNoIChldmVudC5kYXRhLm1lc3NhZ2UpIHtcblxuICAgICAgICAgICAgY2FzZSAncHJldmlvdXMnOlxuICAgICAgICAgICAgICAgIHNsaWRlT2Zmc2V0ID0gaW5kZXhPZmZzZXQgPT09IDAgPyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgOiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gaW5kZXhPZmZzZXQ7XG4gICAgICAgICAgICAgICAgaWYgKF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgICAgICAgICAgICAgXy5zbGlkZUhhbmRsZXIoXy5jdXJyZW50U2xpZGUgLSBzbGlkZU9mZnNldCwgZmFsc2UsIGRvbnRBbmltYXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ25leHQnOlxuICAgICAgICAgICAgICAgIHNsaWRlT2Zmc2V0ID0gaW5kZXhPZmZzZXQgPT09IDAgPyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgOiBpbmRleE9mZnNldDtcbiAgICAgICAgICAgICAgICBpZiAoXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgICAgICAgICAgICBfLnNsaWRlSGFuZGxlcihfLmN1cnJlbnRTbGlkZSArIHNsaWRlT2Zmc2V0LCBmYWxzZSwgZG9udEFuaW1hdGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnaW5kZXgnOlxuICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IGV2ZW50LmRhdGEuaW5kZXggPT09IDAgPyAwIDpcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQuZGF0YS5pbmRleCB8fCAkdGFyZ2V0LmluZGV4KCkgKiBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG5cbiAgICAgICAgICAgICAgICBfLnNsaWRlSGFuZGxlcihfLmNoZWNrTmF2aWdhYmxlKGluZGV4KSwgZmFsc2UsIGRvbnRBbmltYXRlKTtcbiAgICAgICAgICAgICAgICAkdGFyZ2V0LmNoaWxkcmVuKCkudHJpZ2dlcignZm9jdXMnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuY2hlY2tOYXZpZ2FibGUgPSBmdW5jdGlvbihpbmRleCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIG5hdmlnYWJsZXMsIHByZXZOYXZpZ2FibGU7XG5cbiAgICAgICAgbmF2aWdhYmxlcyA9IF8uZ2V0TmF2aWdhYmxlSW5kZXhlcygpO1xuICAgICAgICBwcmV2TmF2aWdhYmxlID0gMDtcbiAgICAgICAgaWYgKGluZGV4ID4gbmF2aWdhYmxlc1tuYXZpZ2FibGVzLmxlbmd0aCAtIDFdKSB7XG4gICAgICAgICAgICBpbmRleCA9IG5hdmlnYWJsZXNbbmF2aWdhYmxlcy5sZW5ndGggLSAxXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAodmFyIG4gaW4gbmF2aWdhYmxlcykge1xuICAgICAgICAgICAgICAgIGlmIChpbmRleCA8IG5hdmlnYWJsZXNbbl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBwcmV2TmF2aWdhYmxlO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcHJldk5hdmlnYWJsZSA9IG5hdmlnYWJsZXNbbl07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5jbGVhblVwRXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZG90cyAmJiBfLiRkb3RzICE9PSBudWxsKSB7XG5cbiAgICAgICAgICAgICQoJ2xpJywgXy4kZG90cylcbiAgICAgICAgICAgICAgICAub2ZmKCdjbGljay5zbGljaycsIF8uY2hhbmdlU2xpZGUpXG4gICAgICAgICAgICAgICAgLm9mZignbW91c2VlbnRlci5zbGljaycsICQucHJveHkoXy5pbnRlcnJ1cHQsIF8sIHRydWUpKVxuICAgICAgICAgICAgICAgIC5vZmYoJ21vdXNlbGVhdmUuc2xpY2snLCAkLnByb3h5KF8uaW50ZXJydXB0LCBfLCBmYWxzZSkpO1xuXG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfLiRkb3RzLm9mZigna2V5ZG93bi5zbGljaycsIF8ua2V5SGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBfLiRzbGlkZXIub2ZmKCdmb2N1cy5zbGljayBibHVyLnNsaWNrJyk7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5hcnJvd3MgPT09IHRydWUgJiYgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgICAgXy4kcHJldkFycm93ICYmIF8uJHByZXZBcnJvdy5vZmYoJ2NsaWNrLnNsaWNrJywgXy5jaGFuZ2VTbGlkZSk7XG4gICAgICAgICAgICBfLiRuZXh0QXJyb3cgJiYgXy4kbmV4dEFycm93Lm9mZignY2xpY2suc2xpY2snLCBfLmNoYW5nZVNsaWRlKTtcblxuICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgXy4kcHJldkFycm93ICYmIF8uJHByZXZBcnJvdy5vZmYoJ2tleWRvd24uc2xpY2snLCBfLmtleUhhbmRsZXIpO1xuICAgICAgICAgICAgICAgIF8uJG5leHRBcnJvdyAmJiBfLiRuZXh0QXJyb3cub2ZmKCdrZXlkb3duLnNsaWNrJywgXy5rZXlIYW5kbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIF8uJGxpc3Qub2ZmKCd0b3VjaHN0YXJ0LnNsaWNrIG1vdXNlZG93bi5zbGljaycsIF8uc3dpcGVIYW5kbGVyKTtcbiAgICAgICAgXy4kbGlzdC5vZmYoJ3RvdWNobW92ZS5zbGljayBtb3VzZW1vdmUuc2xpY2snLCBfLnN3aXBlSGFuZGxlcik7XG4gICAgICAgIF8uJGxpc3Qub2ZmKCd0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrJywgXy5zd2lwZUhhbmRsZXIpO1xuICAgICAgICBfLiRsaXN0Lm9mZigndG91Y2hjYW5jZWwuc2xpY2sgbW91c2VsZWF2ZS5zbGljaycsIF8uc3dpcGVIYW5kbGVyKTtcblxuICAgICAgICBfLiRsaXN0Lm9mZignY2xpY2suc2xpY2snLCBfLmNsaWNrSGFuZGxlcik7XG5cbiAgICAgICAgJChkb2N1bWVudCkub2ZmKF8udmlzaWJpbGl0eUNoYW5nZSwgXy52aXNpYmlsaXR5KTtcblxuICAgICAgICBfLmNsZWFuVXBTbGlkZUV2ZW50cygpO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgXy4kbGlzdC5vZmYoJ2tleWRvd24uc2xpY2snLCBfLmtleUhhbmRsZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5mb2N1c09uU2VsZWN0ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAkKF8uJHNsaWRlVHJhY2spLmNoaWxkcmVuKCkub2ZmKCdjbGljay5zbGljaycsIF8uc2VsZWN0SGFuZGxlcik7XG4gICAgICAgIH1cblxuICAgICAgICAkKHdpbmRvdykub2ZmKCdvcmllbnRhdGlvbmNoYW5nZS5zbGljay5zbGljay0nICsgXy5pbnN0YW5jZVVpZCwgXy5vcmllbnRhdGlvbkNoYW5nZSk7XG5cbiAgICAgICAgJCh3aW5kb3cpLm9mZigncmVzaXplLnNsaWNrLnNsaWNrLScgKyBfLmluc3RhbmNlVWlkLCBfLnJlc2l6ZSk7XG5cbiAgICAgICAgJCgnW2RyYWdnYWJsZSE9dHJ1ZV0nLCBfLiRzbGlkZVRyYWNrKS5vZmYoJ2RyYWdzdGFydCcsIF8ucHJldmVudERlZmF1bHQpO1xuXG4gICAgICAgICQod2luZG93KS5vZmYoJ2xvYWQuc2xpY2suc2xpY2stJyArIF8uaW5zdGFuY2VVaWQsIF8uc2V0UG9zaXRpb24pO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5jbGVhblVwU2xpZGVFdmVudHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy4kbGlzdC5vZmYoJ21vdXNlZW50ZXIuc2xpY2snLCAkLnByb3h5KF8uaW50ZXJydXB0LCBfLCB0cnVlKSk7XG4gICAgICAgIF8uJGxpc3Qub2ZmKCdtb3VzZWxlYXZlLnNsaWNrJywgJC5wcm94eShfLmludGVycnVwdCwgXywgZmFsc2UpKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuY2xlYW5VcFJvd3MgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsIG9yaWdpbmFsU2xpZGVzO1xuXG4gICAgICAgIGlmKF8ub3B0aW9ucy5yb3dzID4gMSkge1xuICAgICAgICAgICAgb3JpZ2luYWxTbGlkZXMgPSBfLiRzbGlkZXMuY2hpbGRyZW4oKS5jaGlsZHJlbigpO1xuICAgICAgICAgICAgb3JpZ2luYWxTbGlkZXMucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgIF8uJHNsaWRlci5lbXB0eSgpLmFwcGVuZChvcmlnaW5hbFNsaWRlcyk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuY2xpY2tIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgaWYgKF8uc2hvdWxkQ2xpY2sgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24ocmVmcmVzaCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBfLmF1dG9QbGF5Q2xlYXIoKTtcblxuICAgICAgICBfLnRvdWNoT2JqZWN0ID0ge307XG5cbiAgICAgICAgXy5jbGVhblVwRXZlbnRzKCk7XG5cbiAgICAgICAgJCgnLnNsaWNrLWNsb25lZCcsIF8uJHNsaWRlcikuZGV0YWNoKCk7XG5cbiAgICAgICAgaWYgKF8uJGRvdHMpIHtcbiAgICAgICAgICAgIF8uJGRvdHMucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIF8uJHByZXZBcnJvdyAmJiBfLiRwcmV2QXJyb3cubGVuZ3RoICkge1xuXG4gICAgICAgICAgICBfLiRwcmV2QXJyb3dcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ3NsaWNrLWRpc2FibGVkIHNsaWNrLWFycm93IHNsaWNrLWhpZGRlbicpXG4gICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoJ2FyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXgnKVxuICAgICAgICAgICAgICAgIC5jc3MoJ2Rpc3BsYXknLCcnKTtcblxuICAgICAgICAgICAgaWYgKCBfLmh0bWxFeHByLnRlc3QoIF8ub3B0aW9ucy5wcmV2QXJyb3cgKSkge1xuICAgICAgICAgICAgICAgIF8uJHByZXZBcnJvdy5yZW1vdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICggXy4kbmV4dEFycm93ICYmIF8uJG5leHRBcnJvdy5sZW5ndGggKSB7XG5cbiAgICAgICAgICAgIF8uJG5leHRBcnJvd1xuICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnc2xpY2stZGlzYWJsZWQgc2xpY2stYXJyb3cgc2xpY2staGlkZGVuJylcbiAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cignYXJpYS1oaWRkZW4gYXJpYS1kaXNhYmxlZCB0YWJpbmRleCcpXG4gICAgICAgICAgICAgICAgLmNzcygnZGlzcGxheScsJycpO1xuXG4gICAgICAgICAgICBpZiAoIF8uaHRtbEV4cHIudGVzdCggXy5vcHRpb25zLm5leHRBcnJvdyApKSB7XG4gICAgICAgICAgICAgICAgXy4kbmV4dEFycm93LnJlbW92ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cblxuICAgICAgICBpZiAoXy4kc2xpZGVzKSB7XG5cbiAgICAgICAgICAgIF8uJHNsaWRlc1xuICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnc2xpY2stc2xpZGUgc2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnQnKVxuICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKCdhcmlhLWhpZGRlbicpXG4gICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoJ2RhdGEtc2xpY2staW5kZXgnKVxuICAgICAgICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignc3R5bGUnLCAkKHRoaXMpLmRhdGEoJ29yaWdpbmFsU3R5bGluZycpKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgXy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpO1xuXG4gICAgICAgICAgICBfLiRzbGlkZVRyYWNrLmRldGFjaCgpO1xuXG4gICAgICAgICAgICBfLiRsaXN0LmRldGFjaCgpO1xuXG4gICAgICAgICAgICBfLiRzbGlkZXIuYXBwZW5kKF8uJHNsaWRlcyk7XG4gICAgICAgIH1cblxuICAgICAgICBfLmNsZWFuVXBSb3dzKCk7XG5cbiAgICAgICAgXy4kc2xpZGVyLnJlbW92ZUNsYXNzKCdzbGljay1zbGlkZXInKTtcbiAgICAgICAgXy4kc2xpZGVyLnJlbW92ZUNsYXNzKCdzbGljay1pbml0aWFsaXplZCcpO1xuICAgICAgICBfLiRzbGlkZXIucmVtb3ZlQ2xhc3MoJ3NsaWNrLWRvdHRlZCcpO1xuXG4gICAgICAgIF8udW5zbGlja2VkID0gdHJ1ZTtcblxuICAgICAgICBpZighcmVmcmVzaCkge1xuICAgICAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ2Rlc3Ryb3knLCBbX10pO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmRpc2FibGVUcmFuc2l0aW9uID0gZnVuY3Rpb24oc2xpZGUpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAgICAgICB0cmFuc2l0aW9uID0ge307XG5cbiAgICAgICAgdHJhbnNpdGlvbltfLnRyYW5zaXRpb25UeXBlXSA9ICcnO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKHRyYW5zaXRpb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgXy4kc2xpZGVzLmVxKHNsaWRlKS5jc3ModHJhbnNpdGlvbik7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuZmFkZVNsaWRlID0gZnVuY3Rpb24oc2xpZGVJbmRleCwgY2FsbGJhY2spIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgaWYgKF8uY3NzVHJhbnNpdGlvbnMgPT09IGZhbHNlKSB7XG5cbiAgICAgICAgICAgIF8uJHNsaWRlcy5lcShzbGlkZUluZGV4KS5jc3Moe1xuICAgICAgICAgICAgICAgIHpJbmRleDogXy5vcHRpb25zLnpJbmRleFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIF8uJHNsaWRlcy5lcShzbGlkZUluZGV4KS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxXG4gICAgICAgICAgICB9LCBfLm9wdGlvbnMuc3BlZWQsIF8ub3B0aW9ucy5lYXNpbmcsIGNhbGxiYWNrKTtcblxuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBfLmFwcGx5VHJhbnNpdGlvbihzbGlkZUluZGV4KTtcblxuICAgICAgICAgICAgXy4kc2xpZGVzLmVxKHNsaWRlSW5kZXgpLmNzcyh7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IF8ub3B0aW9ucy56SW5kZXhcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgIF8uZGlzYWJsZVRyYW5zaXRpb24oc2xpZGVJbmRleCk7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbCgpO1xuICAgICAgICAgICAgICAgIH0sIF8ub3B0aW9ucy5zcGVlZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5mYWRlU2xpZGVPdXQgPSBmdW5jdGlvbihzbGlkZUluZGV4KSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLmNzc1RyYW5zaXRpb25zID09PSBmYWxzZSkge1xuXG4gICAgICAgICAgICBfLiRzbGlkZXMuZXEoc2xpZGVJbmRleCkuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IF8ub3B0aW9ucy56SW5kZXggLSAyXG4gICAgICAgICAgICB9LCBfLm9wdGlvbnMuc3BlZWQsIF8ub3B0aW9ucy5lYXNpbmcpO1xuXG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIF8uYXBwbHlUcmFuc2l0aW9uKHNsaWRlSW5kZXgpO1xuXG4gICAgICAgICAgICBfLiRzbGlkZXMuZXEoc2xpZGVJbmRleCkuY3NzKHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgIHpJbmRleDogXy5vcHRpb25zLnpJbmRleCAtIDJcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuZmlsdGVyU2xpZGVzID0gU2xpY2sucHJvdG90eXBlLnNsaWNrRmlsdGVyID0gZnVuY3Rpb24oZmlsdGVyKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChmaWx0ZXIgIT09IG51bGwpIHtcblxuICAgICAgICAgICAgXy4kc2xpZGVzQ2FjaGUgPSBfLiRzbGlkZXM7XG5cbiAgICAgICAgICAgIF8udW5sb2FkKCk7XG5cbiAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKTtcblxuICAgICAgICAgICAgXy4kc2xpZGVzQ2FjaGUuZmlsdGVyKGZpbHRlcikuYXBwZW5kVG8oXy4kc2xpZGVUcmFjayk7XG5cbiAgICAgICAgICAgIF8ucmVpbml0KCk7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5mb2N1c0hhbmRsZXIgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy4kc2xpZGVyXG4gICAgICAgICAgICAub2ZmKCdmb2N1cy5zbGljayBibHVyLnNsaWNrJylcbiAgICAgICAgICAgIC5vbignZm9jdXMuc2xpY2sgYmx1ci5zbGljaycsICcqJywgZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB2YXIgJHNmID0gJCh0aGlzKTtcblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgIGlmKCBfLm9wdGlvbnMucGF1c2VPbkZvY3VzICkge1xuICAgICAgICAgICAgICAgICAgICBfLmZvY3Vzc2VkID0gJHNmLmlzKCc6Zm9jdXMnKTtcbiAgICAgICAgICAgICAgICAgICAgXy5hdXRvUGxheSgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSwgMCk7XG5cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5nZXRDdXJyZW50ID0gU2xpY2sucHJvdG90eXBlLnNsaWNrQ3VycmVudFNsaWRlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuICAgICAgICByZXR1cm4gXy5jdXJyZW50U2xpZGU7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmdldERvdENvdW50ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIHZhciBicmVha1BvaW50ID0gMDtcbiAgICAgICAgdmFyIGNvdW50ZXIgPSAwO1xuICAgICAgICB2YXIgcGFnZXJRdHkgPSAwO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmIChfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAoYnJlYWtQb2ludCA8IF8uc2xpZGVDb3VudCkge1xuICAgICAgICAgICAgICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgICAgICAgICAgICAgICBicmVha1BvaW50ID0gY291bnRlciArIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcbiAgICAgICAgICAgICAgICAgICAgY291bnRlciArPSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA/IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKF8ub3B0aW9ucy5jZW50ZXJNb2RlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBwYWdlclF0eSA9IF8uc2xpZGVDb3VudDtcbiAgICAgICAgfSBlbHNlIGlmKCFfLm9wdGlvbnMuYXNOYXZGb3IpIHtcbiAgICAgICAgICAgIHBhZ2VyUXR5ID0gMSArIE1hdGguY2VpbCgoXy5zbGlkZUNvdW50IC0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykgLyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpO1xuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICB3aGlsZSAoYnJlYWtQb2ludCA8IF8uc2xpZGVDb3VudCkge1xuICAgICAgICAgICAgICAgICsrcGFnZXJRdHk7XG4gICAgICAgICAgICAgICAgYnJlYWtQb2ludCA9IGNvdW50ZXIgKyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG4gICAgICAgICAgICAgICAgY291bnRlciArPSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA/IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcGFnZXJRdHkgLSAxO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5nZXRMZWZ0ID0gZnVuY3Rpb24oc2xpZGVJbmRleCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIHRhcmdldExlZnQsXG4gICAgICAgICAgICB2ZXJ0aWNhbEhlaWdodCxcbiAgICAgICAgICAgIHZlcnRpY2FsT2Zmc2V0ID0gMCxcbiAgICAgICAgICAgIHRhcmdldFNsaWRlLFxuICAgICAgICAgICAgY29lZjtcblxuICAgICAgICBfLnNsaWRlT2Zmc2V0ID0gMDtcbiAgICAgICAgdmVydGljYWxIZWlnaHQgPSBfLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCh0cnVlKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgPSAoXy5zbGlkZVdpZHRoICogXy5vcHRpb25zLnNsaWRlc1RvU2hvdykgKiAtMTtcbiAgICAgICAgICAgICAgICBjb2VmID0gLTFcblxuICAgICAgICAgICAgICAgIGlmIChfLm9wdGlvbnMudmVydGljYWwgPT09IHRydWUgJiYgXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPT09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZWYgPSAtMS41O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZWYgPSAtMlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZlcnRpY2FsT2Zmc2V0ID0gKHZlcnRpY2FsSGVpZ2h0ICogXy5vcHRpb25zLnNsaWRlc1RvU2hvdykgKiBjb2VmO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPT0gMCkge1xuICAgICAgICAgICAgICAgIGlmIChzbGlkZUluZGV4ICsgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsID4gXy5zbGlkZUNvdW50ICYmIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNsaWRlSW5kZXggPiBfLnNsaWRlQ291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgPSAoKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSAoc2xpZGVJbmRleCAtIF8uc2xpZGVDb3VudCkpICogXy5zbGlkZVdpZHRoKSAqIC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWxPZmZzZXQgPSAoKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSAoc2xpZGVJbmRleCAtIF8uc2xpZGVDb3VudCkpICogdmVydGljYWxIZWlnaHQpICogLTE7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfLnNsaWRlT2Zmc2V0ID0gKChfLnNsaWRlQ291bnQgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpICogXy5zbGlkZVdpZHRoKSAqIC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWxPZmZzZXQgPSAoKF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCkgKiB2ZXJ0aWNhbEhlaWdodCkgKiAtMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChzbGlkZUluZGV4ICsgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA+IF8uc2xpZGVDb3VudCkge1xuICAgICAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgPSAoKHNsaWRlSW5kZXggKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSAtIF8uc2xpZGVDb3VudCkgKiBfLnNsaWRlV2lkdGg7XG4gICAgICAgICAgICAgICAgdmVydGljYWxPZmZzZXQgPSAoKHNsaWRlSW5kZXggKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSAtIF8uc2xpZGVDb3VudCkgKiB2ZXJ0aWNhbEhlaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgICAgXy5zbGlkZU9mZnNldCA9IDA7XG4gICAgICAgICAgICB2ZXJ0aWNhbE9mZnNldCA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUgJiYgXy5zbGlkZUNvdW50IDw9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgPSAoKF8uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3IoXy5vcHRpb25zLnNsaWRlc1RvU2hvdykpIC8gMikgLSAoKF8uc2xpZGVXaWR0aCAqIF8uc2xpZGVDb3VudCkgLyAyKTtcbiAgICAgICAgfSBlbHNlIGlmIChfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gdHJ1ZSAmJiBfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgKz0gXy5zbGlkZVdpZHRoICogTWF0aC5mbG9vcihfLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMikgLSBfLnNsaWRlV2lkdGg7XG4gICAgICAgIH0gZWxzZSBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgPSAwO1xuICAgICAgICAgICAgXy5zbGlkZU9mZnNldCArPSBfLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0YXJnZXRMZWZ0ID0gKChzbGlkZUluZGV4ICogXy5zbGlkZVdpZHRoKSAqIC0xKSArIF8uc2xpZGVPZmZzZXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXJnZXRMZWZ0ID0gKChzbGlkZUluZGV4ICogdmVydGljYWxIZWlnaHQpICogLTEpICsgdmVydGljYWxPZmZzZXQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5vcHRpb25zLnZhcmlhYmxlV2lkdGggPT09IHRydWUpIHtcblxuICAgICAgICAgICAgaWYgKF8uc2xpZGVDb3VudCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93IHx8IF8ub3B0aW9ucy5pbmZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRTbGlkZSA9IF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oJy5zbGljay1zbGlkZScpLmVxKHNsaWRlSW5kZXgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRTbGlkZSA9IF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oJy5zbGljay1zbGlkZScpLmVxKHNsaWRlSW5kZXggKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy5ydGwgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0U2xpZGVbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0TGVmdCA9IChfLiRzbGlkZVRyYWNrLndpZHRoKCkgLSB0YXJnZXRTbGlkZVswXS5vZmZzZXRMZWZ0IC0gdGFyZ2V0U2xpZGUud2lkdGgoKSkgKiAtMTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRMZWZ0ID0gIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRMZWZ0ID0gdGFyZ2V0U2xpZGVbMF0gPyB0YXJnZXRTbGlkZVswXS5vZmZzZXRMZWZ0ICogLTEgOiAwO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoXy5zbGlkZUNvdW50IDw9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgfHwgXy5vcHRpb25zLmluZmluaXRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRTbGlkZSA9IF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oJy5zbGljay1zbGlkZScpLmVxKHNsaWRlSW5kZXgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFNsaWRlID0gXy4kc2xpZGVUcmFjay5jaGlsZHJlbignLnNsaWNrLXNsaWRlJykuZXEoc2xpZGVJbmRleCArIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyAxKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoXy5vcHRpb25zLnJ0bCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0U2xpZGVbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldExlZnQgPSAoXy4kc2xpZGVUcmFjay53aWR0aCgpIC0gdGFyZ2V0U2xpZGVbMF0ub2Zmc2V0TGVmdCAtIHRhcmdldFNsaWRlLndpZHRoKCkpICogLTE7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRMZWZ0ID0gIDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRMZWZ0ID0gdGFyZ2V0U2xpZGVbMF0gPyB0YXJnZXRTbGlkZVswXS5vZmZzZXRMZWZ0ICogLTEgOiAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRhcmdldExlZnQgKz0gKF8uJGxpc3Qud2lkdGgoKSAtIHRhcmdldFNsaWRlLm91dGVyV2lkdGgoKSkgLyAyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldExlZnQ7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmdldE9wdGlvbiA9IFNsaWNrLnByb3RvdHlwZS5zbGlja0dldE9wdGlvbiA9IGZ1bmN0aW9uKG9wdGlvbikge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICByZXR1cm4gXy5vcHRpb25zW29wdGlvbl07XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmdldE5hdmlnYWJsZUluZGV4ZXMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAgICAgICBicmVha1BvaW50ID0gMCxcbiAgICAgICAgICAgIGNvdW50ZXIgPSAwLFxuICAgICAgICAgICAgaW5kZXhlcyA9IFtdLFxuICAgICAgICAgICAgbWF4O1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBtYXggPSBfLnNsaWRlQ291bnQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBicmVha1BvaW50ID0gXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICogLTE7XG4gICAgICAgICAgICBjb3VudGVyID0gXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICogLTE7XG4gICAgICAgICAgICBtYXggPSBfLnNsaWRlQ291bnQgKiAyO1xuICAgICAgICB9XG5cbiAgICAgICAgd2hpbGUgKGJyZWFrUG9pbnQgPCBtYXgpIHtcbiAgICAgICAgICAgIGluZGV4ZXMucHVzaChicmVha1BvaW50KTtcbiAgICAgICAgICAgIGJyZWFrUG9pbnQgPSBjb3VudGVyICsgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO1xuICAgICAgICAgICAgY291bnRlciArPSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA/IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5kZXhlcztcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuZ2V0U2xpY2sgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gdGhpcztcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuZ2V0U2xpZGVDb3VudCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIHNsaWRlc1RyYXZlcnNlZCwgc3dpcGVkU2xpZGUsIGNlbnRlck9mZnNldDtcblxuICAgICAgICBjZW50ZXJPZmZzZXQgPSBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gdHJ1ZSA/IF8uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3IoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpIDogMDtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLnN3aXBlVG9TbGlkZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgXy4kc2xpZGVUcmFjay5maW5kKCcuc2xpY2stc2xpZGUnKS5lYWNoKGZ1bmN0aW9uKGluZGV4LCBzbGlkZSkge1xuICAgICAgICAgICAgICAgIGlmIChzbGlkZS5vZmZzZXRMZWZ0IC0gY2VudGVyT2Zmc2V0ICsgKCQoc2xpZGUpLm91dGVyV2lkdGgoKSAvIDIpID4gKF8uc3dpcGVMZWZ0ICogLTEpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXBlZFNsaWRlID0gc2xpZGU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgc2xpZGVzVHJhdmVyc2VkID0gTWF0aC5hYnMoJChzd2lwZWRTbGlkZSkuYXR0cignZGF0YS1zbGljay1pbmRleCcpIC0gXy5jdXJyZW50U2xpZGUpIHx8IDE7XG5cbiAgICAgICAgICAgIHJldHVybiBzbGlkZXNUcmF2ZXJzZWQ7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuZ29UbyA9IFNsaWNrLnByb3RvdHlwZS5zbGlja0dvVG8gPSBmdW5jdGlvbihzbGlkZSwgZG9udEFuaW1hdGUpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ2luZGV4JyxcbiAgICAgICAgICAgICAgICBpbmRleDogcGFyc2VJbnQoc2xpZGUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGRvbnRBbmltYXRlKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKGNyZWF0aW9uKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmICghJChfLiRzbGlkZXIpLmhhc0NsYXNzKCdzbGljay1pbml0aWFsaXplZCcpKSB7XG5cbiAgICAgICAgICAgICQoXy4kc2xpZGVyKS5hZGRDbGFzcygnc2xpY2staW5pdGlhbGl6ZWQnKTtcblxuICAgICAgICAgICAgXy5idWlsZFJvd3MoKTtcbiAgICAgICAgICAgIF8uYnVpbGRPdXQoKTtcbiAgICAgICAgICAgIF8uc2V0UHJvcHMoKTtcbiAgICAgICAgICAgIF8uc3RhcnRMb2FkKCk7XG4gICAgICAgICAgICBfLmxvYWRTbGlkZXIoKTtcbiAgICAgICAgICAgIF8uaW5pdGlhbGl6ZUV2ZW50cygpO1xuICAgICAgICAgICAgXy51cGRhdGVBcnJvd3MoKTtcbiAgICAgICAgICAgIF8udXBkYXRlRG90cygpO1xuICAgICAgICAgICAgXy5jaGVja1Jlc3BvbnNpdmUodHJ1ZSk7XG4gICAgICAgICAgICBfLmZvY3VzSGFuZGxlcigpO1xuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3JlYXRpb24pIHtcbiAgICAgICAgICAgIF8uJHNsaWRlci50cmlnZ2VyKCdpbml0JywgW19dKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgXy5pbml0QURBKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIF8ub3B0aW9ucy5hdXRvcGxheSApIHtcblxuICAgICAgICAgICAgXy5wYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIF8uYXV0b1BsYXkoKTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmluaXRBREEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgICAgIG51bURvdEdyb3VwcyA9IE1hdGguY2VpbChfLnNsaWRlQ291bnQgLyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSxcbiAgICAgICAgICAgICAgICB0YWJDb250cm9sSW5kZXhlcyA9IF8uZ2V0TmF2aWdhYmxlSW5kZXhlcygpLmZpbHRlcihmdW5jdGlvbih2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICh2YWwgPj0gMCkgJiYgKHZhbCA8IF8uc2xpZGVDb3VudCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgXy4kc2xpZGVzLmFkZChfLiRzbGlkZVRyYWNrLmZpbmQoJy5zbGljay1jbG9uZWQnKSkuYXR0cih7XG4gICAgICAgICAgICAnYXJpYS1oaWRkZW4nOiAndHJ1ZScsXG4gICAgICAgICAgICAndGFiaW5kZXgnOiAnLTEnXG4gICAgICAgIH0pLmZpbmQoJ2EsIGlucHV0LCBidXR0b24sIHNlbGVjdCcpLmF0dHIoe1xuICAgICAgICAgICAgJ3RhYmluZGV4JzogJy0xJ1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoXy4kZG90cyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgXy4kc2xpZGVzLm5vdChfLiRzbGlkZVRyYWNrLmZpbmQoJy5zbGljay1jbG9uZWQnKSkuZWFjaChmdW5jdGlvbihpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlQ29udHJvbEluZGV4ID0gdGFiQ29udHJvbEluZGV4ZXMuaW5kZXhPZihpKTtcblxuICAgICAgICAgICAgICAgICQodGhpcykuYXR0cih7XG4gICAgICAgICAgICAgICAgICAgICdyb2xlJzogJ3RhYnBhbmVsJyxcbiAgICAgICAgICAgICAgICAgICAgJ2lkJzogJ3NsaWNrLXNsaWRlJyArIF8uaW5zdGFuY2VVaWQgKyBpLFxuICAgICAgICAgICAgICAgICAgICAndGFiaW5kZXgnOiAtMVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgaWYgKHNsaWRlQ29udHJvbEluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2FyaWEtZGVzY3JpYmVkYnknOiAnc2xpY2stc2xpZGUtY29udHJvbCcgKyBfLmluc3RhbmNlVWlkICsgc2xpZGVDb250cm9sSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIF8uJGRvdHMuYXR0cigncm9sZScsICd0YWJsaXN0JykuZmluZCgnbGknKS5lYWNoKGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWFwcGVkU2xpZGVJbmRleCA9IHRhYkNvbnRyb2xJbmRleGVzW2ldO1xuXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKHtcbiAgICAgICAgICAgICAgICAgICAgJ3JvbGUnOiAncHJlc2VudGF0aW9uJ1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCdidXR0b24nKS5maXJzdCgpLmF0dHIoe1xuICAgICAgICAgICAgICAgICAgICAncm9sZSc6ICd0YWInLFxuICAgICAgICAgICAgICAgICAgICAnaWQnOiAnc2xpY2stc2xpZGUtY29udHJvbCcgKyBfLmluc3RhbmNlVWlkICsgaSxcbiAgICAgICAgICAgICAgICAgICAgJ2FyaWEtY29udHJvbHMnOiAnc2xpY2stc2xpZGUnICsgXy5pbnN0YW5jZVVpZCArIG1hcHBlZFNsaWRlSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICdhcmlhLWxhYmVsJzogKGkgKyAxKSArICcgb2YgJyArIG51bURvdEdyb3VwcyxcbiAgICAgICAgICAgICAgICAgICAgJ2FyaWEtc2VsZWN0ZWQnOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAndGFiaW5kZXgnOiAnLTEnXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH0pLmVxKF8uY3VycmVudFNsaWRlKS5maW5kKCdidXR0b24nKS5hdHRyKHtcbiAgICAgICAgICAgICAgICAnYXJpYS1zZWxlY3RlZCc6ICd0cnVlJyxcbiAgICAgICAgICAgICAgICAndGFiaW5kZXgnOiAnMCdcbiAgICAgICAgICAgIH0pLmVuZCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaT1fLmN1cnJlbnRTbGlkZSwgbWF4PWkrXy5vcHRpb25zLnNsaWRlc1RvU2hvdzsgaSA8IG1heDsgaSsrKSB7XG4gICAgICAgICAgICBfLiRzbGlkZXMuZXEoaSkuYXR0cigndGFiaW5kZXgnLCAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF8uYWN0aXZhdGVBREEoKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuaW5pdEFycm93RXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuYXJyb3dzID09PSB0cnVlICYmIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgICAgIF8uJHByZXZBcnJvd1xuICAgICAgICAgICAgICAgLm9mZignY2xpY2suc2xpY2snKVxuICAgICAgICAgICAgICAgLm9uKCdjbGljay5zbGljaycsIHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ3ByZXZpb3VzJ1xuICAgICAgICAgICAgICAgfSwgXy5jaGFuZ2VTbGlkZSk7XG4gICAgICAgICAgICBfLiRuZXh0QXJyb3dcbiAgICAgICAgICAgICAgIC5vZmYoJ2NsaWNrLnNsaWNrJylcbiAgICAgICAgICAgICAgIC5vbignY2xpY2suc2xpY2snLCB7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICduZXh0J1xuICAgICAgICAgICAgICAgfSwgXy5jaGFuZ2VTbGlkZSk7XG5cbiAgICAgICAgICAgIGlmIChfLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIF8uJHByZXZBcnJvdy5vbigna2V5ZG93bi5zbGljaycsIF8ua2V5SGFuZGxlcik7XG4gICAgICAgICAgICAgICAgXy4kbmV4dEFycm93Lm9uKCdrZXlkb3duLnNsaWNrJywgXy5rZXlIYW5kbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5pbml0RG90RXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZG90cyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgJCgnbGknLCBfLiRkb3RzKS5vbignY2xpY2suc2xpY2snLCB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ2luZGV4J1xuICAgICAgICAgICAgfSwgXy5jaGFuZ2VTbGlkZSk7XG5cbiAgICAgICAgICAgIGlmIChfLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIF8uJGRvdHMub24oJ2tleWRvd24uc2xpY2snLCBfLmtleUhhbmRsZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBfLm9wdGlvbnMuZG90cyA9PT0gdHJ1ZSAmJiBfLm9wdGlvbnMucGF1c2VPbkRvdHNIb3ZlciA9PT0gdHJ1ZSApIHtcblxuICAgICAgICAgICAgJCgnbGknLCBfLiRkb3RzKVxuICAgICAgICAgICAgICAgIC5vbignbW91c2VlbnRlci5zbGljaycsICQucHJveHkoXy5pbnRlcnJ1cHQsIF8sIHRydWUpKVxuICAgICAgICAgICAgICAgIC5vbignbW91c2VsZWF2ZS5zbGljaycsICQucHJveHkoXy5pbnRlcnJ1cHQsIF8sIGZhbHNlKSk7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5pbml0U2xpZGVFdmVudHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgaWYgKCBfLm9wdGlvbnMucGF1c2VPbkhvdmVyICkge1xuXG4gICAgICAgICAgICBfLiRsaXN0Lm9uKCdtb3VzZWVudGVyLnNsaWNrJywgJC5wcm94eShfLmludGVycnVwdCwgXywgdHJ1ZSkpO1xuICAgICAgICAgICAgXy4kbGlzdC5vbignbW91c2VsZWF2ZS5zbGljaycsICQucHJveHkoXy5pbnRlcnJ1cHQsIF8sIGZhbHNlKSk7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5pbml0aWFsaXplRXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIF8uaW5pdEFycm93RXZlbnRzKCk7XG5cbiAgICAgICAgXy5pbml0RG90RXZlbnRzKCk7XG4gICAgICAgIF8uaW5pdFNsaWRlRXZlbnRzKCk7XG5cbiAgICAgICAgXy4kbGlzdC5vbigndG91Y2hzdGFydC5zbGljayBtb3VzZWRvd24uc2xpY2snLCB7XG4gICAgICAgICAgICBhY3Rpb246ICdzdGFydCdcbiAgICAgICAgfSwgXy5zd2lwZUhhbmRsZXIpO1xuICAgICAgICBfLiRsaXN0Lm9uKCd0b3VjaG1vdmUuc2xpY2sgbW91c2Vtb3ZlLnNsaWNrJywge1xuICAgICAgICAgICAgYWN0aW9uOiAnbW92ZSdcbiAgICAgICAgfSwgXy5zd2lwZUhhbmRsZXIpO1xuICAgICAgICBfLiRsaXN0Lm9uKCd0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrJywge1xuICAgICAgICAgICAgYWN0aW9uOiAnZW5kJ1xuICAgICAgICB9LCBfLnN3aXBlSGFuZGxlcik7XG4gICAgICAgIF8uJGxpc3Qub24oJ3RvdWNoY2FuY2VsLnNsaWNrIG1vdXNlbGVhdmUuc2xpY2snLCB7XG4gICAgICAgICAgICBhY3Rpb246ICdlbmQnXG4gICAgICAgIH0sIF8uc3dpcGVIYW5kbGVyKTtcblxuICAgICAgICBfLiRsaXN0Lm9uKCdjbGljay5zbGljaycsIF8uY2xpY2tIYW5kbGVyKTtcblxuICAgICAgICAkKGRvY3VtZW50KS5vbihfLnZpc2liaWxpdHlDaGFuZ2UsICQucHJveHkoXy52aXNpYmlsaXR5LCBfKSk7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgICAgICBfLiRsaXN0Lm9uKCdrZXlkb3duLnNsaWNrJywgXy5rZXlIYW5kbGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZm9jdXNPblNlbGVjdCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgJChfLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKCdjbGljay5zbGljaycsIF8uc2VsZWN0SGFuZGxlcik7XG4gICAgICAgIH1cblxuICAgICAgICAkKHdpbmRvdykub24oJ29yaWVudGF0aW9uY2hhbmdlLnNsaWNrLnNsaWNrLScgKyBfLmluc3RhbmNlVWlkLCAkLnByb3h5KF8ub3JpZW50YXRpb25DaGFuZ2UsIF8pKTtcblxuICAgICAgICAkKHdpbmRvdykub24oJ3Jlc2l6ZS5zbGljay5zbGljay0nICsgXy5pbnN0YW5jZVVpZCwgJC5wcm94eShfLnJlc2l6ZSwgXykpO1xuXG4gICAgICAgICQoJ1tkcmFnZ2FibGUhPXRydWVdJywgXy4kc2xpZGVUcmFjaykub24oJ2RyYWdzdGFydCcsIF8ucHJldmVudERlZmF1bHQpO1xuXG4gICAgICAgICQod2luZG93KS5vbignbG9hZC5zbGljay5zbGljay0nICsgXy5pbnN0YW5jZVVpZCwgXy5zZXRQb3NpdGlvbik7XG4gICAgICAgICQoXy5zZXRQb3NpdGlvbik7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmluaXRVSSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmFycm93cyA9PT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG5cbiAgICAgICAgICAgIF8uJHByZXZBcnJvdy5zaG93KCk7XG4gICAgICAgICAgICBfLiRuZXh0QXJyb3cuc2hvdygpO1xuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5vcHRpb25zLmRvdHMgPT09IHRydWUgJiYgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuXG4gICAgICAgICAgICBfLiRkb3RzLnNob3coKTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmtleUhhbmRsZXIgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcbiAgICAgICAgIC8vRG9udCBzbGlkZSBpZiB0aGUgY3Vyc29yIGlzIGluc2lkZSB0aGUgZm9ybSBmaWVsZHMgYW5kIGFycm93IGtleXMgYXJlIHByZXNzZWRcbiAgICAgICAgaWYoIWV2ZW50LnRhcmdldC50YWdOYW1lLm1hdGNoKCdURVhUQVJFQXxJTlBVVHxTRUxFQ1QnKSkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDM3ICYmIF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgXy5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IF8ub3B0aW9ucy5ydGwgPT09IHRydWUgPyAnbmV4dCcgOiAgJ3ByZXZpb3VzJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LmtleUNvZGUgPT09IDM5ICYmIF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgXy5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IF8ub3B0aW9ucy5ydGwgPT09IHRydWUgPyAncHJldmlvdXMnIDogJ25leHQnXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5sYXp5TG9hZCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIGxvYWRSYW5nZSwgY2xvbmVSYW5nZSwgcmFuZ2VTdGFydCwgcmFuZ2VFbmQ7XG5cbiAgICAgICAgZnVuY3Rpb24gbG9hZEltYWdlcyhpbWFnZXNTY29wZSkge1xuXG4gICAgICAgICAgICAkKCdpbWdbZGF0YS1sYXp5XScsIGltYWdlc1Njb3BlKS5lYWNoKGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGltYWdlID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VTb3VyY2UgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtbGF6eScpLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZVNyY1NldCA9ICQodGhpcykuYXR0cignZGF0YS1zcmNzZXQnKSxcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VTaXplcyAgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtc2l6ZXMnKSB8fCBfLiRzbGlkZXIuYXR0cignZGF0YS1zaXplcycpLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZVRvTG9hZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuXG4gICAgICAgICAgICAgICAgaW1hZ2VUb0xvYWQub25sb2FkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hbmltYXRlKHsgb3BhY2l0eTogMCB9LCAxMDAsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltYWdlU3JjU2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignc3Jjc2V0JywgaW1hZ2VTcmNTZXQgKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1hZ2VTaXplcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignc2l6ZXMnLCBpbWFnZVNpemVzICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignc3JjJywgaW1hZ2VTb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hbmltYXRlKHsgb3BhY2l0eTogMSB9LCAyMDAsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cignZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXMnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnc2xpY2stbG9hZGluZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcignbGF6eUxvYWRlZCcsIFtfLCBpbWFnZSwgaW1hZ2VTb3VyY2VdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIGltYWdlVG9Mb2FkLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgICAgICBpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoICdkYXRhLWxhenknIClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyggJ3NsaWNrLWxvYWRpbmcnIClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyggJ3NsaWNrLWxhenlsb2FkLWVycm9yJyApO1xuXG4gICAgICAgICAgICAgICAgICAgIF8uJHNsaWRlci50cmlnZ2VyKCdsYXp5TG9hZEVycm9yJywgWyBfLCBpbWFnZSwgaW1hZ2VTb3VyY2UgXSk7XG5cbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgaW1hZ2VUb0xvYWQuc3JjID0gaW1hZ2VTb3VyY2U7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICByYW5nZVN0YXJ0ID0gXy5jdXJyZW50U2xpZGUgKyAoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIgKyAxKTtcbiAgICAgICAgICAgICAgICByYW5nZUVuZCA9IHJhbmdlU3RhcnQgKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgMjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VTdGFydCA9IE1hdGgubWF4KDAsIF8uY3VycmVudFNsaWRlIC0gKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyICsgMSkpO1xuICAgICAgICAgICAgICAgIHJhbmdlRW5kID0gMiArIChfLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMiArIDEpICsgXy5jdXJyZW50U2xpZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByYW5nZVN0YXJ0ID0gXy5vcHRpb25zLmluZmluaXRlID8gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyArIF8uY3VycmVudFNsaWRlIDogXy5jdXJyZW50U2xpZGU7XG4gICAgICAgICAgICByYW5nZUVuZCA9IE1hdGguY2VpbChyYW5nZVN0YXJ0ICsgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyk7XG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2VTdGFydCA+IDApIHJhbmdlU3RhcnQtLTtcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2VFbmQgPD0gXy5zbGlkZUNvdW50KSByYW5nZUVuZCsrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbG9hZFJhbmdlID0gXy4kc2xpZGVyLmZpbmQoJy5zbGljay1zbGlkZScpLnNsaWNlKHJhbmdlU3RhcnQsIHJhbmdlRW5kKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmxhenlMb2FkID09PSAnYW50aWNpcGF0ZWQnKSB7XG4gICAgICAgICAgICB2YXIgcHJldlNsaWRlID0gcmFuZ2VTdGFydCAtIDEsXG4gICAgICAgICAgICAgICAgbmV4dFNsaWRlID0gcmFuZ2VFbmQsXG4gICAgICAgICAgICAgICAgJHNsaWRlcyA9IF8uJHNsaWRlci5maW5kKCcuc2xpY2stc2xpZGUnKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChwcmV2U2xpZGUgPCAwKSBwcmV2U2xpZGUgPSBfLnNsaWRlQ291bnQgLSAxO1xuICAgICAgICAgICAgICAgIGxvYWRSYW5nZSA9IGxvYWRSYW5nZS5hZGQoJHNsaWRlcy5lcShwcmV2U2xpZGUpKTtcbiAgICAgICAgICAgICAgICBsb2FkUmFuZ2UgPSBsb2FkUmFuZ2UuYWRkKCRzbGlkZXMuZXEobmV4dFNsaWRlKSk7XG4gICAgICAgICAgICAgICAgcHJldlNsaWRlLS07XG4gICAgICAgICAgICAgICAgbmV4dFNsaWRlKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBsb2FkSW1hZ2VzKGxvYWRSYW5nZSk7XG5cbiAgICAgICAgaWYgKF8uc2xpZGVDb3VudCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICAgICAgICBjbG9uZVJhbmdlID0gXy4kc2xpZGVyLmZpbmQoJy5zbGljay1zbGlkZScpO1xuICAgICAgICAgICAgbG9hZEltYWdlcyhjbG9uZVJhbmdlKTtcbiAgICAgICAgfSBlbHNlXG4gICAgICAgIGlmIChfLmN1cnJlbnRTbGlkZSA+PSBfLnNsaWRlQ291bnQgLSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICAgICAgICBjbG9uZVJhbmdlID0gXy4kc2xpZGVyLmZpbmQoJy5zbGljay1jbG9uZWQnKS5zbGljZSgwLCBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgICAgICAgIGxvYWRJbWFnZXMoY2xvbmVSYW5nZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoXy5jdXJyZW50U2xpZGUgPT09IDApIHtcbiAgICAgICAgICAgIGNsb25lUmFuZ2UgPSBfLiRzbGlkZXIuZmluZCgnLnNsaWNrLWNsb25lZCcpLnNsaWNlKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKiAtMSk7XG4gICAgICAgICAgICBsb2FkSW1hZ2VzKGNsb25lUmFuZ2UpO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLmxvYWRTbGlkZXIgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy5zZXRQb3NpdGlvbigpO1xuXG4gICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy4kc2xpZGVyLnJlbW92ZUNsYXNzKCdzbGljay1sb2FkaW5nJyk7XG5cbiAgICAgICAgXy5pbml0VUkoKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmxhenlMb2FkID09PSAncHJvZ3Jlc3NpdmUnKSB7XG4gICAgICAgICAgICBfLnByb2dyZXNzaXZlTGF6eUxvYWQoKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5uZXh0ID0gU2xpY2sucHJvdG90eXBlLnNsaWNrTmV4dCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBfLmNoYW5nZVNsaWRlKHtcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnbmV4dCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLm9yaWVudGF0aW9uQ2hhbmdlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIF8uY2hlY2tSZXNwb25zaXZlKCk7XG4gICAgICAgIF8uc2V0UG9zaXRpb24oKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUucGF1c2UgPSBTbGljay5wcm90b3R5cGUuc2xpY2tQYXVzZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBfLmF1dG9QbGF5Q2xlYXIoKTtcbiAgICAgICAgXy5wYXVzZWQgPSB0cnVlO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5wbGF5ID0gU2xpY2sucHJvdG90eXBlLnNsaWNrUGxheSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBfLmF1dG9QbGF5KCk7XG4gICAgICAgIF8ub3B0aW9ucy5hdXRvcGxheSA9IHRydWU7XG4gICAgICAgIF8ucGF1c2VkID0gZmFsc2U7XG4gICAgICAgIF8uZm9jdXNzZWQgPSBmYWxzZTtcbiAgICAgICAgXy5pbnRlcnJ1cHRlZCA9IGZhbHNlO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5wb3N0U2xpZGUgPSBmdW5jdGlvbihpbmRleCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBpZiggIV8udW5zbGlja2VkICkge1xuXG4gICAgICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcignYWZ0ZXJDaGFuZ2UnLCBbXywgaW5kZXhdKTtcblxuICAgICAgICAgICAgXy5hbmltYXRpbmcgPSBmYWxzZTtcblxuICAgICAgICAgICAgaWYgKF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgICAgICAgICBfLnNldFBvc2l0aW9uKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF8uc3dpcGVMZWZ0ID0gbnVsbDtcblxuICAgICAgICAgICAgaWYgKCBfLm9wdGlvbnMuYXV0b3BsYXkgKSB7XG4gICAgICAgICAgICAgICAgXy5hdXRvUGxheSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfLmluaXRBREEoKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAoXy5vcHRpb25zLmZvY3VzT25DaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRjdXJyZW50U2xpZGUgPSAkKF8uJHNsaWRlcy5nZXQoXy5jdXJyZW50U2xpZGUpKTtcbiAgICAgICAgICAgICAgICAgICAgJGN1cnJlbnRTbGlkZS5hdHRyKCd0YWJpbmRleCcsIDApLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUucHJldiA9IFNsaWNrLnByb3RvdHlwZS5zbGlja1ByZXYgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ3ByZXZpb3VzJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnByb2dyZXNzaXZlTGF6eUxvYWQgPSBmdW5jdGlvbiggdHJ5Q291bnQgKSB7XG5cbiAgICAgICAgdHJ5Q291bnQgPSB0cnlDb3VudCB8fCAxO1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgICRpbWdzVG9Mb2FkID0gJCggJ2ltZ1tkYXRhLWxhenldJywgXy4kc2xpZGVyICksXG4gICAgICAgICAgICBpbWFnZSxcbiAgICAgICAgICAgIGltYWdlU291cmNlLFxuICAgICAgICAgICAgaW1hZ2VTcmNTZXQsXG4gICAgICAgICAgICBpbWFnZVNpemVzLFxuICAgICAgICAgICAgaW1hZ2VUb0xvYWQ7XG5cbiAgICAgICAgaWYgKCAkaW1nc1RvTG9hZC5sZW5ndGggKSB7XG5cbiAgICAgICAgICAgIGltYWdlID0gJGltZ3NUb0xvYWQuZmlyc3QoKTtcbiAgICAgICAgICAgIGltYWdlU291cmNlID0gaW1hZ2UuYXR0cignZGF0YS1sYXp5Jyk7XG4gICAgICAgICAgICBpbWFnZVNyY1NldCA9IGltYWdlLmF0dHIoJ2RhdGEtc3Jjc2V0Jyk7XG4gICAgICAgICAgICBpbWFnZVNpemVzICA9IGltYWdlLmF0dHIoJ2RhdGEtc2l6ZXMnKSB8fCBfLiRzbGlkZXIuYXR0cignZGF0YS1zaXplcycpO1xuICAgICAgICAgICAgaW1hZ2VUb0xvYWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcblxuICAgICAgICAgICAgaW1hZ2VUb0xvYWQub25sb2FkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoaW1hZ2VTcmNTZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdzcmNzZXQnLCBpbWFnZVNyY1NldCApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbWFnZVNpemVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdzaXplcycsIGltYWdlU2l6ZXMgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGltYWdlXG4gICAgICAgICAgICAgICAgICAgIC5hdHRyKCAnc3JjJywgaW1hZ2VTb3VyY2UgKVxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cignZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXMnKVxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ3NsaWNrLWxvYWRpbmcnKTtcblxuICAgICAgICAgICAgICAgIGlmICggXy5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ID09PSB0cnVlICkge1xuICAgICAgICAgICAgICAgICAgICBfLnNldFBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ2xhenlMb2FkZWQnLCBbIF8sIGltYWdlLCBpbWFnZVNvdXJjZSBdKTtcbiAgICAgICAgICAgICAgICBfLnByb2dyZXNzaXZlTGF6eUxvYWQoKTtcblxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaW1hZ2VUb0xvYWQub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgaWYgKCB0cnlDb3VudCA8IDMgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAqIHRyeSB0byBsb2FkIHRoZSBpbWFnZSAzIHRpbWVzLFxuICAgICAgICAgICAgICAgICAgICAgKiBsZWF2ZSBhIHNsaWdodCBkZWxheSBzbyB3ZSBkb24ndCBnZXRcbiAgICAgICAgICAgICAgICAgICAgICogc2VydmVycyBibG9ja2luZyB0aGUgcmVxdWVzdC5cbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgXy5wcm9ncmVzc2l2ZUxhenlMb2FkKCB0cnlDb3VudCArIDEgKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgNTAwICk7XG5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgICAgIGltYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0ciggJ2RhdGEtbGF6eScgKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKCAnc2xpY2stbG9hZGluZycgKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKCAnc2xpY2stbGF6eWxvYWQtZXJyb3InICk7XG5cbiAgICAgICAgICAgICAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ2xhenlMb2FkRXJyb3InLCBbIF8sIGltYWdlLCBpbWFnZVNvdXJjZSBdKTtcblxuICAgICAgICAgICAgICAgICAgICBfLnByb2dyZXNzaXZlTGF6eUxvYWQoKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaW1hZ2VUb0xvYWQuc3JjID0gaW1hZ2VTb3VyY2U7XG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ2FsbEltYWdlc0xvYWRlZCcsIFsgXyBdKTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiggaW5pdGlhbGl6aW5nICkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcywgY3VycmVudFNsaWRlLCBsYXN0VmlzaWJsZUluZGV4O1xuXG4gICAgICAgIGxhc3RWaXNpYmxlSW5kZXggPSBfLnNsaWRlQ291bnQgLSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93O1xuXG4gICAgICAgIC8vIGluIG5vbi1pbmZpbml0ZSBzbGlkZXJzLCB3ZSBkb24ndCB3YW50IHRvIGdvIHBhc3QgdGhlXG4gICAgICAgIC8vIGxhc3QgdmlzaWJsZSBpbmRleC5cbiAgICAgICAgaWYoICFfLm9wdGlvbnMuaW5maW5pdGUgJiYgKCBfLmN1cnJlbnRTbGlkZSA+IGxhc3RWaXNpYmxlSW5kZXggKSkge1xuICAgICAgICAgICAgXy5jdXJyZW50U2xpZGUgPSBsYXN0VmlzaWJsZUluZGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgbGVzcyBzbGlkZXMgdGhhbiB0byBzaG93LCBnbyB0byBzdGFydC5cbiAgICAgICAgaWYgKCBfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyApIHtcbiAgICAgICAgICAgIF8uY3VycmVudFNsaWRlID0gMDtcblxuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudFNsaWRlID0gXy5jdXJyZW50U2xpZGU7XG5cbiAgICAgICAgXy5kZXN0cm95KHRydWUpO1xuXG4gICAgICAgICQuZXh0ZW5kKF8sIF8uaW5pdGlhbHMsIHsgY3VycmVudFNsaWRlOiBjdXJyZW50U2xpZGUgfSk7XG5cbiAgICAgICAgXy5pbml0KCk7XG5cbiAgICAgICAgaWYoICFpbml0aWFsaXppbmcgKSB7XG5cbiAgICAgICAgICAgIF8uY2hhbmdlU2xpZGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ2luZGV4JyxcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IGN1cnJlbnRTbGlkZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIGZhbHNlKTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnJlZ2lzdGVyQnJlYWtwb2ludHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsIGJyZWFrcG9pbnQsIGN1cnJlbnRCcmVha3BvaW50LCBsLFxuICAgICAgICAgICAgcmVzcG9uc2l2ZVNldHRpbmdzID0gXy5vcHRpb25zLnJlc3BvbnNpdmUgfHwgbnVsbDtcblxuICAgICAgICBpZiAoICQudHlwZShyZXNwb25zaXZlU2V0dGluZ3MpID09PSAnYXJyYXknICYmIHJlc3BvbnNpdmVTZXR0aW5ncy5sZW5ndGggKSB7XG5cbiAgICAgICAgICAgIF8ucmVzcG9uZFRvID0gXy5vcHRpb25zLnJlc3BvbmRUbyB8fCAnd2luZG93JztcblxuICAgICAgICAgICAgZm9yICggYnJlYWtwb2ludCBpbiByZXNwb25zaXZlU2V0dGluZ3MgKSB7XG5cbiAgICAgICAgICAgICAgICBsID0gXy5icmVha3BvaW50cy5sZW5ndGgtMTtcblxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zaXZlU2V0dGluZ3MuaGFzT3duUHJvcGVydHkoYnJlYWtwb2ludCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEJyZWFrcG9pbnQgPSByZXNwb25zaXZlU2V0dGluZ3NbYnJlYWtwb2ludF0uYnJlYWtwb2ludDtcblxuICAgICAgICAgICAgICAgICAgICAvLyBsb29wIHRocm91Z2ggdGhlIGJyZWFrcG9pbnRzIGFuZCBjdXQgb3V0IGFueSBleGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAvLyBvbmVzIHdpdGggdGhlIHNhbWUgYnJlYWtwb2ludCBudW1iZXIsIHdlIGRvbid0IHdhbnQgZHVwZXMuXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlKCBsID49IDAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggXy5icmVha3BvaW50c1tsXSAmJiBfLmJyZWFrcG9pbnRzW2xdID09PSBjdXJyZW50QnJlYWtwb2ludCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLmJyZWFrcG9pbnRzLnNwbGljZShsLDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgbC0tO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgXy5icmVha3BvaW50cy5wdXNoKGN1cnJlbnRCcmVha3BvaW50KTtcbiAgICAgICAgICAgICAgICAgICAgXy5icmVha3BvaW50U2V0dGluZ3NbY3VycmVudEJyZWFrcG9pbnRdID0gcmVzcG9uc2l2ZVNldHRpbmdzW2JyZWFrcG9pbnRdLnNldHRpbmdzO1xuXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF8uYnJlYWtwb2ludHMuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICggXy5vcHRpb25zLm1vYmlsZUZpcnN0ICkgPyBhLWIgOiBiLWE7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnJlaW5pdCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBfLiRzbGlkZXMgPVxuICAgICAgICAgICAgXy4kc2xpZGVUcmFja1xuICAgICAgICAgICAgICAgIC5jaGlsZHJlbihfLm9wdGlvbnMuc2xpZGUpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKCdzbGljay1zbGlkZScpO1xuXG4gICAgICAgIF8uc2xpZGVDb3VudCA9IF8uJHNsaWRlcy5sZW5ndGg7XG5cbiAgICAgICAgaWYgKF8uY3VycmVudFNsaWRlID49IF8uc2xpZGVDb3VudCAmJiBfLmN1cnJlbnRTbGlkZSAhPT0gMCkge1xuICAgICAgICAgICAgXy5jdXJyZW50U2xpZGUgPSBfLmN1cnJlbnRTbGlkZSAtIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgICAgXy5jdXJyZW50U2xpZGUgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgXy5yZWdpc3RlckJyZWFrcG9pbnRzKCk7XG5cbiAgICAgICAgXy5zZXRQcm9wcygpO1xuICAgICAgICBfLnNldHVwSW5maW5pdGUoKTtcbiAgICAgICAgXy5idWlsZEFycm93cygpO1xuICAgICAgICBfLnVwZGF0ZUFycm93cygpO1xuICAgICAgICBfLmluaXRBcnJvd0V2ZW50cygpO1xuICAgICAgICBfLmJ1aWxkRG90cygpO1xuICAgICAgICBfLnVwZGF0ZURvdHMoKTtcbiAgICAgICAgXy5pbml0RG90RXZlbnRzKCk7XG4gICAgICAgIF8uY2xlYW5VcFNsaWRlRXZlbnRzKCk7XG4gICAgICAgIF8uaW5pdFNsaWRlRXZlbnRzKCk7XG5cbiAgICAgICAgXy5jaGVja1Jlc3BvbnNpdmUoZmFsc2UsIHRydWUpO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZm9jdXNPblNlbGVjdCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgJChfLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKCdjbGljay5zbGljaycsIF8uc2VsZWN0SGFuZGxlcik7XG4gICAgICAgIH1cblxuICAgICAgICBfLnNldFNsaWRlQ2xhc3Nlcyh0eXBlb2YgXy5jdXJyZW50U2xpZGUgPT09ICdudW1iZXInID8gXy5jdXJyZW50U2xpZGUgOiAwKTtcblxuICAgICAgICBfLnNldFBvc2l0aW9uKCk7XG4gICAgICAgIF8uZm9jdXNIYW5kbGVyKCk7XG5cbiAgICAgICAgXy5wYXVzZWQgPSAhXy5vcHRpb25zLmF1dG9wbGF5O1xuICAgICAgICBfLmF1dG9QbGF5KCk7XG5cbiAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ3JlSW5pdCcsIFtfXSk7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnJlc2l6ZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgIT09IF8ud2luZG93V2lkdGgpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dChfLndpbmRvd0RlbGF5KTtcbiAgICAgICAgICAgIF8ud2luZG93RGVsYXkgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBfLndpbmRvd1dpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XG4gICAgICAgICAgICAgICAgXy5jaGVja1Jlc3BvbnNpdmUoKTtcbiAgICAgICAgICAgICAgICBpZiggIV8udW5zbGlja2VkICkgeyBfLnNldFBvc2l0aW9uKCk7IH1cbiAgICAgICAgICAgIH0sIDUwKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUucmVtb3ZlU2xpZGUgPSBTbGljay5wcm90b3R5cGUuc2xpY2tSZW1vdmUgPSBmdW5jdGlvbihpbmRleCwgcmVtb3ZlQmVmb3JlLCByZW1vdmVBbGwpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgaWYgKHR5cGVvZihpbmRleCkgPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgcmVtb3ZlQmVmb3JlID0gaW5kZXg7XG4gICAgICAgICAgICBpbmRleCA9IHJlbW92ZUJlZm9yZSA9PT0gdHJ1ZSA/IDAgOiBfLnNsaWRlQ291bnQgLSAxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5kZXggPSByZW1vdmVCZWZvcmUgPT09IHRydWUgPyAtLWluZGV4IDogaW5kZXg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5zbGlkZUNvdW50IDwgMSB8fCBpbmRleCA8IDAgfHwgaW5kZXggPiBfLnNsaWRlQ291bnQgLSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBfLnVubG9hZCgpO1xuXG4gICAgICAgIGlmIChyZW1vdmVBbGwgPT09IHRydWUpIHtcbiAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oKS5yZW1vdmUoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5lcShpbmRleCkucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBfLiRzbGlkZXMgPSBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSk7XG5cbiAgICAgICAgXy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpO1xuXG4gICAgICAgIF8uJHNsaWRlVHJhY2suYXBwZW5kKF8uJHNsaWRlcyk7XG5cbiAgICAgICAgXy4kc2xpZGVzQ2FjaGUgPSBfLiRzbGlkZXM7XG5cbiAgICAgICAgXy5yZWluaXQoKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc2V0Q1NTID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAgICAgICBwb3NpdGlvblByb3BzID0ge30sXG4gICAgICAgICAgICB4LCB5O1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMucnRsID09PSB0cnVlKSB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IC1wb3NpdGlvbjtcbiAgICAgICAgfVxuICAgICAgICB4ID0gXy5wb3NpdGlvblByb3AgPT0gJ2xlZnQnID8gTWF0aC5jZWlsKHBvc2l0aW9uKSArICdweCcgOiAnMHB4JztcbiAgICAgICAgeSA9IF8ucG9zaXRpb25Qcm9wID09ICd0b3AnID8gTWF0aC5jZWlsKHBvc2l0aW9uKSArICdweCcgOiAnMHB4JztcblxuICAgICAgICBwb3NpdGlvblByb3BzW18ucG9zaXRpb25Qcm9wXSA9IHBvc2l0aW9uO1xuXG4gICAgICAgIGlmIChfLnRyYW5zZm9ybXNFbmFibGVkID09PSBmYWxzZSkge1xuICAgICAgICAgICAgXy4kc2xpZGVUcmFjay5jc3MocG9zaXRpb25Qcm9wcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwb3NpdGlvblByb3BzID0ge307XG4gICAgICAgICAgICBpZiAoXy5jc3NUcmFuc2l0aW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvblByb3BzW18uYW5pbVR5cGVdID0gJ3RyYW5zbGF0ZSgnICsgeCArICcsICcgKyB5ICsgJyknO1xuICAgICAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKHBvc2l0aW9uUHJvcHMpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvblByb3BzW18uYW5pbVR5cGVdID0gJ3RyYW5zbGF0ZTNkKCcgKyB4ICsgJywgJyArIHkgKyAnLCAwcHgpJztcbiAgICAgICAgICAgICAgICBfLiRzbGlkZVRyYWNrLmNzcyhwb3NpdGlvblByb3BzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5zZXREaW1lbnNpb25zID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfLiRsaXN0LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICgnMHB4ICcgKyBfLm9wdGlvbnMuY2VudGVyUGFkZGluZylcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF8uJGxpc3QuaGVpZ2h0KF8uJHNsaWRlcy5maXJzdCgpLm91dGVySGVpZ2h0KHRydWUpICogXy5vcHRpb25zLnNsaWRlc1RvU2hvdyk7XG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfLiRsaXN0LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IChfLm9wdGlvbnMuY2VudGVyUGFkZGluZyArICcgMHB4JylcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIF8ubGlzdFdpZHRoID0gXy4kbGlzdC53aWR0aCgpO1xuICAgICAgICBfLmxpc3RIZWlnaHQgPSBfLiRsaXN0LmhlaWdodCgpO1xuXG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gZmFsc2UgJiYgXy5vcHRpb25zLnZhcmlhYmxlV2lkdGggPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBfLnNsaWRlV2lkdGggPSBNYXRoLmNlaWwoXy5saXN0V2lkdGggLyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgICAgICAgIF8uJHNsaWRlVHJhY2sud2lkdGgoTWF0aC5jZWlsKChfLnNsaWRlV2lkdGggKiBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKCcuc2xpY2stc2xpZGUnKS5sZW5ndGgpKSk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChfLm9wdGlvbnMudmFyaWFibGVXaWR0aCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgXy4kc2xpZGVUcmFjay53aWR0aCg1MDAwICogXy5zbGlkZUNvdW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF8uc2xpZGVXaWR0aCA9IE1hdGguY2VpbChfLmxpc3RXaWR0aCk7XG4gICAgICAgICAgICBfLiRzbGlkZVRyYWNrLmhlaWdodChNYXRoLmNlaWwoKF8uJHNsaWRlcy5maXJzdCgpLm91dGVySGVpZ2h0KHRydWUpICogXy4kc2xpZGVUcmFjay5jaGlsZHJlbignLnNsaWNrLXNsaWRlJykubGVuZ3RoKSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG9mZnNldCA9IF8uJHNsaWRlcy5maXJzdCgpLm91dGVyV2lkdGgodHJ1ZSkgLSBfLiRzbGlkZXMuZmlyc3QoKS53aWR0aCgpO1xuICAgICAgICBpZiAoXy5vcHRpb25zLnZhcmlhYmxlV2lkdGggPT09IGZhbHNlKSBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKCcuc2xpY2stc2xpZGUnKS53aWR0aChfLnNsaWRlV2lkdGggLSBvZmZzZXQpO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5zZXRGYWRlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgdGFyZ2V0TGVmdDtcblxuICAgICAgICBfLiRzbGlkZXMuZWFjaChmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xuICAgICAgICAgICAgdGFyZ2V0TGVmdCA9IChfLnNsaWRlV2lkdGggKiBpbmRleCkgKiAtMTtcbiAgICAgICAgICAgIGlmIChfLm9wdGlvbnMucnRsID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgJChlbGVtZW50KS5jc3Moe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IHRhcmdldExlZnQsXG4gICAgICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICAgICAgekluZGV4OiBfLm9wdGlvbnMuekluZGV4IC0gMixcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiB0YXJnZXRMZWZ0LFxuICAgICAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgICAgIHpJbmRleDogXy5vcHRpb25zLnpJbmRleCAtIDIsXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgXy4kc2xpZGVzLmVxKF8uY3VycmVudFNsaWRlKS5jc3Moe1xuICAgICAgICAgICAgekluZGV4OiBfLm9wdGlvbnMuekluZGV4IC0gMSxcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnNldEhlaWdodCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBpZiAoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA9PT0gMSAmJiBfLm9wdGlvbnMuYWRhcHRpdmVIZWlnaHQgPT09IHRydWUgJiYgXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgICAgICAgdmFyIHRhcmdldEhlaWdodCA9IF8uJHNsaWRlcy5lcShfLmN1cnJlbnRTbGlkZSkub3V0ZXJIZWlnaHQodHJ1ZSk7XG4gICAgICAgICAgICBfLiRsaXN0LmNzcygnaGVpZ2h0JywgdGFyZ2V0SGVpZ2h0KTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5zZXRPcHRpb24gPVxuICAgIFNsaWNrLnByb3RvdHlwZS5zbGlja1NldE9wdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhY2NlcHRzIGFyZ3VtZW50cyBpbiBmb3JtYXQgb2Y6XG4gICAgICAgICAqXG4gICAgICAgICAqICAtIGZvciBjaGFuZ2luZyBhIHNpbmdsZSBvcHRpb24ncyB2YWx1ZTpcbiAgICAgICAgICogICAgIC5zbGljayhcInNldE9wdGlvblwiLCBvcHRpb24sIHZhbHVlLCByZWZyZXNoIClcbiAgICAgICAgICpcbiAgICAgICAgICogIC0gZm9yIGNoYW5naW5nIGEgc2V0IG9mIHJlc3BvbnNpdmUgb3B0aW9uczpcbiAgICAgICAgICogICAgIC5zbGljayhcInNldE9wdGlvblwiLCAncmVzcG9uc2l2ZScsIFt7fSwgLi4uXSwgcmVmcmVzaCApXG4gICAgICAgICAqXG4gICAgICAgICAqICAtIGZvciB1cGRhdGluZyBtdWx0aXBsZSB2YWx1ZXMgYXQgb25jZSAobm90IHJlc3BvbnNpdmUpXG4gICAgICAgICAqICAgICAuc2xpY2soXCJzZXRPcHRpb25cIiwgeyAnb3B0aW9uJzogdmFsdWUsIC4uLiB9LCByZWZyZXNoIClcbiAgICAgICAgICovXG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLCBsLCBpdGVtLCBvcHRpb24sIHZhbHVlLCByZWZyZXNoID0gZmFsc2UsIHR5cGU7XG5cbiAgICAgICAgaWYoICQudHlwZSggYXJndW1lbnRzWzBdICkgPT09ICdvYmplY3QnICkge1xuXG4gICAgICAgICAgICBvcHRpb24gPSAgYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgcmVmcmVzaCA9IGFyZ3VtZW50c1sxXTtcbiAgICAgICAgICAgIHR5cGUgPSAnbXVsdGlwbGUnO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoICQudHlwZSggYXJndW1lbnRzWzBdICkgPT09ICdzdHJpbmcnICkge1xuXG4gICAgICAgICAgICBvcHRpb24gPSAgYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgdmFsdWUgPSBhcmd1bWVudHNbMV07XG4gICAgICAgICAgICByZWZyZXNoID0gYXJndW1lbnRzWzJdO1xuXG4gICAgICAgICAgICBpZiAoIGFyZ3VtZW50c1swXSA9PT0gJ3Jlc3BvbnNpdmUnICYmICQudHlwZSggYXJndW1lbnRzWzFdICkgPT09ICdhcnJheScgKSB7XG5cbiAgICAgICAgICAgICAgICB0eXBlID0gJ3Jlc3BvbnNpdmUnO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCB0eXBlb2YgYXJndW1lbnRzWzFdICE9PSAndW5kZWZpbmVkJyApIHtcblxuICAgICAgICAgICAgICAgIHR5cGUgPSAnc2luZ2xlJztcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIHR5cGUgPT09ICdzaW5nbGUnICkge1xuXG4gICAgICAgICAgICBfLm9wdGlvbnNbb3B0aW9uXSA9IHZhbHVlO1xuXG5cbiAgICAgICAgfSBlbHNlIGlmICggdHlwZSA9PT0gJ211bHRpcGxlJyApIHtcblxuICAgICAgICAgICAgJC5lYWNoKCBvcHRpb24gLCBmdW5jdGlvbiggb3B0LCB2YWwgKSB7XG5cbiAgICAgICAgICAgICAgICBfLm9wdGlvbnNbb3B0XSA9IHZhbDtcblxuICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICB9IGVsc2UgaWYgKCB0eXBlID09PSAncmVzcG9uc2l2ZScgKSB7XG5cbiAgICAgICAgICAgIGZvciAoIGl0ZW0gaW4gdmFsdWUgKSB7XG5cbiAgICAgICAgICAgICAgICBpZiggJC50eXBlKCBfLm9wdGlvbnMucmVzcG9uc2l2ZSApICE9PSAnYXJyYXknICkge1xuXG4gICAgICAgICAgICAgICAgICAgIF8ub3B0aW9ucy5yZXNwb25zaXZlID0gWyB2YWx1ZVtpdGVtXSBdO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICBsID0gXy5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoLTE7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIHRoZSByZXNwb25zaXZlIG9iamVjdCBhbmQgc3BsaWNlIG91dCBkdXBsaWNhdGVzLlxuICAgICAgICAgICAgICAgICAgICB3aGlsZSggbCA+PSAwICkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggXy5vcHRpb25zLnJlc3BvbnNpdmVbbF0uYnJlYWtwb2ludCA9PT0gdmFsdWVbaXRlbV0uYnJlYWtwb2ludCApIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF8ub3B0aW9ucy5yZXNwb25zaXZlLnNwbGljZShsLDEpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGwtLTtcblxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgXy5vcHRpb25zLnJlc3BvbnNpdmUucHVzaCggdmFsdWVbaXRlbV0gKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIHJlZnJlc2ggKSB7XG5cbiAgICAgICAgICAgIF8udW5sb2FkKCk7XG4gICAgICAgICAgICBfLnJlaW5pdCgpO1xuXG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc2V0UG9zaXRpb24gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgXy5zZXREaW1lbnNpb25zKCk7XG5cbiAgICAgICAgXy5zZXRIZWlnaHQoKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBfLnNldENTUyhfLmdldExlZnQoXy5jdXJyZW50U2xpZGUpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF8uc2V0RmFkZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ3NldFBvc2l0aW9uJywgW19dKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc2V0UHJvcHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAgICAgICBib2R5U3R5bGUgPSBkb2N1bWVudC5ib2R5LnN0eWxlO1xuXG4gICAgICAgIF8ucG9zaXRpb25Qcm9wID0gXy5vcHRpb25zLnZlcnRpY2FsID09PSB0cnVlID8gJ3RvcCcgOiAnbGVmdCc7XG5cbiAgICAgICAgaWYgKF8ucG9zaXRpb25Qcm9wID09PSAndG9wJykge1xuICAgICAgICAgICAgXy4kc2xpZGVyLmFkZENsYXNzKCdzbGljay12ZXJ0aWNhbCcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgXy4kc2xpZGVyLnJlbW92ZUNsYXNzKCdzbGljay12ZXJ0aWNhbCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGJvZHlTdHlsZS5XZWJraXRUcmFuc2l0aW9uICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIGJvZHlTdHlsZS5Nb3pUcmFuc2l0aW9uICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIGJvZHlTdHlsZS5tc1RyYW5zaXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy51c2VDU1MgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfLmNzc1RyYW5zaXRpb25zID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICggXy5vcHRpb25zLmZhZGUgKSB7XG4gICAgICAgICAgICBpZiAoIHR5cGVvZiBfLm9wdGlvbnMuekluZGV4ID09PSAnbnVtYmVyJyApIHtcbiAgICAgICAgICAgICAgICBpZiggXy5vcHRpb25zLnpJbmRleCA8IDMgKSB7XG4gICAgICAgICAgICAgICAgICAgIF8ub3B0aW9ucy56SW5kZXggPSAzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgXy5vcHRpb25zLnpJbmRleCA9IF8uZGVmYXVsdHMuekluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGJvZHlTdHlsZS5PVHJhbnNmb3JtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIF8uYW5pbVR5cGUgPSAnT1RyYW5zZm9ybSc7XG4gICAgICAgICAgICBfLnRyYW5zZm9ybVR5cGUgPSAnLW8tdHJhbnNmb3JtJztcbiAgICAgICAgICAgIF8udHJhbnNpdGlvblR5cGUgPSAnT1RyYW5zaXRpb24nO1xuICAgICAgICAgICAgaWYgKGJvZHlTdHlsZS5wZXJzcGVjdGl2ZVByb3BlcnR5ID09PSB1bmRlZmluZWQgJiYgYm9keVN0eWxlLndlYmtpdFBlcnNwZWN0aXZlID09PSB1bmRlZmluZWQpIF8uYW5pbVR5cGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYm9keVN0eWxlLk1velRyYW5zZm9ybSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBfLmFuaW1UeXBlID0gJ01velRyYW5zZm9ybSc7XG4gICAgICAgICAgICBfLnRyYW5zZm9ybVR5cGUgPSAnLW1vei10cmFuc2Zvcm0nO1xuICAgICAgICAgICAgXy50cmFuc2l0aW9uVHlwZSA9ICdNb3pUcmFuc2l0aW9uJztcbiAgICAgICAgICAgIGlmIChib2R5U3R5bGUucGVyc3BlY3RpdmVQcm9wZXJ0eSA9PT0gdW5kZWZpbmVkICYmIGJvZHlTdHlsZS5Nb3pQZXJzcGVjdGl2ZSA9PT0gdW5kZWZpbmVkKSBfLmFuaW1UeXBlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJvZHlTdHlsZS53ZWJraXRUcmFuc2Zvcm0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgXy5hbmltVHlwZSA9ICd3ZWJraXRUcmFuc2Zvcm0nO1xuICAgICAgICAgICAgXy50cmFuc2Zvcm1UeXBlID0gJy13ZWJraXQtdHJhbnNmb3JtJztcbiAgICAgICAgICAgIF8udHJhbnNpdGlvblR5cGUgPSAnd2Via2l0VHJhbnNpdGlvbic7XG4gICAgICAgICAgICBpZiAoYm9keVN0eWxlLnBlcnNwZWN0aXZlUHJvcGVydHkgPT09IHVuZGVmaW5lZCAmJiBib2R5U3R5bGUud2Via2l0UGVyc3BlY3RpdmUgPT09IHVuZGVmaW5lZCkgXy5hbmltVHlwZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChib2R5U3R5bGUubXNUcmFuc2Zvcm0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgXy5hbmltVHlwZSA9ICdtc1RyYW5zZm9ybSc7XG4gICAgICAgICAgICBfLnRyYW5zZm9ybVR5cGUgPSAnLW1zLXRyYW5zZm9ybSc7XG4gICAgICAgICAgICBfLnRyYW5zaXRpb25UeXBlID0gJ21zVHJhbnNpdGlvbic7XG4gICAgICAgICAgICBpZiAoYm9keVN0eWxlLm1zVHJhbnNmb3JtID09PSB1bmRlZmluZWQpIF8uYW5pbVR5cGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYm9keVN0eWxlLnRyYW5zZm9ybSAhPT0gdW5kZWZpbmVkICYmIF8uYW5pbVR5cGUgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICBfLmFuaW1UeXBlID0gJ3RyYW5zZm9ybSc7XG4gICAgICAgICAgICBfLnRyYW5zZm9ybVR5cGUgPSAndHJhbnNmb3JtJztcbiAgICAgICAgICAgIF8udHJhbnNpdGlvblR5cGUgPSAndHJhbnNpdGlvbic7XG4gICAgICAgIH1cbiAgICAgICAgXy50cmFuc2Zvcm1zRW5hYmxlZCA9IF8ub3B0aW9ucy51c2VUcmFuc2Zvcm0gJiYgKF8uYW5pbVR5cGUgIT09IG51bGwgJiYgXy5hbmltVHlwZSAhPT0gZmFsc2UpO1xuICAgIH07XG5cblxuICAgIFNsaWNrLnByb3RvdHlwZS5zZXRTbGlkZUNsYXNzZXMgPSBmdW5jdGlvbihpbmRleCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIGNlbnRlck9mZnNldCwgYWxsU2xpZGVzLCBpbmRleE9mZnNldCwgcmVtYWluZGVyO1xuXG4gICAgICAgIGFsbFNsaWRlcyA9IF8uJHNsaWRlclxuICAgICAgICAgICAgLmZpbmQoJy5zbGljay1zbGlkZScpXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ3NsaWNrLWFjdGl2ZSBzbGljay1jZW50ZXIgc2xpY2stY3VycmVudCcpXG4gICAgICAgICAgICAuYXR0cignYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuXG4gICAgICAgIF8uJHNsaWRlc1xuICAgICAgICAgICAgLmVxKGluZGV4KVxuICAgICAgICAgICAgLmFkZENsYXNzKCdzbGljay1jdXJyZW50Jyk7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5jZW50ZXJNb2RlID09PSB0cnVlKSB7XG5cbiAgICAgICAgICAgIHZhciBldmVuQ29lZiA9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJSAyID09PSAwID8gMSA6IDA7XG5cbiAgICAgICAgICAgIGNlbnRlck9mZnNldCA9IE1hdGguZmxvb3IoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpO1xuXG4gICAgICAgICAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSB0cnVlKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPj0gY2VudGVyT2Zmc2V0ICYmIGluZGV4IDw9IChfLnNsaWRlQ291bnQgLSAxKSAtIGNlbnRlck9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICBfLiRzbGlkZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zbGljZShpbmRleCAtIGNlbnRlck9mZnNldCArIGV2ZW5Db2VmLCBpbmRleCArIGNlbnRlck9mZnNldCArIDEpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoJ3NsaWNrLWFjdGl2ZScpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcblxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICAgICAgaW5kZXhPZmZzZXQgPSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIGFsbFNsaWRlc1xuICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKGluZGV4T2Zmc2V0IC0gY2VudGVyT2Zmc2V0ICsgMSArIGV2ZW5Db2VmLCBpbmRleE9mZnNldCArIGNlbnRlck9mZnNldCArIDIpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoJ3NsaWNrLWFjdGl2ZScpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gMCkge1xuXG4gICAgICAgICAgICAgICAgICAgIGFsbFNsaWRlc1xuICAgICAgICAgICAgICAgICAgICAgICAgLmVxKGFsbFNsaWRlcy5sZW5ndGggLSAxIC0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2stY2VudGVyJyk7XG5cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGluZGV4ID09PSBfLnNsaWRlQ291bnQgLSAxKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgYWxsU2xpZGVzXG4gICAgICAgICAgICAgICAgICAgICAgICAuZXEoXy5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2stY2VudGVyJyk7XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgXy4kc2xpZGVzXG4gICAgICAgICAgICAgICAgLmVxKGluZGV4KVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2stY2VudGVyJyk7XG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgaWYgKGluZGV4ID49IDAgJiYgaW5kZXggPD0gKF8uc2xpZGVDb3VudCAtIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKSB7XG5cbiAgICAgICAgICAgICAgICBfLiRzbGlkZXNcbiAgICAgICAgICAgICAgICAgICAgLnNsaWNlKGluZGV4LCBpbmRleCArIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2stYWN0aXZlJylcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2FyaWEtaGlkZGVuJywgJ2ZhbHNlJyk7XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYWxsU2xpZGVzLmxlbmd0aCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG5cbiAgICAgICAgICAgICAgICBhbGxTbGlkZXNcbiAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKCdzbGljay1hY3RpdmUnKVxuICAgICAgICAgICAgICAgICAgICAuYXR0cignYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgIHJlbWFpbmRlciA9IF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgICAgICAgICAgICAgaW5kZXhPZmZzZXQgPSBfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUgPyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgaW5kZXggOiBpbmRleDtcblxuICAgICAgICAgICAgICAgIGlmIChfLm9wdGlvbnMuc2xpZGVzVG9TaG93ID09IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAmJiAoXy5zbGlkZUNvdW50IC0gaW5kZXgpIDwgXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuXG4gICAgICAgICAgICAgICAgICAgIGFsbFNsaWRlc1xuICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKGluZGV4T2Zmc2V0IC0gKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSByZW1haW5kZXIpLCBpbmRleE9mZnNldCArIHJlbWFpbmRlcilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2stYWN0aXZlJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdhcmlhLWhpZGRlbicsICdmYWxzZScpO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICBhbGxTbGlkZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zbGljZShpbmRleE9mZnNldCwgaW5kZXhPZmZzZXQgKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KVxuICAgICAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKCdzbGljay1hY3RpdmUnKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2FyaWEtaGlkZGVuJywgJ2ZhbHNlJyk7XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5sYXp5TG9hZCA9PT0gJ29uZGVtYW5kJyB8fCBfLm9wdGlvbnMubGF6eUxvYWQgPT09ICdhbnRpY2lwYXRlZCcpIHtcbiAgICAgICAgICAgIF8ubGF6eUxvYWQoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc2V0dXBJbmZpbml0ZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIGksIHNsaWRlSW5kZXgsIGluZmluaXRlQ291bnQ7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBfLm9wdGlvbnMuY2VudGVyTW9kZSA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5pbmZpbml0ZSA9PT0gdHJ1ZSAmJiBfLm9wdGlvbnMuZmFkZSA9PT0gZmFsc2UpIHtcblxuICAgICAgICAgICAgc2xpZGVJbmRleCA9IG51bGw7XG5cbiAgICAgICAgICAgIGlmIChfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVDb3VudCA9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyAxO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGluZmluaXRlQ291bnQgPSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZvciAoaSA9IF8uc2xpZGVDb3VudDsgaSA+IChfLnNsaWRlQ291bnQgLVxuICAgICAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVDb3VudCk7IGkgLT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZUluZGV4ID0gaSAtIDE7XG4gICAgICAgICAgICAgICAgICAgICQoXy4kc2xpZGVzW3NsaWRlSW5kZXhdKS5jbG9uZSh0cnVlKS5hdHRyKCdpZCcsICcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2RhdGEtc2xpY2staW5kZXgnLCBzbGlkZUluZGV4IC0gXy5zbGlkZUNvdW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnByZXBlbmRUbyhfLiRzbGlkZVRyYWNrKS5hZGRDbGFzcygnc2xpY2stY2xvbmVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBpbmZpbml0ZUNvdW50ICArIF8uc2xpZGVDb3VudDsgaSArPSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlSW5kZXggPSBpO1xuICAgICAgICAgICAgICAgICAgICAkKF8uJHNsaWRlc1tzbGlkZUluZGV4XSkuY2xvbmUodHJ1ZSkuYXR0cignaWQnLCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdkYXRhLXNsaWNrLWluZGV4Jywgc2xpZGVJbmRleCArIF8uc2xpZGVDb3VudClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmRUbyhfLiRzbGlkZVRyYWNrKS5hZGRDbGFzcygnc2xpY2stY2xvbmVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suZmluZCgnLnNsaWNrLWNsb25lZCcpLmZpbmQoJ1tpZF0nKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoJ2lkJywgJycpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5pbnRlcnJ1cHQgPSBmdW5jdGlvbiggdG9nZ2xlICkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcztcblxuICAgICAgICBpZiggIXRvZ2dsZSApIHtcbiAgICAgICAgICAgIF8uYXV0b1BsYXkoKTtcbiAgICAgICAgfVxuICAgICAgICBfLmludGVycnVwdGVkID0gdG9nZ2xlO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5zZWxlY3RIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgdmFyIHRhcmdldEVsZW1lbnQgPVxuICAgICAgICAgICAgJChldmVudC50YXJnZXQpLmlzKCcuc2xpY2stc2xpZGUnKSA/XG4gICAgICAgICAgICAgICAgJChldmVudC50YXJnZXQpIDpcbiAgICAgICAgICAgICAgICAkKGV2ZW50LnRhcmdldCkucGFyZW50cygnLnNsaWNrLXNsaWRlJyk7XG5cbiAgICAgICAgdmFyIGluZGV4ID0gcGFyc2VJbnQodGFyZ2V0RWxlbWVudC5hdHRyKCdkYXRhLXNsaWNrLWluZGV4JykpO1xuXG4gICAgICAgIGlmICghaW5kZXgpIGluZGV4ID0gMDtcblxuICAgICAgICBpZiAoXy5zbGlkZUNvdW50IDw9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcblxuICAgICAgICAgICAgXy5zbGlkZUhhbmRsZXIoaW5kZXgsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICB9XG5cbiAgICAgICAgXy5zbGlkZUhhbmRsZXIoaW5kZXgpO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5zbGlkZUhhbmRsZXIgPSBmdW5jdGlvbihpbmRleCwgc3luYywgZG9udEFuaW1hdGUpIHtcblxuICAgICAgICB2YXIgdGFyZ2V0U2xpZGUsIGFuaW1TbGlkZSwgb2xkU2xpZGUsIHNsaWRlTGVmdCwgdGFyZ2V0TGVmdCA9IG51bGwsXG4gICAgICAgICAgICBfID0gdGhpcywgbmF2VGFyZ2V0O1xuXG4gICAgICAgIHN5bmMgPSBzeW5jIHx8IGZhbHNlO1xuXG4gICAgICAgIGlmIChfLmFuaW1hdGluZyA9PT0gdHJ1ZSAmJiBfLm9wdGlvbnMud2FpdEZvckFuaW1hdGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gdHJ1ZSAmJiBfLmN1cnJlbnRTbGlkZSA9PT0gaW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzeW5jID09PSBmYWxzZSkge1xuICAgICAgICAgICAgXy5hc05hdkZvcihpbmRleCk7XG4gICAgICAgIH1cblxuICAgICAgICB0YXJnZXRTbGlkZSA9IGluZGV4O1xuICAgICAgICB0YXJnZXRMZWZ0ID0gXy5nZXRMZWZ0KHRhcmdldFNsaWRlKTtcbiAgICAgICAgc2xpZGVMZWZ0ID0gXy5nZXRMZWZ0KF8uY3VycmVudFNsaWRlKTtcblxuICAgICAgICBfLmN1cnJlbnRMZWZ0ID0gXy5zd2lwZUxlZnQgPT09IG51bGwgPyBzbGlkZUxlZnQgOiBfLnN3aXBlTGVmdDtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSBmYWxzZSAmJiBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gZmFsc2UgJiYgKGluZGV4IDwgMCB8fCBpbmRleCA+IF8uZ2V0RG90Q291bnQoKSAqIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCkpIHtcbiAgICAgICAgICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRTbGlkZSA9IF8uY3VycmVudFNsaWRlO1xuICAgICAgICAgICAgICAgIGlmIChkb250QW5pbWF0ZSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICBfLmFuaW1hdGVTbGlkZShzbGlkZUxlZnQsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgXy5wb3N0U2xpZGUodGFyZ2V0U2xpZGUpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBfLnBvc3RTbGlkZSh0YXJnZXRTbGlkZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IGVsc2UgaWYgKF8ub3B0aW9ucy5pbmZpbml0ZSA9PT0gZmFsc2UgJiYgXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUgJiYgKGluZGV4IDwgMCB8fCBpbmRleCA+IChfLnNsaWRlQ291bnQgLSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpKSkge1xuICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFNsaWRlID0gXy5jdXJyZW50U2xpZGU7XG4gICAgICAgICAgICAgICAgaWYgKGRvbnRBbmltYXRlICE9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIF8uYW5pbWF0ZVNsaWRlKHNsaWRlTGVmdCwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfLnBvc3RTbGlkZSh0YXJnZXRTbGlkZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF8ucG9zdFNsaWRlKHRhcmdldFNsaWRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIF8ub3B0aW9ucy5hdXRvcGxheSApIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoXy5hdXRvUGxheVRpbWVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0YXJnZXRTbGlkZSA8IDApIHtcbiAgICAgICAgICAgIGlmIChfLnNsaWRlQ291bnQgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgIT09IDApIHtcbiAgICAgICAgICAgICAgICBhbmltU2xpZGUgPSBfLnNsaWRlQ291bnQgLSAoXy5zbGlkZUNvdW50ICUgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYW5pbVNsaWRlID0gXy5zbGlkZUNvdW50ICsgdGFyZ2V0U2xpZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0U2xpZGUgPj0gXy5zbGlkZUNvdW50KSB7XG4gICAgICAgICAgICBpZiAoXy5zbGlkZUNvdW50ICUgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgYW5pbVNsaWRlID0gMDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYW5pbVNsaWRlID0gdGFyZ2V0U2xpZGUgLSBfLnNsaWRlQ291bnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhbmltU2xpZGUgPSB0YXJnZXRTbGlkZTtcbiAgICAgICAgfVxuXG4gICAgICAgIF8uYW5pbWF0aW5nID0gdHJ1ZTtcblxuICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcignYmVmb3JlQ2hhbmdlJywgW18sIF8uY3VycmVudFNsaWRlLCBhbmltU2xpZGVdKTtcblxuICAgICAgICBvbGRTbGlkZSA9IF8uY3VycmVudFNsaWRlO1xuICAgICAgICBfLmN1cnJlbnRTbGlkZSA9IGFuaW1TbGlkZTtcblxuICAgICAgICBfLnNldFNsaWRlQ2xhc3NlcyhfLmN1cnJlbnRTbGlkZSk7XG5cbiAgICAgICAgaWYgKCBfLm9wdGlvbnMuYXNOYXZGb3IgKSB7XG5cbiAgICAgICAgICAgIG5hdlRhcmdldCA9IF8uZ2V0TmF2VGFyZ2V0KCk7XG4gICAgICAgICAgICBuYXZUYXJnZXQgPSBuYXZUYXJnZXQuc2xpY2soJ2dldFNsaWNrJyk7XG5cbiAgICAgICAgICAgIGlmICggbmF2VGFyZ2V0LnNsaWRlQ291bnQgPD0gbmF2VGFyZ2V0Lm9wdGlvbnMuc2xpZGVzVG9TaG93ICkge1xuICAgICAgICAgICAgICAgIG5hdlRhcmdldC5zZXRTbGlkZUNsYXNzZXMoXy5jdXJyZW50U2xpZGUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICBfLnVwZGF0ZURvdHMoKTtcbiAgICAgICAgXy51cGRhdGVBcnJvd3MoKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmIChkb250QW5pbWF0ZSAhPT0gdHJ1ZSkge1xuXG4gICAgICAgICAgICAgICAgXy5mYWRlU2xpZGVPdXQob2xkU2xpZGUpO1xuXG4gICAgICAgICAgICAgICAgXy5mYWRlU2xpZGUoYW5pbVNsaWRlLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgXy5wb3N0U2xpZGUoYW5pbVNsaWRlKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfLnBvc3RTbGlkZShhbmltU2xpZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXy5hbmltYXRlSGVpZ2h0KCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZG9udEFuaW1hdGUgIT09IHRydWUpIHtcbiAgICAgICAgICAgIF8uYW5pbWF0ZVNsaWRlKHRhcmdldExlZnQsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIF8ucG9zdFNsaWRlKGFuaW1TbGlkZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF8ucG9zdFNsaWRlKGFuaW1TbGlkZSk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc3RhcnRMb2FkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuYXJyb3dzID09PSB0cnVlICYmIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcblxuICAgICAgICAgICAgXy4kcHJldkFycm93LmhpZGUoKTtcbiAgICAgICAgICAgIF8uJG5leHRBcnJvdy5oaWRlKCk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZG90cyA9PT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG5cbiAgICAgICAgICAgIF8uJGRvdHMuaGlkZSgpO1xuXG4gICAgICAgIH1cblxuICAgICAgICBfLiRzbGlkZXIuYWRkQ2xhc3MoJ3NsaWNrLWxvYWRpbmcnKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc3dpcGVEaXJlY3Rpb24gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgeERpc3QsIHlEaXN0LCByLCBzd2lwZUFuZ2xlLCBfID0gdGhpcztcblxuICAgICAgICB4RGlzdCA9IF8udG91Y2hPYmplY3Quc3RhcnRYIC0gXy50b3VjaE9iamVjdC5jdXJYO1xuICAgICAgICB5RGlzdCA9IF8udG91Y2hPYmplY3Quc3RhcnRZIC0gXy50b3VjaE9iamVjdC5jdXJZO1xuICAgICAgICByID0gTWF0aC5hdGFuMih5RGlzdCwgeERpc3QpO1xuXG4gICAgICAgIHN3aXBlQW5nbGUgPSBNYXRoLnJvdW5kKHIgKiAxODAgLyBNYXRoLlBJKTtcbiAgICAgICAgaWYgKHN3aXBlQW5nbGUgPCAwKSB7XG4gICAgICAgICAgICBzd2lwZUFuZ2xlID0gMzYwIC0gTWF0aC5hYnMoc3dpcGVBbmdsZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoKHN3aXBlQW5nbGUgPD0gNDUpICYmIChzd2lwZUFuZ2xlID49IDApKSB7XG4gICAgICAgICAgICByZXR1cm4gKF8ub3B0aW9ucy5ydGwgPT09IGZhbHNlID8gJ2xlZnQnIDogJ3JpZ2h0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChzd2lwZUFuZ2xlIDw9IDM2MCkgJiYgKHN3aXBlQW5nbGUgPj0gMzE1KSkge1xuICAgICAgICAgICAgcmV0dXJuIChfLm9wdGlvbnMucnRsID09PSBmYWxzZSA/ICdsZWZ0JyA6ICdyaWdodCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoc3dpcGVBbmdsZSA+PSAxMzUpICYmIChzd2lwZUFuZ2xlIDw9IDIyNSkpIHtcbiAgICAgICAgICAgIHJldHVybiAoXy5vcHRpb25zLnJ0bCA9PT0gZmFsc2UgPyAncmlnaHQnIDogJ2xlZnQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgaWYgKChzd2lwZUFuZ2xlID49IDM1KSAmJiAoc3dpcGVBbmdsZSA8PSAxMzUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdkb3duJztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICd1cCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJ3ZlcnRpY2FsJztcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc3dpcGVFbmQgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIHNsaWRlQ291bnQsXG4gICAgICAgICAgICBkaXJlY3Rpb247XG5cbiAgICAgICAgXy5kcmFnZ2luZyA9IGZhbHNlO1xuICAgICAgICBfLnN3aXBpbmcgPSBmYWxzZTtcblxuICAgICAgICBpZiAoXy5zY3JvbGxpbmcpIHtcbiAgICAgICAgICAgIF8uc2Nyb2xsaW5nID0gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBfLmludGVycnVwdGVkID0gZmFsc2U7XG4gICAgICAgIF8uc2hvdWxkQ2xpY2sgPSAoIF8udG91Y2hPYmplY3Quc3dpcGVMZW5ndGggPiAxMCApID8gZmFsc2UgOiB0cnVlO1xuXG4gICAgICAgIGlmICggXy50b3VjaE9iamVjdC5jdXJYID09PSB1bmRlZmluZWQgKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIF8udG91Y2hPYmplY3QuZWRnZUhpdCA9PT0gdHJ1ZSApIHtcbiAgICAgICAgICAgIF8uJHNsaWRlci50cmlnZ2VyKCdlZGdlJywgW18sIF8uc3dpcGVEaXJlY3Rpb24oKSBdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICggXy50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA+PSBfLnRvdWNoT2JqZWN0Lm1pblN3aXBlICkge1xuXG4gICAgICAgICAgICBkaXJlY3Rpb24gPSBfLnN3aXBlRGlyZWN0aW9uKCk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAoIGRpcmVjdGlvbiApIHtcblxuICAgICAgICAgICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2Rvd24nOlxuXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlQ291bnQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgXy5vcHRpb25zLnN3aXBlVG9TbGlkZSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXy5jaGVja05hdmlnYWJsZSggXy5jdXJyZW50U2xpZGUgKyBfLmdldFNsaWRlQ291bnQoKSApIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLmN1cnJlbnRTbGlkZSArIF8uZ2V0U2xpZGVDb3VudCgpO1xuXG4gICAgICAgICAgICAgICAgICAgIF8uY3VycmVudERpcmVjdGlvbiA9IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlICdyaWdodCc6XG4gICAgICAgICAgICAgICAgY2FzZSAndXAnOlxuXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlQ291bnQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgXy5vcHRpb25zLnN3aXBlVG9TbGlkZSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXy5jaGVja05hdmlnYWJsZSggXy5jdXJyZW50U2xpZGUgLSBfLmdldFNsaWRlQ291bnQoKSApIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLmN1cnJlbnRTbGlkZSAtIF8uZ2V0U2xpZGVDb3VudCgpO1xuXG4gICAgICAgICAgICAgICAgICAgIF8uY3VycmVudERpcmVjdGlvbiA9IDE7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYoIGRpcmVjdGlvbiAhPSAndmVydGljYWwnICkge1xuXG4gICAgICAgICAgICAgICAgXy5zbGlkZUhhbmRsZXIoIHNsaWRlQ291bnQgKTtcbiAgICAgICAgICAgICAgICBfLnRvdWNoT2JqZWN0ID0ge307XG4gICAgICAgICAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoJ3N3aXBlJywgW18sIGRpcmVjdGlvbiBdKTtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGlmICggXy50b3VjaE9iamVjdC5zdGFydFggIT09IF8udG91Y2hPYmplY3QuY3VyWCApIHtcblxuICAgICAgICAgICAgICAgIF8uc2xpZGVIYW5kbGVyKCBfLmN1cnJlbnRTbGlkZSApO1xuICAgICAgICAgICAgICAgIF8udG91Y2hPYmplY3QgPSB7fTtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUuc3dpcGVIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICAgICAgaWYgKChfLm9wdGlvbnMuc3dpcGUgPT09IGZhbHNlKSB8fCAoJ29udG91Y2hlbmQnIGluIGRvY3VtZW50ICYmIF8ub3B0aW9ucy5zd2lwZSA9PT0gZmFsc2UpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAoXy5vcHRpb25zLmRyYWdnYWJsZSA9PT0gZmFsc2UgJiYgZXZlbnQudHlwZS5pbmRleE9mKCdtb3VzZScpICE9PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgXy50b3VjaE9iamVjdC5maW5nZXJDb3VudCA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQgJiYgZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzICE9PSB1bmRlZmluZWQgP1xuICAgICAgICAgICAgZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzLmxlbmd0aCA6IDE7XG5cbiAgICAgICAgXy50b3VjaE9iamVjdC5taW5Td2lwZSA9IF8ubGlzdFdpZHRoIC8gXy5vcHRpb25zXG4gICAgICAgICAgICAudG91Y2hUaHJlc2hvbGQ7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgPT09IHRydWUpIHtcbiAgICAgICAgICAgIF8udG91Y2hPYmplY3QubWluU3dpcGUgPSBfLmxpc3RIZWlnaHQgLyBfLm9wdGlvbnNcbiAgICAgICAgICAgICAgICAudG91Y2hUaHJlc2hvbGQ7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGV2ZW50LmRhdGEuYWN0aW9uKSB7XG5cbiAgICAgICAgICAgIGNhc2UgJ3N0YXJ0JzpcbiAgICAgICAgICAgICAgICBfLnN3aXBlU3RhcnQoZXZlbnQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdtb3ZlJzpcbiAgICAgICAgICAgICAgICBfLnN3aXBlTW92ZShldmVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ2VuZCc6XG4gICAgICAgICAgICAgICAgXy5zd2lwZUVuZChldmVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS5zd2lwZU1vdmUgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIGVkZ2VXYXNIaXQgPSBmYWxzZSxcbiAgICAgICAgICAgIGN1ckxlZnQsIHN3aXBlRGlyZWN0aW9uLCBzd2lwZUxlbmd0aCwgcG9zaXRpb25PZmZzZXQsIHRvdWNoZXMsIHZlcnRpY2FsU3dpcGVMZW5ndGg7XG5cbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQgIT09IHVuZGVmaW5lZCA/IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlcyA6IG51bGw7XG5cbiAgICAgICAgaWYgKCFfLmRyYWdnaW5nIHx8IF8uc2Nyb2xsaW5nIHx8IHRvdWNoZXMgJiYgdG91Y2hlcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGN1ckxlZnQgPSBfLmdldExlZnQoXy5jdXJyZW50U2xpZGUpO1xuXG4gICAgICAgIF8udG91Y2hPYmplY3QuY3VyWCA9IHRvdWNoZXMgIT09IHVuZGVmaW5lZCA/IHRvdWNoZXNbMF0ucGFnZVggOiBldmVudC5jbGllbnRYO1xuICAgICAgICBfLnRvdWNoT2JqZWN0LmN1clkgPSB0b3VjaGVzICE9PSB1bmRlZmluZWQgPyB0b3VjaGVzWzBdLnBhZ2VZIDogZXZlbnQuY2xpZW50WTtcblxuICAgICAgICBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID0gTWF0aC5yb3VuZChNYXRoLnNxcnQoXG4gICAgICAgICAgICBNYXRoLnBvdyhfLnRvdWNoT2JqZWN0LmN1clggLSBfLnRvdWNoT2JqZWN0LnN0YXJ0WCwgMikpKTtcblxuICAgICAgICB2ZXJ0aWNhbFN3aXBlTGVuZ3RoID0gTWF0aC5yb3VuZChNYXRoLnNxcnQoXG4gICAgICAgICAgICBNYXRoLnBvdyhfLnRvdWNoT2JqZWN0LmN1clkgLSBfLnRvdWNoT2JqZWN0LnN0YXJ0WSwgMikpKTtcblxuICAgICAgICBpZiAoIV8ub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgJiYgIV8uc3dpcGluZyAmJiB2ZXJ0aWNhbFN3aXBlTGVuZ3RoID4gNCkge1xuICAgICAgICAgICAgXy5zY3JvbGxpbmcgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgPT09IHRydWUpIHtcbiAgICAgICAgICAgIF8udG91Y2hPYmplY3Quc3dpcGVMZW5ndGggPSB2ZXJ0aWNhbFN3aXBlTGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpcGVEaXJlY3Rpb24gPSBfLnN3aXBlRGlyZWN0aW9uKCk7XG5cbiAgICAgICAgaWYgKGV2ZW50Lm9yaWdpbmFsRXZlbnQgIT09IHVuZGVmaW5lZCAmJiBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID4gNCkge1xuICAgICAgICAgICAgXy5zd2lwaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBwb3NpdGlvbk9mZnNldCA9IChfLm9wdGlvbnMucnRsID09PSBmYWxzZSA/IDEgOiAtMSkgKiAoXy50b3VjaE9iamVjdC5jdXJYID4gXy50b3VjaE9iamVjdC5zdGFydFggPyAxIDogLTEpO1xuICAgICAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcG9zaXRpb25PZmZzZXQgPSBfLnRvdWNoT2JqZWN0LmN1clkgPiBfLnRvdWNoT2JqZWN0LnN0YXJ0WSA/IDEgOiAtMTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgc3dpcGVMZW5ndGggPSBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoO1xuXG4gICAgICAgIF8udG91Y2hPYmplY3QuZWRnZUhpdCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBpZiAoKF8uY3VycmVudFNsaWRlID09PSAwICYmIHN3aXBlRGlyZWN0aW9uID09PSAncmlnaHQnKSB8fCAoXy5jdXJyZW50U2xpZGUgPj0gXy5nZXREb3RDb3VudCgpICYmIHN3aXBlRGlyZWN0aW9uID09PSAnbGVmdCcpKSB7XG4gICAgICAgICAgICAgICAgc3dpcGVMZW5ndGggPSBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoICogXy5vcHRpb25zLmVkZ2VGcmljdGlvbjtcbiAgICAgICAgICAgICAgICBfLnRvdWNoT2JqZWN0LmVkZ2VIaXQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIF8uc3dpcGVMZWZ0ID0gY3VyTGVmdCArIHN3aXBlTGVuZ3RoICogcG9zaXRpb25PZmZzZXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfLnN3aXBlTGVmdCA9IGN1ckxlZnQgKyAoc3dpcGVMZW5ndGggKiAoXy4kbGlzdC5oZWlnaHQoKSAvIF8ubGlzdFdpZHRoKSkgKiBwb3NpdGlvbk9mZnNldDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgXy5zd2lwZUxlZnQgPSBjdXJMZWZ0ICsgc3dpcGVMZW5ndGggKiBwb3NpdGlvbk9mZnNldDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gdHJ1ZSB8fCBfLm9wdGlvbnMudG91Y2hNb3ZlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8uYW5pbWF0aW5nID09PSB0cnVlKSB7XG4gICAgICAgICAgICBfLnN3aXBlTGVmdCA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBfLnNldENTUyhfLnN3aXBlTGVmdCk7XG5cbiAgICB9O1xuXG4gICAgU2xpY2sucHJvdG90eXBlLnN3aXBlU3RhcnQgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgICAgIHRvdWNoZXM7XG5cbiAgICAgICAgXy5pbnRlcnJ1cHRlZCA9IHRydWU7XG5cbiAgICAgICAgaWYgKF8udG91Y2hPYmplY3QuZmluZ2VyQ291bnQgIT09IDEgfHwgXy5zbGlkZUNvdW50IDw9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgICAgIF8udG91Y2hPYmplY3QgPSB7fTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChldmVudC5vcmlnaW5hbEV2ZW50ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRvdWNoZXMgPSBldmVudC5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF07XG4gICAgICAgIH1cblxuICAgICAgICBfLnRvdWNoT2JqZWN0LnN0YXJ0WCA9IF8udG91Y2hPYmplY3QuY3VyWCA9IHRvdWNoZXMgIT09IHVuZGVmaW5lZCA/IHRvdWNoZXMucGFnZVggOiBldmVudC5jbGllbnRYO1xuICAgICAgICBfLnRvdWNoT2JqZWN0LnN0YXJ0WSA9IF8udG91Y2hPYmplY3QuY3VyWSA9IHRvdWNoZXMgIT09IHVuZGVmaW5lZCA/IHRvdWNoZXMucGFnZVkgOiBldmVudC5jbGllbnRZO1xuXG4gICAgICAgIF8uZHJhZ2dpbmcgPSB0cnVlO1xuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS51bmZpbHRlclNsaWRlcyA9IFNsaWNrLnByb3RvdHlwZS5zbGlja1VuZmlsdGVyID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLiRzbGlkZXNDYWNoZSAhPT0gbnVsbCkge1xuXG4gICAgICAgICAgICBfLnVubG9hZCgpO1xuXG4gICAgICAgICAgICBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCk7XG5cbiAgICAgICAgICAgIF8uJHNsaWRlc0NhY2hlLmFwcGVuZFRvKF8uJHNsaWRlVHJhY2spO1xuXG4gICAgICAgICAgICBfLnJlaW5pdCgpO1xuXG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUudW5sb2FkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgICQoJy5zbGljay1jbG9uZWQnLCBfLiRzbGlkZXIpLnJlbW92ZSgpO1xuXG4gICAgICAgIGlmIChfLiRkb3RzKSB7XG4gICAgICAgICAgICBfLiRkb3RzLnJlbW92ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8uJHByZXZBcnJvdyAmJiBfLmh0bWxFeHByLnRlc3QoXy5vcHRpb25zLnByZXZBcnJvdykpIHtcbiAgICAgICAgICAgIF8uJHByZXZBcnJvdy5yZW1vdmUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLiRuZXh0QXJyb3cgJiYgXy5odG1sRXhwci50ZXN0KF8ub3B0aW9ucy5uZXh0QXJyb3cpKSB7XG4gICAgICAgICAgICBfLiRuZXh0QXJyb3cucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBfLiRzbGlkZXNcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnc2xpY2stc2xpZGUgc2xpY2stYWN0aXZlIHNsaWNrLXZpc2libGUgc2xpY2stY3VycmVudCcpXG4gICAgICAgICAgICAuYXR0cignYXJpYS1oaWRkZW4nLCAndHJ1ZScpXG4gICAgICAgICAgICAuY3NzKCd3aWR0aCcsICcnKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUudW5zbGljayA9IGZ1bmN0aW9uKGZyb21CcmVha3BvaW50KSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcigndW5zbGljaycsIFtfLCBmcm9tQnJlYWtwb2ludF0pO1xuICAgICAgICBfLmRlc3Ryb3koKTtcblxuICAgIH07XG5cbiAgICBTbGljay5wcm90b3R5cGUudXBkYXRlQXJyb3dzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgY2VudGVyT2Zmc2V0O1xuXG4gICAgICAgIGNlbnRlck9mZnNldCA9IE1hdGguZmxvb3IoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpO1xuXG4gICAgICAgIGlmICggXy5vcHRpb25zLmFycm93cyA9PT0gdHJ1ZSAmJlxuICAgICAgICAgICAgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJlxuICAgICAgICAgICAgIV8ub3B0aW9ucy5pbmZpbml0ZSApIHtcblxuICAgICAgICAgICAgXy4kcHJldkFycm93LnJlbW92ZUNsYXNzKCdzbGljay1kaXNhYmxlZCcpLmF0dHIoJ2FyaWEtZGlzYWJsZWQnLCAnZmFsc2UnKTtcbiAgICAgICAgICAgIF8uJG5leHRBcnJvdy5yZW1vdmVDbGFzcygnc2xpY2stZGlzYWJsZWQnKS5hdHRyKCdhcmlhLWRpc2FibGVkJywgJ2ZhbHNlJyk7XG5cbiAgICAgICAgICAgIGlmIChfLmN1cnJlbnRTbGlkZSA9PT0gMCkge1xuXG4gICAgICAgICAgICAgICAgXy4kcHJldkFycm93LmFkZENsYXNzKCdzbGljay1kaXNhYmxlZCcpLmF0dHIoJ2FyaWEtZGlzYWJsZWQnLCAndHJ1ZScpO1xuICAgICAgICAgICAgICAgIF8uJG5leHRBcnJvdy5yZW1vdmVDbGFzcygnc2xpY2stZGlzYWJsZWQnKS5hdHRyKCdhcmlhLWRpc2FibGVkJywgJ2ZhbHNlJyk7XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoXy5jdXJyZW50U2xpZGUgPj0gXy5zbGlkZUNvdW50IC0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gZmFsc2UpIHtcblxuICAgICAgICAgICAgICAgIF8uJG5leHRBcnJvdy5hZGRDbGFzcygnc2xpY2stZGlzYWJsZWQnKS5hdHRyKCdhcmlhLWRpc2FibGVkJywgJ3RydWUnKTtcbiAgICAgICAgICAgICAgICBfLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoJ3NsaWNrLWRpc2FibGVkJykuYXR0cignYXJpYS1kaXNhYmxlZCcsICdmYWxzZScpO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKF8uY3VycmVudFNsaWRlID49IF8uc2xpZGVDb3VudCAtIDEgJiYgXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcblxuICAgICAgICAgICAgICAgIF8uJG5leHRBcnJvdy5hZGRDbGFzcygnc2xpY2stZGlzYWJsZWQnKS5hdHRyKCdhcmlhLWRpc2FibGVkJywgJ3RydWUnKTtcbiAgICAgICAgICAgICAgICBfLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoJ3NsaWNrLWRpc2FibGVkJykuYXR0cignYXJpYS1kaXNhYmxlZCcsICdmYWxzZScpO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS51cGRhdGVEb3RzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmIChfLiRkb3RzICE9PSBudWxsKSB7XG5cbiAgICAgICAgICAgIF8uJGRvdHNcbiAgICAgICAgICAgICAgICAuZmluZCgnbGknKVxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ3NsaWNrLWFjdGl2ZScpXG4gICAgICAgICAgICAgICAgICAgIC5lbmQoKTtcblxuICAgICAgICAgICAgXy4kZG90c1xuICAgICAgICAgICAgICAgIC5maW5kKCdsaScpXG4gICAgICAgICAgICAgICAgLmVxKE1hdGguZmxvb3IoXy5jdXJyZW50U2xpZGUgLyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpKVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2xpY2stYWN0aXZlJyk7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIFNsaWNrLnByb3RvdHlwZS52aXNpYmlsaXR5ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgICAgIGlmICggXy5vcHRpb25zLmF1dG9wbGF5ICkge1xuXG4gICAgICAgICAgICBpZiAoIGRvY3VtZW50W18uaGlkZGVuXSApIHtcblxuICAgICAgICAgICAgICAgIF8uaW50ZXJydXB0ZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgXy5pbnRlcnJ1cHRlZCA9IGZhbHNlO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgICQuZm4uc2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIF8gPSB0aGlzLFxuICAgICAgICAgICAgb3B0ID0gYXJndW1lbnRzWzBdLFxuICAgICAgICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSksXG4gICAgICAgICAgICBsID0gXy5sZW5ndGgsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgcmV0O1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdCA9PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb3B0ID09ICd1bmRlZmluZWQnKVxuICAgICAgICAgICAgICAgIF9baV0uc2xpY2sgPSBuZXcgU2xpY2soX1tpXSwgb3B0KTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICByZXQgPSBfW2ldLnNsaWNrW29wdF0uYXBwbHkoX1tpXS5zbGljaywgYXJncyk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHJldCAhPSAndW5kZWZpbmVkJykgcmV0dXJuIHJldDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXztcbiAgICB9O1xuXG59KSk7XG4vKlxuIDIwMTcgSnVsaWFuIEdhcm5pZXJcbiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiovXG52YXIgJGpzY29tcD17c2NvcGU6e319OyRqc2NvbXAuZGVmaW5lUHJvcGVydHk9XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmRlZmluZVByb3BlcnRpZXM/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKGUscixwKXtpZihwLmdldHx8cC5zZXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkVTMyBkb2VzIG5vdCBzdXBwb3J0IGdldHRlcnMgYW5kIHNldHRlcnMuXCIpO2UhPUFycmF5LnByb3RvdHlwZSYmZSE9T2JqZWN0LnByb3RvdHlwZSYmKGVbcl09cC52YWx1ZSl9OyRqc2NvbXAuZ2V0R2xvYmFsPWZ1bmN0aW9uKGUpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdz09PWU/ZTpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsJiZudWxsIT1nbG9iYWw/Z2xvYmFsOmV9OyRqc2NvbXAuZ2xvYmFsPSRqc2NvbXAuZ2V0R2xvYmFsKHRoaXMpOyRqc2NvbXAuU1lNQk9MX1BSRUZJWD1cImpzY29tcF9zeW1ib2xfXCI7XG4kanNjb21wLmluaXRTeW1ib2w9ZnVuY3Rpb24oKXskanNjb21wLmluaXRTeW1ib2w9ZnVuY3Rpb24oKXt9OyRqc2NvbXAuZ2xvYmFsLlN5bWJvbHx8KCRqc2NvbXAuZ2xvYmFsLlN5bWJvbD0kanNjb21wLlN5bWJvbCl9OyRqc2NvbXAuc3ltYm9sQ291bnRlcl89MDskanNjb21wLlN5bWJvbD1mdW5jdGlvbihlKXtyZXR1cm4gJGpzY29tcC5TWU1CT0xfUFJFRklYKyhlfHxcIlwiKSskanNjb21wLnN5bWJvbENvdW50ZXJfKyt9O1xuJGpzY29tcC5pbml0U3ltYm9sSXRlcmF0b3I9ZnVuY3Rpb24oKXskanNjb21wLmluaXRTeW1ib2woKTt2YXIgZT0kanNjb21wLmdsb2JhbC5TeW1ib2wuaXRlcmF0b3I7ZXx8KGU9JGpzY29tcC5nbG9iYWwuU3ltYm9sLml0ZXJhdG9yPSRqc2NvbXAuZ2xvYmFsLlN5bWJvbChcIml0ZXJhdG9yXCIpKTtcImZ1bmN0aW9uXCIhPXR5cGVvZiBBcnJheS5wcm90b3R5cGVbZV0mJiRqc2NvbXAuZGVmaW5lUHJvcGVydHkoQXJyYXkucHJvdG90eXBlLGUse2NvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpmdW5jdGlvbigpe3JldHVybiAkanNjb21wLmFycmF5SXRlcmF0b3IodGhpcyl9fSk7JGpzY29tcC5pbml0U3ltYm9sSXRlcmF0b3I9ZnVuY3Rpb24oKXt9fTskanNjb21wLmFycmF5SXRlcmF0b3I9ZnVuY3Rpb24oZSl7dmFyIHI9MDtyZXR1cm4gJGpzY29tcC5pdGVyYXRvclByb3RvdHlwZShmdW5jdGlvbigpe3JldHVybiByPGUubGVuZ3RoP3tkb25lOiExLHZhbHVlOmVbcisrXX06e2RvbmU6ITB9fSl9O1xuJGpzY29tcC5pdGVyYXRvclByb3RvdHlwZT1mdW5jdGlvbihlKXskanNjb21wLmluaXRTeW1ib2xJdGVyYXRvcigpO2U9e25leHQ6ZX07ZVskanNjb21wLmdsb2JhbC5TeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O3JldHVybiBlfTskanNjb21wLmFycmF5PSRqc2NvbXAuYXJyYXl8fHt9OyRqc2NvbXAuaXRlcmF0b3JGcm9tQXJyYXk9ZnVuY3Rpb24oZSxyKXskanNjb21wLmluaXRTeW1ib2xJdGVyYXRvcigpO2UgaW5zdGFuY2VvZiBTdHJpbmcmJihlKz1cIlwiKTt2YXIgcD0wLG09e25leHQ6ZnVuY3Rpb24oKXtpZihwPGUubGVuZ3RoKXt2YXIgdT1wKys7cmV0dXJue3ZhbHVlOnIodSxlW3VdKSxkb25lOiExfX1tLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTohMCx2YWx1ZTp2b2lkIDB9fTtyZXR1cm4gbS5uZXh0KCl9fTttW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gbX07cmV0dXJuIG19O1xuJGpzY29tcC5wb2x5ZmlsbD1mdW5jdGlvbihlLHIscCxtKXtpZihyKXtwPSRqc2NvbXAuZ2xvYmFsO2U9ZS5zcGxpdChcIi5cIik7Zm9yKG09MDttPGUubGVuZ3RoLTE7bSsrKXt2YXIgdT1lW21dO3UgaW4gcHx8KHBbdV09e30pO3A9cFt1XX1lPWVbZS5sZW5ndGgtMV07bT1wW2VdO3I9cihtKTtyIT1tJiZudWxsIT1yJiYkanNjb21wLmRlZmluZVByb3BlcnR5KHAsZSx7Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KX19OyRqc2NvbXAucG9seWZpbGwoXCJBcnJheS5wcm90b3R5cGUua2V5c1wiLGZ1bmN0aW9uKGUpe3JldHVybiBlP2U6ZnVuY3Rpb24oKXtyZXR1cm4gJGpzY29tcC5pdGVyYXRvckZyb21BcnJheSh0aGlzLGZ1bmN0aW9uKGUpe3JldHVybiBlfSl9fSxcImVzNi1pbXBsXCIsXCJlczNcIik7dmFyICRqc2NvbXAkdGhpcz10aGlzO1xuKGZ1bmN0aW9uKGUscil7XCJmdW5jdGlvblwiPT09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10scik6XCJvYmplY3RcIj09PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPXIoKTplLmFuaW1lPXIoKX0pKHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGEpe2lmKCFoLmNvbChhKSl0cnl7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYSl9Y2F0Y2goYyl7fX1mdW5jdGlvbiByKGEsYyl7Zm9yKHZhciBkPWEubGVuZ3RoLGI9Mjw9YXJndW1lbnRzLmxlbmd0aD9hcmd1bWVudHNbMV06dm9pZCAwLGY9W10sbj0wO248ZDtuKyspaWYobiBpbiBhKXt2YXIgaz1hW25dO2MuY2FsbChiLGssbixhKSYmZi5wdXNoKGspfXJldHVybiBmfWZ1bmN0aW9uIHAoYSl7cmV0dXJuIGEucmVkdWNlKGZ1bmN0aW9uKGEsZCl7cmV0dXJuIGEuY29uY2F0KGguYXJyKGQpP3AoZCk6ZCl9LFtdKX1mdW5jdGlvbiBtKGEpe2lmKGguYXJyKGEpKXJldHVybiBhO1xuaC5zdHIoYSkmJihhPWUoYSl8fGEpO3JldHVybiBhIGluc3RhbmNlb2YgTm9kZUxpc3R8fGEgaW5zdGFuY2VvZiBIVE1MQ29sbGVjdGlvbj9bXS5zbGljZS5jYWxsKGEpOlthXX1mdW5jdGlvbiB1KGEsYyl7cmV0dXJuIGEuc29tZShmdW5jdGlvbihhKXtyZXR1cm4gYT09PWN9KX1mdW5jdGlvbiBDKGEpe3ZhciBjPXt9LGQ7Zm9yKGQgaW4gYSljW2RdPWFbZF07cmV0dXJuIGN9ZnVuY3Rpb24gRChhLGMpe3ZhciBkPUMoYSksYjtmb3IoYiBpbiBhKWRbYl09Yy5oYXNPd25Qcm9wZXJ0eShiKT9jW2JdOmFbYl07cmV0dXJuIGR9ZnVuY3Rpb24geihhLGMpe3ZhciBkPUMoYSksYjtmb3IoYiBpbiBjKWRbYl09aC51bmQoYVtiXSk/Y1tiXTphW2JdO3JldHVybiBkfWZ1bmN0aW9uIFQoYSl7YT1hLnJlcGxhY2UoL14jPyhbYS1mXFxkXSkoW2EtZlxcZF0pKFthLWZcXGRdKSQvaSxmdW5jdGlvbihhLGMsZCxrKXtyZXR1cm4gYytjK2QrZCtrK2t9KTt2YXIgYz0vXiM/KFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pJC9pLmV4ZWMoYSk7XG5hPXBhcnNlSW50KGNbMV0sMTYpO3ZhciBkPXBhcnNlSW50KGNbMl0sMTYpLGM9cGFyc2VJbnQoY1szXSwxNik7cmV0dXJuXCJyZ2JhKFwiK2ErXCIsXCIrZCtcIixcIitjK1wiLDEpXCJ9ZnVuY3Rpb24gVShhKXtmdW5jdGlvbiBjKGEsYyxiKXswPmImJihiKz0xKTsxPGImJi0tYjtyZXR1cm4gYjwxLzY/YSs2KihjLWEpKmI6LjU+Yj9jOmI8Mi8zP2ErKGMtYSkqKDIvMy1iKSo2OmF9dmFyIGQ9L2hzbFxcKChcXGQrKSxcXHMqKFtcXGQuXSspJSxcXHMqKFtcXGQuXSspJVxcKS9nLmV4ZWMoYSl8fC9oc2xhXFwoKFxcZCspLFxccyooW1xcZC5dKyklLFxccyooW1xcZC5dKyklLFxccyooW1xcZC5dKylcXCkvZy5leGVjKGEpO2E9cGFyc2VJbnQoZFsxXSkvMzYwO3ZhciBiPXBhcnNlSW50KGRbMl0pLzEwMCxmPXBhcnNlSW50KGRbM10pLzEwMCxkPWRbNF18fDE7aWYoMD09YilmPWI9YT1mO2Vsc2V7dmFyIG49LjU+Zj9mKigxK2IpOmYrYi1mKmIsaz0yKmYtbixmPWMoayxuLGErMS8zKSxiPWMoayxuLGEpO2E9YyhrLG4sYS0xLzMpfXJldHVyblwicmdiYShcIitcbjI1NSpmK1wiLFwiKzI1NSpiK1wiLFwiKzI1NSphK1wiLFwiK2QrXCIpXCJ9ZnVuY3Rpb24geShhKXtpZihhPS8oW1xcK1xcLV0/WzAtOSNcXC5dKykoJXxweHxwdHxlbXxyZW18aW58Y218bW18ZXh8Y2h8cGN8dnd8dmh8dm1pbnx2bWF4fGRlZ3xyYWR8dHVybik/JC8uZXhlYyhhKSlyZXR1cm4gYVsyXX1mdW5jdGlvbiBWKGEpe2lmKC0xPGEuaW5kZXhPZihcInRyYW5zbGF0ZVwiKXx8XCJwZXJzcGVjdGl2ZVwiPT09YSlyZXR1cm5cInB4XCI7aWYoLTE8YS5pbmRleE9mKFwicm90YXRlXCIpfHwtMTxhLmluZGV4T2YoXCJza2V3XCIpKXJldHVyblwiZGVnXCJ9ZnVuY3Rpb24gSShhLGMpe3JldHVybiBoLmZuYyhhKT9hKGMudGFyZ2V0LGMuaWQsYy50b3RhbCk6YX1mdW5jdGlvbiBFKGEsYyl7aWYoYyBpbiBhLnN0eWxlKXJldHVybiBnZXRDb21wdXRlZFN0eWxlKGEpLmdldFByb3BlcnR5VmFsdWUoYy5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLFwiJDEtJDJcIikudG9Mb3dlckNhc2UoKSl8fFwiMFwifWZ1bmN0aW9uIEooYSxjKXtpZihoLmRvbShhKSYmXG51KFcsYykpcmV0dXJuXCJ0cmFuc2Zvcm1cIjtpZihoLmRvbShhKSYmKGEuZ2V0QXR0cmlidXRlKGMpfHxoLnN2ZyhhKSYmYVtjXSkpcmV0dXJuXCJhdHRyaWJ1dGVcIjtpZihoLmRvbShhKSYmXCJ0cmFuc2Zvcm1cIiE9PWMmJkUoYSxjKSlyZXR1cm5cImNzc1wiO2lmKG51bGwhPWFbY10pcmV0dXJuXCJvYmplY3RcIn1mdW5jdGlvbiBYKGEsYyl7dmFyIGQ9VihjKSxkPS0xPGMuaW5kZXhPZihcInNjYWxlXCIpPzE6MCtkO2E9YS5zdHlsZS50cmFuc2Zvcm07aWYoIWEpcmV0dXJuIGQ7Zm9yKHZhciBiPVtdLGY9W10sbj1bXSxrPS8oXFx3KylcXCgoLis/KVxcKS9nO2I9ay5leGVjKGEpOylmLnB1c2goYlsxXSksbi5wdXNoKGJbMl0pO2E9cihuLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGZbYl09PT1jfSk7cmV0dXJuIGEubGVuZ3RoP2FbMF06ZH1mdW5jdGlvbiBLKGEsYyl7c3dpdGNoKEooYSxjKSl7Y2FzZSBcInRyYW5zZm9ybVwiOnJldHVybiBYKGEsYyk7Y2FzZSBcImNzc1wiOnJldHVybiBFKGEsYyk7Y2FzZSBcImF0dHJpYnV0ZVwiOnJldHVybiBhLmdldEF0dHJpYnV0ZShjKX1yZXR1cm4gYVtjXXx8XG4wfWZ1bmN0aW9uIEwoYSxjKXt2YXIgZD0vXihcXCo9fFxcKz18LT0pLy5leGVjKGEpO2lmKCFkKXJldHVybiBhO3ZhciBiPXkoYSl8fDA7Yz1wYXJzZUZsb2F0KGMpO2E9cGFyc2VGbG9hdChhLnJlcGxhY2UoZFswXSxcIlwiKSk7c3dpdGNoKGRbMF1bMF0pe2Nhc2UgXCIrXCI6cmV0dXJuIGMrYStiO2Nhc2UgXCItXCI6cmV0dXJuIGMtYStiO2Nhc2UgXCIqXCI6cmV0dXJuIGMqYStifX1mdW5jdGlvbiBGKGEsYyl7cmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhjLngtYS54LDIpK01hdGgucG93KGMueS1hLnksMikpfWZ1bmN0aW9uIE0oYSl7YT1hLnBvaW50cztmb3IodmFyIGM9MCxkLGI9MDtiPGEubnVtYmVyT2ZJdGVtcztiKyspe3ZhciBmPWEuZ2V0SXRlbShiKTswPGImJihjKz1GKGQsZikpO2Q9Zn1yZXR1cm4gY31mdW5jdGlvbiBOKGEpe2lmKGEuZ2V0VG90YWxMZW5ndGgpcmV0dXJuIGEuZ2V0VG90YWxMZW5ndGgoKTtzd2l0Y2goYS50YWdOYW1lLnRvTG93ZXJDYXNlKCkpe2Nhc2UgXCJjaXJjbGVcIjpyZXR1cm4gMipcbk1hdGguUEkqYS5nZXRBdHRyaWJ1dGUoXCJyXCIpO2Nhc2UgXCJyZWN0XCI6cmV0dXJuIDIqYS5nZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiKSsyKmEuZ2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIpO2Nhc2UgXCJsaW5lXCI6cmV0dXJuIEYoe3g6YS5nZXRBdHRyaWJ1dGUoXCJ4MVwiKSx5OmEuZ2V0QXR0cmlidXRlKFwieTFcIil9LHt4OmEuZ2V0QXR0cmlidXRlKFwieDJcIikseTphLmdldEF0dHJpYnV0ZShcInkyXCIpfSk7Y2FzZSBcInBvbHlsaW5lXCI6cmV0dXJuIE0oYSk7Y2FzZSBcInBvbHlnb25cIjp2YXIgYz1hLnBvaW50cztyZXR1cm4gTShhKStGKGMuZ2V0SXRlbShjLm51bWJlck9mSXRlbXMtMSksYy5nZXRJdGVtKDApKX19ZnVuY3Rpb24gWShhLGMpe2Z1bmN0aW9uIGQoYil7Yj12b2lkIDA9PT1iPzA6YjtyZXR1cm4gYS5lbC5nZXRQb2ludEF0TGVuZ3RoKDE8PWMrYj9jK2I6MCl9dmFyIGI9ZCgpLGY9ZCgtMSksbj1kKDEpO3N3aXRjaChhLnByb3BlcnR5KXtjYXNlIFwieFwiOnJldHVybiBiLng7Y2FzZSBcInlcIjpyZXR1cm4gYi55O1xuY2FzZSBcImFuZ2xlXCI6cmV0dXJuIDE4MCpNYXRoLmF0YW4yKG4ueS1mLnksbi54LWYueCkvTWF0aC5QSX19ZnVuY3Rpb24gTyhhLGMpe3ZhciBkPS8tP1xcZCpcXC4/XFxkKy9nLGI7Yj1oLnB0aChhKT9hLnRvdGFsTGVuZ3RoOmE7aWYoaC5jb2woYikpaWYoaC5yZ2IoYikpe3ZhciBmPS9yZ2JcXCgoXFxkKyxcXHMqW1xcZF0rLFxccypbXFxkXSspXFwpL2cuZXhlYyhiKTtiPWY/XCJyZ2JhKFwiK2ZbMV0rXCIsMSlcIjpifWVsc2UgYj1oLmhleChiKT9UKGIpOmguaHNsKGIpP1UoYik6dm9pZCAwO2Vsc2UgZj0oZj15KGIpKT9iLnN1YnN0cigwLGIubGVuZ3RoLWYubGVuZ3RoKTpiLGI9YyYmIS9cXHMvZy50ZXN0KGIpP2YrYzpmO2IrPVwiXCI7cmV0dXJue29yaWdpbmFsOmIsbnVtYmVyczpiLm1hdGNoKGQpP2IubWF0Y2goZCkubWFwKE51bWJlcik6WzBdLHN0cmluZ3M6aC5zdHIoYSl8fGM/Yi5zcGxpdChkKTpbXX19ZnVuY3Rpb24gUChhKXthPWE/cChoLmFycihhKT9hLm1hcChtKTptKGEpKTpbXTtyZXR1cm4gcihhLFxuZnVuY3Rpb24oYSxkLGIpe3JldHVybiBiLmluZGV4T2YoYSk9PT1kfSl9ZnVuY3Rpb24gWihhKXt2YXIgYz1QKGEpO3JldHVybiBjLm1hcChmdW5jdGlvbihhLGIpe3JldHVybnt0YXJnZXQ6YSxpZDpiLHRvdGFsOmMubGVuZ3RofX0pfWZ1bmN0aW9uIGFhKGEsYyl7dmFyIGQ9QyhjKTtpZihoLmFycihhKSl7dmFyIGI9YS5sZW5ndGg7MiE9PWJ8fGgub2JqKGFbMF0pP2guZm5jKGMuZHVyYXRpb24pfHwoZC5kdXJhdGlvbj1jLmR1cmF0aW9uL2IpOmE9e3ZhbHVlOmF9fXJldHVybiBtKGEpLm1hcChmdW5jdGlvbihhLGIpe2I9Yj8wOmMuZGVsYXk7YT1oLm9iaihhKSYmIWgucHRoKGEpP2E6e3ZhbHVlOmF9O2gudW5kKGEuZGVsYXkpJiYoYS5kZWxheT1iKTtyZXR1cm4gYX0pLm1hcChmdW5jdGlvbihhKXtyZXR1cm4geihhLGQpfSl9ZnVuY3Rpb24gYmEoYSxjKXt2YXIgZD17fSxiO2ZvcihiIGluIGEpe3ZhciBmPUkoYVtiXSxjKTtoLmFycihmKSYmKGY9Zi5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIEkoYSxcbmMpfSksMT09PWYubGVuZ3RoJiYoZj1mWzBdKSk7ZFtiXT1mfWQuZHVyYXRpb249cGFyc2VGbG9hdChkLmR1cmF0aW9uKTtkLmRlbGF5PXBhcnNlRmxvYXQoZC5kZWxheSk7cmV0dXJuIGR9ZnVuY3Rpb24gY2EoYSl7cmV0dXJuIGguYXJyKGEpP0EuYXBwbHkodGhpcyxhKTpRW2FdfWZ1bmN0aW9uIGRhKGEsYyl7dmFyIGQ7cmV0dXJuIGEudHdlZW5zLm1hcChmdW5jdGlvbihiKXtiPWJhKGIsYyk7dmFyIGY9Yi52YWx1ZSxlPUsoYy50YXJnZXQsYS5uYW1lKSxrPWQ/ZC50by5vcmlnaW5hbDplLGs9aC5hcnIoZik/ZlswXTprLHc9TChoLmFycihmKT9mWzFdOmYsayksZT15KHcpfHx5KGspfHx5KGUpO2IuZnJvbT1PKGssZSk7Yi50bz1PKHcsZSk7Yi5zdGFydD1kP2QuZW5kOmEub2Zmc2V0O2IuZW5kPWIuc3RhcnQrYi5kZWxheStiLmR1cmF0aW9uO2IuZWFzaW5nPWNhKGIuZWFzaW5nKTtiLmVsYXN0aWNpdHk9KDFFMy1NYXRoLm1pbihNYXRoLm1heChiLmVsYXN0aWNpdHksMSksOTk5KSkvXG4xRTM7Yi5pc1BhdGg9aC5wdGgoZik7Yi5pc0NvbG9yPWguY29sKGIuZnJvbS5vcmlnaW5hbCk7Yi5pc0NvbG9yJiYoYi5yb3VuZD0xKTtyZXR1cm4gZD1ifSl9ZnVuY3Rpb24gZWEoYSxjKXtyZXR1cm4gcihwKGEubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBjLm1hcChmdW5jdGlvbihiKXt2YXIgYz1KKGEudGFyZ2V0LGIubmFtZSk7aWYoYyl7dmFyIGQ9ZGEoYixhKTtiPXt0eXBlOmMscHJvcGVydHk6Yi5uYW1lLGFuaW1hdGFibGU6YSx0d2VlbnM6ZCxkdXJhdGlvbjpkW2QubGVuZ3RoLTFdLmVuZCxkZWxheTpkWzBdLmRlbGF5fX1lbHNlIGI9dm9pZCAwO3JldHVybiBifSl9KSksZnVuY3Rpb24oYSl7cmV0dXJuIWgudW5kKGEpfSl9ZnVuY3Rpb24gUihhLGMsZCxiKXt2YXIgZj1cImRlbGF5XCI9PT1hO3JldHVybiBjLmxlbmd0aD8oZj9NYXRoLm1pbjpNYXRoLm1heCkuYXBwbHkoTWF0aCxjLm1hcChmdW5jdGlvbihiKXtyZXR1cm4gYlthXX0pKTpmP2IuZGVsYXk6ZC5vZmZzZXQrYi5kZWxheStcbmIuZHVyYXRpb259ZnVuY3Rpb24gZmEoYSl7dmFyIGM9RChnYSxhKSxkPUQoUyxhKSxiPVooYS50YXJnZXRzKSxmPVtdLGU9eihjLGQpLGs7Zm9yKGsgaW4gYSllLmhhc093blByb3BlcnR5KGspfHxcInRhcmdldHNcIj09PWt8fGYucHVzaCh7bmFtZTprLG9mZnNldDplLm9mZnNldCx0d2VlbnM6YWEoYVtrXSxkKX0pO2E9ZWEoYixmKTtyZXR1cm4geihjLHtjaGlsZHJlbjpbXSxhbmltYXRhYmxlczpiLGFuaW1hdGlvbnM6YSxkdXJhdGlvbjpSKFwiZHVyYXRpb25cIixhLGMsZCksZGVsYXk6UihcImRlbGF5XCIsYSxjLGQpfSl9ZnVuY3Rpb24gcShhKXtmdW5jdGlvbiBjKCl7cmV0dXJuIHdpbmRvdy5Qcm9taXNlJiZuZXcgUHJvbWlzZShmdW5jdGlvbihhKXtyZXR1cm4gcD1hfSl9ZnVuY3Rpb24gZChhKXtyZXR1cm4gZy5yZXZlcnNlZD9nLmR1cmF0aW9uLWE6YX1mdW5jdGlvbiBiKGEpe2Zvcih2YXIgYj0wLGM9e30sZD1nLmFuaW1hdGlvbnMsZj1kLmxlbmd0aDtiPGY7KXt2YXIgZT1kW2JdLFxuaz1lLmFuaW1hdGFibGUsaD1lLnR3ZWVucyxuPWgubGVuZ3RoLTEsbD1oW25dO24mJihsPXIoaCxmdW5jdGlvbihiKXtyZXR1cm4gYTxiLmVuZH0pWzBdfHxsKTtmb3IodmFyIGg9TWF0aC5taW4oTWF0aC5tYXgoYS1sLnN0YXJ0LWwuZGVsYXksMCksbC5kdXJhdGlvbikvbC5kdXJhdGlvbix3PWlzTmFOKGgpPzE6bC5lYXNpbmcoaCxsLmVsYXN0aWNpdHkpLGg9bC50by5zdHJpbmdzLHA9bC5yb3VuZCxuPVtdLG09dm9pZCAwLG09bC50by5udW1iZXJzLmxlbmd0aCx0PTA7dDxtO3QrKyl7dmFyIHg9dm9pZCAwLHg9bC50by5udW1iZXJzW3RdLHE9bC5mcm9tLm51bWJlcnNbdF0seD1sLmlzUGF0aD9ZKGwudmFsdWUsdyp4KTpxK3cqKHgtcSk7cCYmKGwuaXNDb2xvciYmMjx0fHwoeD1NYXRoLnJvdW5kKHgqcCkvcCkpO24ucHVzaCh4KX1pZihsPWgubGVuZ3RoKWZvcihtPWhbMF0sdz0wO3c8bDt3KyspcD1oW3crMV0sdD1uW3ddLGlzTmFOKHQpfHwobT1wP20rKHQrcCk6bSsodCtcIiBcIikpO1xuZWxzZSBtPW5bMF07aGFbZS50eXBlXShrLnRhcmdldCxlLnByb3BlcnR5LG0sYyxrLmlkKTtlLmN1cnJlbnRWYWx1ZT1tO2IrK31pZihiPU9iamVjdC5rZXlzKGMpLmxlbmd0aClmb3IoZD0wO2Q8YjtkKyspSHx8KEg9RShkb2N1bWVudC5ib2R5LFwidHJhbnNmb3JtXCIpP1widHJhbnNmb3JtXCI6XCItd2Via2l0LXRyYW5zZm9ybVwiKSxnLmFuaW1hdGFibGVzW2RdLnRhcmdldC5zdHlsZVtIXT1jW2RdLmpvaW4oXCIgXCIpO2cuY3VycmVudFRpbWU9YTtnLnByb2dyZXNzPWEvZy5kdXJhdGlvbioxMDB9ZnVuY3Rpb24gZihhKXtpZihnW2FdKWdbYV0oZyl9ZnVuY3Rpb24gZSgpe2cucmVtYWluaW5nJiYhMCE9PWcucmVtYWluaW5nJiZnLnJlbWFpbmluZy0tfWZ1bmN0aW9uIGsoYSl7dmFyIGs9Zy5kdXJhdGlvbixuPWcub2Zmc2V0LHc9bitnLmRlbGF5LHI9Zy5jdXJyZW50VGltZSx4PWcucmV2ZXJzZWQscT1kKGEpO2lmKGcuY2hpbGRyZW4ubGVuZ3RoKXt2YXIgdT1nLmNoaWxkcmVuLHY9dS5sZW5ndGg7XG5pZihxPj1nLmN1cnJlbnRUaW1lKWZvcih2YXIgRz0wO0c8djtHKyspdVtHXS5zZWVrKHEpO2Vsc2UgZm9yKDt2LS07KXVbdl0uc2VlayhxKX1pZihxPj13fHwhaylnLmJlZ2FufHwoZy5iZWdhbj0hMCxmKFwiYmVnaW5cIikpLGYoXCJydW5cIik7aWYocT5uJiZxPGspYihxKTtlbHNlIGlmKHE8PW4mJjAhPT1yJiYoYigwKSx4JiZlKCkpLHE+PWsmJnIhPT1rfHwhayliKGspLHh8fGUoKTtmKFwidXBkYXRlXCIpO2E+PWsmJihnLnJlbWFpbmluZz8odD1oLFwiYWx0ZXJuYXRlXCI9PT1nLmRpcmVjdGlvbiYmKGcucmV2ZXJzZWQ9IWcucmV2ZXJzZWQpKTooZy5wYXVzZSgpLGcuY29tcGxldGVkfHwoZy5jb21wbGV0ZWQ9ITAsZihcImNvbXBsZXRlXCIpLFwiUHJvbWlzZVwiaW4gd2luZG93JiYocCgpLG09YygpKSkpLGw9MCl9YT12b2lkIDA9PT1hP3t9OmE7dmFyIGgsdCxsPTAscD1udWxsLG09YygpLGc9ZmEoYSk7Zy5yZXNldD1mdW5jdGlvbigpe3ZhciBhPWcuZGlyZWN0aW9uLGM9Zy5sb29wO2cuY3VycmVudFRpbWU9XG4wO2cucHJvZ3Jlc3M9MDtnLnBhdXNlZD0hMDtnLmJlZ2FuPSExO2cuY29tcGxldGVkPSExO2cucmV2ZXJzZWQ9XCJyZXZlcnNlXCI9PT1hO2cucmVtYWluaW5nPVwiYWx0ZXJuYXRlXCI9PT1hJiYxPT09Yz8yOmM7YigwKTtmb3IoYT1nLmNoaWxkcmVuLmxlbmd0aDthLS07KWcuY2hpbGRyZW5bYV0ucmVzZXQoKX07Zy50aWNrPWZ1bmN0aW9uKGEpe2g9YTt0fHwodD1oKTtrKChsK2gtdCkqcS5zcGVlZCl9O2cuc2Vlaz1mdW5jdGlvbihhKXtrKGQoYSkpfTtnLnBhdXNlPWZ1bmN0aW9uKCl7dmFyIGE9di5pbmRleE9mKGcpOy0xPGEmJnYuc3BsaWNlKGEsMSk7Zy5wYXVzZWQ9ITB9O2cucGxheT1mdW5jdGlvbigpe2cucGF1c2VkJiYoZy5wYXVzZWQ9ITEsdD0wLGw9ZChnLmN1cnJlbnRUaW1lKSx2LnB1c2goZyksQnx8aWEoKSl9O2cucmV2ZXJzZT1mdW5jdGlvbigpe2cucmV2ZXJzZWQ9IWcucmV2ZXJzZWQ7dD0wO2w9ZChnLmN1cnJlbnRUaW1lKX07Zy5yZXN0YXJ0PWZ1bmN0aW9uKCl7Zy5wYXVzZSgpO1xuZy5yZXNldCgpO2cucGxheSgpfTtnLmZpbmlzaGVkPW07Zy5yZXNldCgpO2cuYXV0b3BsYXkmJmcucGxheSgpO3JldHVybiBnfXZhciBnYT17dXBkYXRlOnZvaWQgMCxiZWdpbjp2b2lkIDAscnVuOnZvaWQgMCxjb21wbGV0ZTp2b2lkIDAsbG9vcDoxLGRpcmVjdGlvbjpcIm5vcm1hbFwiLGF1dG9wbGF5OiEwLG9mZnNldDowfSxTPXtkdXJhdGlvbjoxRTMsZGVsYXk6MCxlYXNpbmc6XCJlYXNlT3V0RWxhc3RpY1wiLGVsYXN0aWNpdHk6NTAwLHJvdW5kOjB9LFc9XCJ0cmFuc2xhdGVYIHRyYW5zbGF0ZVkgdHJhbnNsYXRlWiByb3RhdGUgcm90YXRlWCByb3RhdGVZIHJvdGF0ZVogc2NhbGUgc2NhbGVYIHNjYWxlWSBzY2FsZVogc2tld1ggc2tld1kgcGVyc3BlY3RpdmVcIi5zcGxpdChcIiBcIiksSCxoPXthcnI6ZnVuY3Rpb24oYSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoYSl9LG9iajpmdW5jdGlvbihhKXtyZXR1cm4tMTxPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSkuaW5kZXhPZihcIk9iamVjdFwiKX0sXG5wdGg6ZnVuY3Rpb24oYSl7cmV0dXJuIGgub2JqKGEpJiZhLmhhc093blByb3BlcnR5KFwidG90YWxMZW5ndGhcIil9LHN2ZzpmdW5jdGlvbihhKXtyZXR1cm4gYSBpbnN0YW5jZW9mIFNWR0VsZW1lbnR9LGRvbTpmdW5jdGlvbihhKXtyZXR1cm4gYS5ub2RlVHlwZXx8aC5zdmcoYSl9LHN0cjpmdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF9LGZuYzpmdW5jdGlvbihhKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYX0sdW5kOmZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCI9PT10eXBlb2YgYX0saGV4OmZ1bmN0aW9uKGEpe3JldHVybi8oXiNbMC05QS1GXXs2fSQpfCheI1swLTlBLUZdezN9JCkvaS50ZXN0KGEpfSxyZ2I6ZnVuY3Rpb24oYSl7cmV0dXJuL15yZ2IvLnRlc3QoYSl9LGhzbDpmdW5jdGlvbihhKXtyZXR1cm4vXmhzbC8udGVzdChhKX0sY29sOmZ1bmN0aW9uKGEpe3JldHVybiBoLmhleChhKXx8aC5yZ2IoYSl8fGguaHNsKGEpfX0sQT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxcbmQsYil7cmV0dXJuKCgoMS0zKmIrMypkKSphKygzKmItNipkKSkqYSszKmQpKmF9cmV0dXJuIGZ1bmN0aW9uKGMsZCxiLGYpe2lmKDA8PWMmJjE+PWMmJjA8PWImJjE+PWIpe3ZhciBlPW5ldyBGbG9hdDMyQXJyYXkoMTEpO2lmKGMhPT1kfHxiIT09Zilmb3IodmFyIGs9MDsxMT5rOysrayllW2tdPWEoLjEqayxjLGIpO3JldHVybiBmdW5jdGlvbihrKXtpZihjPT09ZCYmYj09PWYpcmV0dXJuIGs7aWYoMD09PWspcmV0dXJuIDA7aWYoMT09PWspcmV0dXJuIDE7Zm9yKHZhciBoPTAsbD0xOzEwIT09bCYmZVtsXTw9azsrK2wpaCs9LjE7LS1sO3ZhciBsPWgrKGstZVtsXSkvKGVbbCsxXS1lW2xdKSouMSxuPTMqKDEtMypiKzMqYykqbCpsKzIqKDMqYi02KmMpKmwrMypjO2lmKC4wMDE8PW4pe2ZvcihoPTA7ND5oOysraCl7bj0zKigxLTMqYiszKmMpKmwqbCsyKigzKmItNipjKSpsKzMqYztpZigwPT09bilicmVhazt2YXIgbT1hKGwsYyxiKS1rLGw9bC1tL259az1sfWVsc2UgaWYoMD09PVxubilrPWw7ZWxzZXt2YXIgbD1oLGg9aCsuMSxnPTA7ZG8gbT1sKyhoLWwpLzIsbj1hKG0sYyxiKS1rLDA8bj9oPW06bD1tO3doaWxlKDFlLTc8TWF0aC5hYnMobikmJjEwPisrZyk7az1tfXJldHVybiBhKGssZCxmKX19fX0oKSxRPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIpe3JldHVybiAwPT09YXx8MT09PWE/YTotTWF0aC5wb3coMiwxMCooYS0xKSkqTWF0aC5zaW4oMiooYS0xLWIvKDIqTWF0aC5QSSkqTWF0aC5hc2luKDEpKSpNYXRoLlBJL2IpfXZhciBjPVwiUXVhZCBDdWJpYyBRdWFydCBRdWludCBTaW5lIEV4cG8gQ2lyYyBCYWNrIEVsYXN0aWNcIi5zcGxpdChcIiBcIiksZD17SW46W1suNTUsLjA4NSwuNjgsLjUzXSxbLjU1LC4wNTUsLjY3NSwuMTldLFsuODk1LC4wMywuNjg1LC4yMl0sWy43NTUsLjA1LC44NTUsLjA2XSxbLjQ3LDAsLjc0NSwuNzE1XSxbLjk1LC4wNSwuNzk1LC4wMzVdLFsuNiwuMDQsLjk4LC4zMzVdLFsuNiwtLjI4LC43MzUsLjA0NV0sYV0sT3V0OltbLjI1LFxuLjQ2LC40NSwuOTRdLFsuMjE1LC42MSwuMzU1LDFdLFsuMTY1LC44NCwuNDQsMV0sWy4yMywxLC4zMiwxXSxbLjM5LC41NzUsLjU2NSwxXSxbLjE5LDEsLjIyLDFdLFsuMDc1LC44MiwuMTY1LDFdLFsuMTc1LC44ODUsLjMyLDEuMjc1XSxmdW5jdGlvbihiLGMpe3JldHVybiAxLWEoMS1iLGMpfV0sSW5PdXQ6W1suNDU1LC4wMywuNTE1LC45NTVdLFsuNjQ1LC4wNDUsLjM1NSwxXSxbLjc3LDAsLjE3NSwxXSxbLjg2LDAsLjA3LDFdLFsuNDQ1LC4wNSwuNTUsLjk1XSxbMSwwLDAsMV0sWy43ODUsLjEzNSwuMTUsLjg2XSxbLjY4LC0uNTUsLjI2NSwxLjU1XSxmdW5jdGlvbihiLGMpe3JldHVybi41PmI/YSgyKmIsYykvMjoxLWEoLTIqYisyLGMpLzJ9XX0sYj17bGluZWFyOkEoLjI1LC4yNSwuNzUsLjc1KX0sZj17fSxlO2ZvcihlIGluIGQpZi50eXBlPWUsZFtmLnR5cGVdLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKGQsZil7YltcImVhc2VcIithLnR5cGUrY1tmXV09aC5mbmMoZCk/XG5kOkEuYXBwbHkoJGpzY29tcCR0aGlzLGQpfX0oZikpLGY9e3R5cGU6Zi50eXBlfTtyZXR1cm4gYn0oKSxoYT17Y3NzOmZ1bmN0aW9uKGEsYyxkKXtyZXR1cm4gYS5zdHlsZVtjXT1kfSxhdHRyaWJ1dGU6ZnVuY3Rpb24oYSxjLGQpe3JldHVybiBhLnNldEF0dHJpYnV0ZShjLGQpfSxvYmplY3Q6ZnVuY3Rpb24oYSxjLGQpe3JldHVybiBhW2NdPWR9LHRyYW5zZm9ybTpmdW5jdGlvbihhLGMsZCxiLGYpe2JbZl18fChiW2ZdPVtdKTtiW2ZdLnB1c2goYytcIihcIitkK1wiKVwiKX19LHY9W10sQj0wLGlhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe0I9cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGMpfWZ1bmN0aW9uIGMoYyl7dmFyIGI9di5sZW5ndGg7aWYoYil7Zm9yKHZhciBkPTA7ZDxiOyl2W2RdJiZ2W2RdLnRpY2soYyksZCsrO2EoKX1lbHNlIGNhbmNlbEFuaW1hdGlvbkZyYW1lKEIpLEI9MH1yZXR1cm4gYX0oKTtxLnZlcnNpb249XCIyLjIuMFwiO3Euc3BlZWQ9MTtxLnJ1bm5pbmc9djtxLnJlbW92ZT1cbmZ1bmN0aW9uKGEpe2E9UChhKTtmb3IodmFyIGM9di5sZW5ndGg7Yy0tOylmb3IodmFyIGQ9dltjXSxiPWQuYW5pbWF0aW9ucyxmPWIubGVuZ3RoO2YtLTspdShhLGJbZl0uYW5pbWF0YWJsZS50YXJnZXQpJiYoYi5zcGxpY2UoZiwxKSxiLmxlbmd0aHx8ZC5wYXVzZSgpKX07cS5nZXRWYWx1ZT1LO3EucGF0aD1mdW5jdGlvbihhLGMpe3ZhciBkPWguc3RyKGEpP2UoYSlbMF06YSxiPWN8fDEwMDtyZXR1cm4gZnVuY3Rpb24oYSl7cmV0dXJue2VsOmQscHJvcGVydHk6YSx0b3RhbExlbmd0aDpOKGQpKihiLzEwMCl9fX07cS5zZXREYXNob2Zmc2V0PWZ1bmN0aW9uKGEpe3ZhciBjPU4oYSk7YS5zZXRBdHRyaWJ1dGUoXCJzdHJva2UtZGFzaGFycmF5XCIsYyk7cmV0dXJuIGN9O3EuYmV6aWVyPUE7cS5lYXNpbmdzPVE7cS50aW1lbGluZT1mdW5jdGlvbihhKXt2YXIgYz1xKGEpO2MucGF1c2UoKTtjLmR1cmF0aW9uPTA7Yy5hZGQ9ZnVuY3Rpb24oZCl7Yy5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuYmVnYW49XG4hMDthLmNvbXBsZXRlZD0hMH0pO20oZCkuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD16KGIsRChTLGF8fHt9KSk7ZC50YXJnZXRzPWQudGFyZ2V0c3x8YS50YXJnZXRzO2I9Yy5kdXJhdGlvbjt2YXIgZT1kLm9mZnNldDtkLmF1dG9wbGF5PSExO2QuZGlyZWN0aW9uPWMuZGlyZWN0aW9uO2Qub2Zmc2V0PWgudW5kKGUpP2I6TChlLGIpO2MuYmVnYW49ITA7Yy5jb21wbGV0ZWQ9ITA7Yy5zZWVrKGQub2Zmc2V0KTtkPXEoZCk7ZC5iZWdhbj0hMDtkLmNvbXBsZXRlZD0hMDtkLmR1cmF0aW9uPmImJihjLmR1cmF0aW9uPWQuZHVyYXRpb24pO2MuY2hpbGRyZW4ucHVzaChkKX0pO2Muc2VlaygwKTtjLnJlc2V0KCk7Yy5hdXRvcGxheSYmYy5yZXN0YXJ0KCk7cmV0dXJuIGN9O3JldHVybiBjfTtxLnJhbmRvbT1mdW5jdGlvbihhLGMpe3JldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqKGMtYSsxKSkrYX07cmV0dXJuIHF9KTtcbi8qIVxuICogQGZpbGVPdmVydmlldyBUb3VjaFN3aXBlIC0galF1ZXJ5IFBsdWdpblxuICogQHZlcnNpb24gMS42LjE4XG4gKlxuICogQGF1dGhvciBNYXR0IEJyeXNvbiBodHRwOi8vd3d3LmdpdGh1Yi5jb20vbWF0dGJyeXNvblxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWF0dGJyeXNvbi9Ub3VjaFN3aXBlLUpxdWVyeS1QbHVnaW5cbiAqIEBzZWUgaHR0cDovL2xhYnMucmFtcGludGVyYWN0aXZlLmNvLnVrL3RvdWNoU3dpcGUvXG4gKiBAc2VlIGh0dHA6Ly9wbHVnaW5zLmpxdWVyeS5jb20vcHJvamVjdC90b3VjaFN3aXBlXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDEwLTIwMTUgTWF0dCBCcnlzb25cbiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBvciBHUEwgVmVyc2lvbiAyIGxpY2Vuc2VzLlxuICpcbiAqL1xuIWZ1bmN0aW9uKGZhY3Rvcnkpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lLmFtZC5qUXVlcnk/ZGVmaW5lKFtcImpxdWVyeVwiXSxmYWN0b3J5KTpmYWN0b3J5KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP3JlcXVpcmUoXCJqcXVlcnlcIik6alF1ZXJ5KX0oZnVuY3Rpb24oJCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaW5pdChvcHRpb25zKXtyZXR1cm4hb3B0aW9uc3x8dm9pZCAwIT09b3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGx8fHZvaWQgMD09PW9wdGlvbnMuc3dpcGUmJnZvaWQgMD09PW9wdGlvbnMuc3dpcGVTdGF0dXN8fChvcHRpb25zLmFsbG93UGFnZVNjcm9sbD1OT05FKSx2b2lkIDAhPT1vcHRpb25zLmNsaWNrJiZ2b2lkIDA9PT1vcHRpb25zLnRhcCYmKG9wdGlvbnMudGFwPW9wdGlvbnMuY2xpY2spLG9wdGlvbnN8fChvcHRpb25zPXt9KSxvcHRpb25zPSQuZXh0ZW5kKHt9LCQuZm4uc3dpcGUuZGVmYXVsdHMsb3B0aW9ucyksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyICR0aGlzPSQodGhpcykscGx1Z2luPSR0aGlzLmRhdGEoUExVR0lOX05TKTtwbHVnaW58fChwbHVnaW49bmV3IFRvdWNoU3dpcGUodGhpcyxvcHRpb25zKSwkdGhpcy5kYXRhKFBMVUdJTl9OUyxwbHVnaW4pKX0pfWZ1bmN0aW9uIFRvdWNoU3dpcGUoZWxlbWVudCxvcHRpb25zKXtmdW5jdGlvbiB0b3VjaFN0YXJ0KGpxRXZlbnQpe2lmKCEoZ2V0VG91Y2hJblByb2dyZXNzKCl8fCQoanFFdmVudC50YXJnZXQpLmNsb3Nlc3Qob3B0aW9ucy5leGNsdWRlZEVsZW1lbnRzLCRlbGVtZW50KS5sZW5ndGg+MCkpe3ZhciBldmVudD1qcUV2ZW50Lm9yaWdpbmFsRXZlbnQ/anFFdmVudC5vcmlnaW5hbEV2ZW50OmpxRXZlbnQ7aWYoIWV2ZW50LnBvaW50ZXJUeXBlfHxcIm1vdXNlXCIhPWV2ZW50LnBvaW50ZXJUeXBlfHwwIT1vcHRpb25zLmZhbGxiYWNrVG9Nb3VzZUV2ZW50cyl7dmFyIHJldCx0b3VjaGVzPWV2ZW50LnRvdWNoZXMsZXZ0PXRvdWNoZXM/dG91Y2hlc1swXTpldmVudDtyZXR1cm4gcGhhc2U9UEhBU0VfU1RBUlQsdG91Y2hlcz9maW5nZXJDb3VudD10b3VjaGVzLmxlbmd0aDpvcHRpb25zLnByZXZlbnREZWZhdWx0RXZlbnRzIT09ITEmJmpxRXZlbnQucHJldmVudERlZmF1bHQoKSxkaXN0YW5jZT0wLGRpcmVjdGlvbj1udWxsLGN1cnJlbnREaXJlY3Rpb249bnVsbCxwaW5jaERpcmVjdGlvbj1udWxsLGR1cmF0aW9uPTAsc3RhcnRUb3VjaGVzRGlzdGFuY2U9MCxlbmRUb3VjaGVzRGlzdGFuY2U9MCxwaW5jaFpvb209MSxwaW5jaERpc3RhbmNlPTAsbWF4aW11bXNNYXA9Y3JlYXRlTWF4aW11bXNEYXRhKCksY2FuY2VsTXVsdGlGaW5nZXJSZWxlYXNlKCksY3JlYXRlRmluZ2VyRGF0YSgwLGV2dCksIXRvdWNoZXN8fGZpbmdlckNvdW50PT09b3B0aW9ucy5maW5nZXJzfHxvcHRpb25zLmZpbmdlcnM9PT1BTExfRklOR0VSU3x8aGFzUGluY2hlcygpPyhzdGFydFRpbWU9Z2V0VGltZVN0YW1wKCksMj09ZmluZ2VyQ291bnQmJihjcmVhdGVGaW5nZXJEYXRhKDEsdG91Y2hlc1sxXSksc3RhcnRUb3VjaGVzRGlzdGFuY2U9ZW5kVG91Y2hlc0Rpc3RhbmNlPWNhbGN1bGF0ZVRvdWNoZXNEaXN0YW5jZShmaW5nZXJEYXRhWzBdLnN0YXJ0LGZpbmdlckRhdGFbMV0uc3RhcnQpKSwob3B0aW9ucy5zd2lwZVN0YXR1c3x8b3B0aW9ucy5waW5jaFN0YXR1cykmJihyZXQ9dHJpZ2dlckhhbmRsZXIoZXZlbnQscGhhc2UpKSk6cmV0PSExLHJldD09PSExPyhwaGFzZT1QSEFTRV9DQU5DRUwsdHJpZ2dlckhhbmRsZXIoZXZlbnQscGhhc2UpLHJldCk6KG9wdGlvbnMuaG9sZCYmKGhvbGRUaW1lb3V0PXNldFRpbWVvdXQoJC5wcm94eShmdW5jdGlvbigpeyRlbGVtZW50LnRyaWdnZXIoXCJob2xkXCIsW2V2ZW50LnRhcmdldF0pLG9wdGlvbnMuaG9sZCYmKHJldD1vcHRpb25zLmhvbGQuY2FsbCgkZWxlbWVudCxldmVudCxldmVudC50YXJnZXQpKX0sdGhpcyksb3B0aW9ucy5sb25nVGFwVGhyZXNob2xkKSksc2V0VG91Y2hJblByb2dyZXNzKCEwKSxudWxsKX19fWZ1bmN0aW9uIHRvdWNoTW92ZShqcUV2ZW50KXt2YXIgZXZlbnQ9anFFdmVudC5vcmlnaW5hbEV2ZW50P2pxRXZlbnQub3JpZ2luYWxFdmVudDpqcUV2ZW50O2lmKHBoYXNlIT09UEhBU0VfRU5EJiZwaGFzZSE9PVBIQVNFX0NBTkNFTCYmIWluTXVsdGlGaW5nZXJSZWxlYXNlKCkpe3ZhciByZXQsdG91Y2hlcz1ldmVudC50b3VjaGVzLGV2dD10b3VjaGVzP3RvdWNoZXNbMF06ZXZlbnQsY3VycmVudEZpbmdlcj11cGRhdGVGaW5nZXJEYXRhKGV2dCk7aWYoZW5kVGltZT1nZXRUaW1lU3RhbXAoKSx0b3VjaGVzJiYoZmluZ2VyQ291bnQ9dG91Y2hlcy5sZW5ndGgpLG9wdGlvbnMuaG9sZCYmY2xlYXJUaW1lb3V0KGhvbGRUaW1lb3V0KSxwaGFzZT1QSEFTRV9NT1ZFLDI9PWZpbmdlckNvdW50JiYoMD09c3RhcnRUb3VjaGVzRGlzdGFuY2U/KGNyZWF0ZUZpbmdlckRhdGEoMSx0b3VjaGVzWzFdKSxzdGFydFRvdWNoZXNEaXN0YW5jZT1lbmRUb3VjaGVzRGlzdGFuY2U9Y2FsY3VsYXRlVG91Y2hlc0Rpc3RhbmNlKGZpbmdlckRhdGFbMF0uc3RhcnQsZmluZ2VyRGF0YVsxXS5zdGFydCkpOih1cGRhdGVGaW5nZXJEYXRhKHRvdWNoZXNbMV0pLGVuZFRvdWNoZXNEaXN0YW5jZT1jYWxjdWxhdGVUb3VjaGVzRGlzdGFuY2UoZmluZ2VyRGF0YVswXS5lbmQsZmluZ2VyRGF0YVsxXS5lbmQpLHBpbmNoRGlyZWN0aW9uPWNhbGN1bGF0ZVBpbmNoRGlyZWN0aW9uKGZpbmdlckRhdGFbMF0uZW5kLGZpbmdlckRhdGFbMV0uZW5kKSkscGluY2hab29tPWNhbGN1bGF0ZVBpbmNoWm9vbShzdGFydFRvdWNoZXNEaXN0YW5jZSxlbmRUb3VjaGVzRGlzdGFuY2UpLHBpbmNoRGlzdGFuY2U9TWF0aC5hYnMoc3RhcnRUb3VjaGVzRGlzdGFuY2UtZW5kVG91Y2hlc0Rpc3RhbmNlKSksZmluZ2VyQ291bnQ9PT1vcHRpb25zLmZpbmdlcnN8fG9wdGlvbnMuZmluZ2Vycz09PUFMTF9GSU5HRVJTfHwhdG91Y2hlc3x8aGFzUGluY2hlcygpKXtpZihkaXJlY3Rpb249Y2FsY3VsYXRlRGlyZWN0aW9uKGN1cnJlbnRGaW5nZXIuc3RhcnQsY3VycmVudEZpbmdlci5lbmQpLGN1cnJlbnREaXJlY3Rpb249Y2FsY3VsYXRlRGlyZWN0aW9uKGN1cnJlbnRGaW5nZXIubGFzdCxjdXJyZW50RmluZ2VyLmVuZCksdmFsaWRhdGVEZWZhdWx0RXZlbnQoanFFdmVudCxjdXJyZW50RGlyZWN0aW9uKSxkaXN0YW5jZT1jYWxjdWxhdGVEaXN0YW5jZShjdXJyZW50RmluZ2VyLnN0YXJ0LGN1cnJlbnRGaW5nZXIuZW5kKSxkdXJhdGlvbj1jYWxjdWxhdGVEdXJhdGlvbigpLHNldE1heERpc3RhbmNlKGRpcmVjdGlvbixkaXN0YW5jZSkscmV0PXRyaWdnZXJIYW5kbGVyKGV2ZW50LHBoYXNlKSwhb3B0aW9ucy50cmlnZ2VyT25Ub3VjaEVuZHx8b3B0aW9ucy50cmlnZ2VyT25Ub3VjaExlYXZlKXt2YXIgaW5Cb3VuZHM9ITA7aWYob3B0aW9ucy50cmlnZ2VyT25Ub3VjaExlYXZlKXt2YXIgYm91bmRzPWdldGJvdW5kcyh0aGlzKTtpbkJvdW5kcz1pc0luQm91bmRzKGN1cnJlbnRGaW5nZXIuZW5kLGJvdW5kcyl9IW9wdGlvbnMudHJpZ2dlck9uVG91Y2hFbmQmJmluQm91bmRzP3BoYXNlPWdldE5leHRQaGFzZShQSEFTRV9NT1ZFKTpvcHRpb25zLnRyaWdnZXJPblRvdWNoTGVhdmUmJiFpbkJvdW5kcyYmKHBoYXNlPWdldE5leHRQaGFzZShQSEFTRV9FTkQpKSxwaGFzZSE9UEhBU0VfQ0FOQ0VMJiZwaGFzZSE9UEhBU0VfRU5EfHx0cmlnZ2VySGFuZGxlcihldmVudCxwaGFzZSl9fWVsc2UgcGhhc2U9UEhBU0VfQ0FOQ0VMLHRyaWdnZXJIYW5kbGVyKGV2ZW50LHBoYXNlKTtyZXQ9PT0hMSYmKHBoYXNlPVBIQVNFX0NBTkNFTCx0cmlnZ2VySGFuZGxlcihldmVudCxwaGFzZSkpfX1mdW5jdGlvbiB0b3VjaEVuZChqcUV2ZW50KXt2YXIgZXZlbnQ9anFFdmVudC5vcmlnaW5hbEV2ZW50P2pxRXZlbnQub3JpZ2luYWxFdmVudDpqcUV2ZW50LHRvdWNoZXM9ZXZlbnQudG91Y2hlcztpZih0b3VjaGVzKXtpZih0b3VjaGVzLmxlbmd0aCYmIWluTXVsdGlGaW5nZXJSZWxlYXNlKCkpcmV0dXJuIHN0YXJ0TXVsdGlGaW5nZXJSZWxlYXNlKGV2ZW50KSwhMDtpZih0b3VjaGVzLmxlbmd0aCYmaW5NdWx0aUZpbmdlclJlbGVhc2UoKSlyZXR1cm4hMH1yZXR1cm4gaW5NdWx0aUZpbmdlclJlbGVhc2UoKSYmKGZpbmdlckNvdW50PWZpbmdlckNvdW50QXRSZWxlYXNlKSxlbmRUaW1lPWdldFRpbWVTdGFtcCgpLGR1cmF0aW9uPWNhbGN1bGF0ZUR1cmF0aW9uKCksZGlkU3dpcGVCYWNrVG9DYW5jZWwoKXx8IXZhbGlkYXRlU3dpcGVEaXN0YW5jZSgpPyhwaGFzZT1QSEFTRV9DQU5DRUwsdHJpZ2dlckhhbmRsZXIoZXZlbnQscGhhc2UpKTpvcHRpb25zLnRyaWdnZXJPblRvdWNoRW5kfHxvcHRpb25zLnRyaWdnZXJPblRvdWNoRW5kPT09ITEmJnBoYXNlPT09UEhBU0VfTU9WRT8ob3B0aW9ucy5wcmV2ZW50RGVmYXVsdEV2ZW50cyE9PSExJiZqcUV2ZW50LmNhbmNlbGFibGUhPT0hMSYmanFFdmVudC5wcmV2ZW50RGVmYXVsdCgpLHBoYXNlPVBIQVNFX0VORCx0cmlnZ2VySGFuZGxlcihldmVudCxwaGFzZSkpOiFvcHRpb25zLnRyaWdnZXJPblRvdWNoRW5kJiZoYXNUYXAoKT8ocGhhc2U9UEhBU0VfRU5ELHRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZShldmVudCxwaGFzZSxUQVApKTpwaGFzZT09PVBIQVNFX01PVkUmJihwaGFzZT1QSEFTRV9DQU5DRUwsdHJpZ2dlckhhbmRsZXIoZXZlbnQscGhhc2UpKSxzZXRUb3VjaEluUHJvZ3Jlc3MoITEpLG51bGx9ZnVuY3Rpb24gdG91Y2hDYW5jZWwoKXtmaW5nZXJDb3VudD0wLGVuZFRpbWU9MCxzdGFydFRpbWU9MCxzdGFydFRvdWNoZXNEaXN0YW5jZT0wLGVuZFRvdWNoZXNEaXN0YW5jZT0wLHBpbmNoWm9vbT0xLGNhbmNlbE11bHRpRmluZ2VyUmVsZWFzZSgpLHNldFRvdWNoSW5Qcm9ncmVzcyghMSl9ZnVuY3Rpb24gdG91Y2hMZWF2ZShqcUV2ZW50KXt2YXIgZXZlbnQ9anFFdmVudC5vcmlnaW5hbEV2ZW50P2pxRXZlbnQub3JpZ2luYWxFdmVudDpqcUV2ZW50O29wdGlvbnMudHJpZ2dlck9uVG91Y2hMZWF2ZSYmKHBoYXNlPWdldE5leHRQaGFzZShQSEFTRV9FTkQpLHRyaWdnZXJIYW5kbGVyKGV2ZW50LHBoYXNlKSl9ZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXJzKCl7JGVsZW1lbnQudW5iaW5kKFNUQVJUX0VWLHRvdWNoU3RhcnQpLCRlbGVtZW50LnVuYmluZChDQU5DRUxfRVYsdG91Y2hDYW5jZWwpLCRlbGVtZW50LnVuYmluZChNT1ZFX0VWLHRvdWNoTW92ZSksJGVsZW1lbnQudW5iaW5kKEVORF9FVix0b3VjaEVuZCksTEVBVkVfRVYmJiRlbGVtZW50LnVuYmluZChMRUFWRV9FVix0b3VjaExlYXZlKSxzZXRUb3VjaEluUHJvZ3Jlc3MoITEpfWZ1bmN0aW9uIGdldE5leHRQaGFzZShjdXJyZW50UGhhc2Upe3ZhciBuZXh0UGhhc2U9Y3VycmVudFBoYXNlLHZhbGlkVGltZT12YWxpZGF0ZVN3aXBlVGltZSgpLHZhbGlkRGlzdGFuY2U9dmFsaWRhdGVTd2lwZURpc3RhbmNlKCksZGlkQ2FuY2VsPWRpZFN3aXBlQmFja1RvQ2FuY2VsKCk7cmV0dXJuIXZhbGlkVGltZXx8ZGlkQ2FuY2VsP25leHRQaGFzZT1QSEFTRV9DQU5DRUw6IXZhbGlkRGlzdGFuY2V8fGN1cnJlbnRQaGFzZSE9UEhBU0VfTU9WRXx8b3B0aW9ucy50cmlnZ2VyT25Ub3VjaEVuZCYmIW9wdGlvbnMudHJpZ2dlck9uVG91Y2hMZWF2ZT8hdmFsaWREaXN0YW5jZSYmY3VycmVudFBoYXNlPT1QSEFTRV9FTkQmJm9wdGlvbnMudHJpZ2dlck9uVG91Y2hMZWF2ZSYmKG5leHRQaGFzZT1QSEFTRV9DQU5DRUwpOm5leHRQaGFzZT1QSEFTRV9FTkQsbmV4dFBoYXNlfWZ1bmN0aW9uIHRyaWdnZXJIYW5kbGVyKGV2ZW50LHBoYXNlKXt2YXIgcmV0LHRvdWNoZXM9ZXZlbnQudG91Y2hlcztyZXR1cm4oZGlkU3dpcGUoKXx8aGFzU3dpcGVzKCkpJiYocmV0PXRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZShldmVudCxwaGFzZSxTV0lQRSkpLChkaWRQaW5jaCgpfHxoYXNQaW5jaGVzKCkpJiZyZXQhPT0hMSYmKHJldD10cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQscGhhc2UsUElOQ0gpKSxkaWREb3VibGVUYXAoKSYmcmV0IT09ITE/cmV0PXRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZShldmVudCxwaGFzZSxET1VCTEVfVEFQKTpkaWRMb25nVGFwKCkmJnJldCE9PSExP3JldD10cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQscGhhc2UsTE9OR19UQVApOmRpZFRhcCgpJiZyZXQhPT0hMSYmKHJldD10cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQscGhhc2UsVEFQKSkscGhhc2U9PT1QSEFTRV9DQU5DRUwmJnRvdWNoQ2FuY2VsKGV2ZW50KSxwaGFzZT09PVBIQVNFX0VORCYmKHRvdWNoZXM/dG91Y2hlcy5sZW5ndGh8fHRvdWNoQ2FuY2VsKGV2ZW50KTp0b3VjaENhbmNlbChldmVudCkpLHJldH1mdW5jdGlvbiB0cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQscGhhc2UsZ2VzdHVyZSl7dmFyIHJldDtpZihnZXN0dXJlPT1TV0lQRSl7aWYoJGVsZW1lbnQudHJpZ2dlcihcInN3aXBlU3RhdHVzXCIsW3BoYXNlLGRpcmVjdGlvbnx8bnVsbCxkaXN0YW5jZXx8MCxkdXJhdGlvbnx8MCxmaW5nZXJDb3VudCxmaW5nZXJEYXRhLGN1cnJlbnREaXJlY3Rpb25dKSxvcHRpb25zLnN3aXBlU3RhdHVzJiYocmV0PW9wdGlvbnMuc3dpcGVTdGF0dXMuY2FsbCgkZWxlbWVudCxldmVudCxwaGFzZSxkaXJlY3Rpb258fG51bGwsZGlzdGFuY2V8fDAsZHVyYXRpb258fDAsZmluZ2VyQ291bnQsZmluZ2VyRGF0YSxjdXJyZW50RGlyZWN0aW9uKSxyZXQ9PT0hMSkpcmV0dXJuITE7aWYocGhhc2U9PVBIQVNFX0VORCYmdmFsaWRhdGVTd2lwZSgpKXtpZihjbGVhclRpbWVvdXQoc2luZ2xlVGFwVGltZW91dCksY2xlYXJUaW1lb3V0KGhvbGRUaW1lb3V0KSwkZWxlbWVudC50cmlnZ2VyKFwic3dpcGVcIixbZGlyZWN0aW9uLGRpc3RhbmNlLGR1cmF0aW9uLGZpbmdlckNvdW50LGZpbmdlckRhdGEsY3VycmVudERpcmVjdGlvbl0pLG9wdGlvbnMuc3dpcGUmJihyZXQ9b3B0aW9ucy5zd2lwZS5jYWxsKCRlbGVtZW50LGV2ZW50LGRpcmVjdGlvbixkaXN0YW5jZSxkdXJhdGlvbixmaW5nZXJDb3VudCxmaW5nZXJEYXRhLGN1cnJlbnREaXJlY3Rpb24pLHJldD09PSExKSlyZXR1cm4hMTtzd2l0Y2goZGlyZWN0aW9uKXtjYXNlIExFRlQ6JGVsZW1lbnQudHJpZ2dlcihcInN3aXBlTGVmdFwiLFtkaXJlY3Rpb24sZGlzdGFuY2UsZHVyYXRpb24sZmluZ2VyQ291bnQsZmluZ2VyRGF0YSxjdXJyZW50RGlyZWN0aW9uXSksb3B0aW9ucy5zd2lwZUxlZnQmJihyZXQ9b3B0aW9ucy5zd2lwZUxlZnQuY2FsbCgkZWxlbWVudCxldmVudCxkaXJlY3Rpb24sZGlzdGFuY2UsZHVyYXRpb24sZmluZ2VyQ291bnQsZmluZ2VyRGF0YSxjdXJyZW50RGlyZWN0aW9uKSk7YnJlYWs7Y2FzZSBSSUdIVDokZWxlbWVudC50cmlnZ2VyKFwic3dpcGVSaWdodFwiLFtkaXJlY3Rpb24sZGlzdGFuY2UsZHVyYXRpb24sZmluZ2VyQ291bnQsZmluZ2VyRGF0YSxjdXJyZW50RGlyZWN0aW9uXSksb3B0aW9ucy5zd2lwZVJpZ2h0JiYocmV0PW9wdGlvbnMuc3dpcGVSaWdodC5jYWxsKCRlbGVtZW50LGV2ZW50LGRpcmVjdGlvbixkaXN0YW5jZSxkdXJhdGlvbixmaW5nZXJDb3VudCxmaW5nZXJEYXRhLGN1cnJlbnREaXJlY3Rpb24pKTticmVhaztjYXNlIFVQOiRlbGVtZW50LnRyaWdnZXIoXCJzd2lwZVVwXCIsW2RpcmVjdGlvbixkaXN0YW5jZSxkdXJhdGlvbixmaW5nZXJDb3VudCxmaW5nZXJEYXRhLGN1cnJlbnREaXJlY3Rpb25dKSxvcHRpb25zLnN3aXBlVXAmJihyZXQ9b3B0aW9ucy5zd2lwZVVwLmNhbGwoJGVsZW1lbnQsZXZlbnQsZGlyZWN0aW9uLGRpc3RhbmNlLGR1cmF0aW9uLGZpbmdlckNvdW50LGZpbmdlckRhdGEsY3VycmVudERpcmVjdGlvbikpO2JyZWFrO2Nhc2UgRE9XTjokZWxlbWVudC50cmlnZ2VyKFwic3dpcGVEb3duXCIsW2RpcmVjdGlvbixkaXN0YW5jZSxkdXJhdGlvbixmaW5nZXJDb3VudCxmaW5nZXJEYXRhLGN1cnJlbnREaXJlY3Rpb25dKSxvcHRpb25zLnN3aXBlRG93biYmKHJldD1vcHRpb25zLnN3aXBlRG93bi5jYWxsKCRlbGVtZW50LGV2ZW50LGRpcmVjdGlvbixkaXN0YW5jZSxkdXJhdGlvbixmaW5nZXJDb3VudCxmaW5nZXJEYXRhLGN1cnJlbnREaXJlY3Rpb24pKX19fWlmKGdlc3R1cmU9PVBJTkNIKXtpZigkZWxlbWVudC50cmlnZ2VyKFwicGluY2hTdGF0dXNcIixbcGhhc2UscGluY2hEaXJlY3Rpb258fG51bGwscGluY2hEaXN0YW5jZXx8MCxkdXJhdGlvbnx8MCxmaW5nZXJDb3VudCxwaW5jaFpvb20sZmluZ2VyRGF0YV0pLG9wdGlvbnMucGluY2hTdGF0dXMmJihyZXQ9b3B0aW9ucy5waW5jaFN0YXR1cy5jYWxsKCRlbGVtZW50LGV2ZW50LHBoYXNlLHBpbmNoRGlyZWN0aW9ufHxudWxsLHBpbmNoRGlzdGFuY2V8fDAsZHVyYXRpb258fDAsZmluZ2VyQ291bnQscGluY2hab29tLGZpbmdlckRhdGEpLHJldD09PSExKSlyZXR1cm4hMTtpZihwaGFzZT09UEhBU0VfRU5EJiZ2YWxpZGF0ZVBpbmNoKCkpc3dpdGNoKHBpbmNoRGlyZWN0aW9uKXtjYXNlIElOOiRlbGVtZW50LnRyaWdnZXIoXCJwaW5jaEluXCIsW3BpbmNoRGlyZWN0aW9ufHxudWxsLHBpbmNoRGlzdGFuY2V8fDAsZHVyYXRpb258fDAsZmluZ2VyQ291bnQscGluY2hab29tLGZpbmdlckRhdGFdKSxvcHRpb25zLnBpbmNoSW4mJihyZXQ9b3B0aW9ucy5waW5jaEluLmNhbGwoJGVsZW1lbnQsZXZlbnQscGluY2hEaXJlY3Rpb258fG51bGwscGluY2hEaXN0YW5jZXx8MCxkdXJhdGlvbnx8MCxmaW5nZXJDb3VudCxwaW5jaFpvb20sZmluZ2VyRGF0YSkpO2JyZWFrO2Nhc2UgT1VUOiRlbGVtZW50LnRyaWdnZXIoXCJwaW5jaE91dFwiLFtwaW5jaERpcmVjdGlvbnx8bnVsbCxwaW5jaERpc3RhbmNlfHwwLGR1cmF0aW9ufHwwLGZpbmdlckNvdW50LHBpbmNoWm9vbSxmaW5nZXJEYXRhXSksb3B0aW9ucy5waW5jaE91dCYmKHJldD1vcHRpb25zLnBpbmNoT3V0LmNhbGwoJGVsZW1lbnQsZXZlbnQscGluY2hEaXJlY3Rpb258fG51bGwscGluY2hEaXN0YW5jZXx8MCxkdXJhdGlvbnx8MCxmaW5nZXJDb3VudCxwaW5jaFpvb20sZmluZ2VyRGF0YSkpfX1yZXR1cm4gZ2VzdHVyZT09VEFQP3BoYXNlIT09UEhBU0VfQ0FOQ0VMJiZwaGFzZSE9PVBIQVNFX0VORHx8KGNsZWFyVGltZW91dChzaW5nbGVUYXBUaW1lb3V0KSxjbGVhclRpbWVvdXQoaG9sZFRpbWVvdXQpLGhhc0RvdWJsZVRhcCgpJiYhaW5Eb3VibGVUYXAoKT8oZG91YmxlVGFwU3RhcnRUaW1lPWdldFRpbWVTdGFtcCgpLHNpbmdsZVRhcFRpbWVvdXQ9c2V0VGltZW91dCgkLnByb3h5KGZ1bmN0aW9uKCl7ZG91YmxlVGFwU3RhcnRUaW1lPW51bGwsJGVsZW1lbnQudHJpZ2dlcihcInRhcFwiLFtldmVudC50YXJnZXRdKSxvcHRpb25zLnRhcCYmKHJldD1vcHRpb25zLnRhcC5jYWxsKCRlbGVtZW50LGV2ZW50LGV2ZW50LnRhcmdldCkpfSx0aGlzKSxvcHRpb25zLmRvdWJsZVRhcFRocmVzaG9sZCkpOihkb3VibGVUYXBTdGFydFRpbWU9bnVsbCwkZWxlbWVudC50cmlnZ2VyKFwidGFwXCIsW2V2ZW50LnRhcmdldF0pLG9wdGlvbnMudGFwJiYocmV0PW9wdGlvbnMudGFwLmNhbGwoJGVsZW1lbnQsZXZlbnQsZXZlbnQudGFyZ2V0KSkpKTpnZXN0dXJlPT1ET1VCTEVfVEFQP3BoYXNlIT09UEhBU0VfQ0FOQ0VMJiZwaGFzZSE9PVBIQVNFX0VORHx8KGNsZWFyVGltZW91dChzaW5nbGVUYXBUaW1lb3V0KSxjbGVhclRpbWVvdXQoaG9sZFRpbWVvdXQpLGRvdWJsZVRhcFN0YXJ0VGltZT1udWxsLCRlbGVtZW50LnRyaWdnZXIoXCJkb3VibGV0YXBcIixbZXZlbnQudGFyZ2V0XSksb3B0aW9ucy5kb3VibGVUYXAmJihyZXQ9b3B0aW9ucy5kb3VibGVUYXAuY2FsbCgkZWxlbWVudCxldmVudCxldmVudC50YXJnZXQpKSk6Z2VzdHVyZT09TE9OR19UQVAmJihwaGFzZSE9PVBIQVNFX0NBTkNFTCYmcGhhc2UhPT1QSEFTRV9FTkR8fChjbGVhclRpbWVvdXQoc2luZ2xlVGFwVGltZW91dCksZG91YmxlVGFwU3RhcnRUaW1lPW51bGwsJGVsZW1lbnQudHJpZ2dlcihcImxvbmd0YXBcIixbZXZlbnQudGFyZ2V0XSksb3B0aW9ucy5sb25nVGFwJiYocmV0PW9wdGlvbnMubG9uZ1RhcC5jYWxsKCRlbGVtZW50LGV2ZW50LGV2ZW50LnRhcmdldCkpKSkscmV0fWZ1bmN0aW9uIHZhbGlkYXRlU3dpcGVEaXN0YW5jZSgpe3ZhciB2YWxpZD0hMDtyZXR1cm4gbnVsbCE9PW9wdGlvbnMudGhyZXNob2xkJiYodmFsaWQ9ZGlzdGFuY2U+PW9wdGlvbnMudGhyZXNob2xkKSx2YWxpZH1mdW5jdGlvbiBkaWRTd2lwZUJhY2tUb0NhbmNlbCgpe3ZhciBjYW5jZWxsZWQ9ITE7cmV0dXJuIG51bGwhPT1vcHRpb25zLmNhbmNlbFRocmVzaG9sZCYmbnVsbCE9PWRpcmVjdGlvbiYmKGNhbmNlbGxlZD1nZXRNYXhEaXN0YW5jZShkaXJlY3Rpb24pLWRpc3RhbmNlPj1vcHRpb25zLmNhbmNlbFRocmVzaG9sZCksY2FuY2VsbGVkfWZ1bmN0aW9uIHZhbGlkYXRlUGluY2hEaXN0YW5jZSgpe3JldHVybiBudWxsPT09b3B0aW9ucy5waW5jaFRocmVzaG9sZHx8cGluY2hEaXN0YW5jZT49b3B0aW9ucy5waW5jaFRocmVzaG9sZH1mdW5jdGlvbiB2YWxpZGF0ZVN3aXBlVGltZSgpe3ZhciByZXN1bHQ7cmV0dXJuIHJlc3VsdD0hb3B0aW9ucy5tYXhUaW1lVGhyZXNob2xkfHwhKGR1cmF0aW9uPj1vcHRpb25zLm1heFRpbWVUaHJlc2hvbGQpfWZ1bmN0aW9uIHZhbGlkYXRlRGVmYXVsdEV2ZW50KGpxRXZlbnQsZGlyZWN0aW9uKXtpZihvcHRpb25zLnByZXZlbnREZWZhdWx0RXZlbnRzIT09ITEpaWYob3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGw9PT1OT05FKWpxRXZlbnQucHJldmVudERlZmF1bHQoKTtlbHNle3ZhciBhdXRvPW9wdGlvbnMuYWxsb3dQYWdlU2Nyb2xsPT09QVVUTztzd2l0Y2goZGlyZWN0aW9uKXtjYXNlIExFRlQ6KG9wdGlvbnMuc3dpcGVMZWZ0JiZhdXRvfHwhYXV0byYmb3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGwhPUhPUklaT05UQUwpJiZqcUV2ZW50LnByZXZlbnREZWZhdWx0KCk7YnJlYWs7Y2FzZSBSSUdIVDoob3B0aW9ucy5zd2lwZVJpZ2h0JiZhdXRvfHwhYXV0byYmb3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGwhPUhPUklaT05UQUwpJiZqcUV2ZW50LnByZXZlbnREZWZhdWx0KCk7YnJlYWs7Y2FzZSBVUDoob3B0aW9ucy5zd2lwZVVwJiZhdXRvfHwhYXV0byYmb3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGwhPVZFUlRJQ0FMKSYmanFFdmVudC5wcmV2ZW50RGVmYXVsdCgpO2JyZWFrO2Nhc2UgRE9XTjoob3B0aW9ucy5zd2lwZURvd24mJmF1dG98fCFhdXRvJiZvcHRpb25zLmFsbG93UGFnZVNjcm9sbCE9VkVSVElDQUwpJiZqcUV2ZW50LnByZXZlbnREZWZhdWx0KCk7YnJlYWs7Y2FzZSBOT05FOn19fWZ1bmN0aW9uIHZhbGlkYXRlUGluY2goKXt2YXIgaGFzQ29ycmVjdEZpbmdlckNvdW50PXZhbGlkYXRlRmluZ2VycygpLGhhc0VuZFBvaW50PXZhbGlkYXRlRW5kUG9pbnQoKSxoYXNDb3JyZWN0RGlzdGFuY2U9dmFsaWRhdGVQaW5jaERpc3RhbmNlKCk7cmV0dXJuIGhhc0NvcnJlY3RGaW5nZXJDb3VudCYmaGFzRW5kUG9pbnQmJmhhc0NvcnJlY3REaXN0YW5jZX1mdW5jdGlvbiBoYXNQaW5jaGVzKCl7cmV0dXJuISEob3B0aW9ucy5waW5jaFN0YXR1c3x8b3B0aW9ucy5waW5jaElufHxvcHRpb25zLnBpbmNoT3V0KX1mdW5jdGlvbiBkaWRQaW5jaCgpe3JldHVybiEoIXZhbGlkYXRlUGluY2goKXx8IWhhc1BpbmNoZXMoKSl9ZnVuY3Rpb24gdmFsaWRhdGVTd2lwZSgpe3ZhciBoYXNWYWxpZFRpbWU9dmFsaWRhdGVTd2lwZVRpbWUoKSxoYXNWYWxpZERpc3RhbmNlPXZhbGlkYXRlU3dpcGVEaXN0YW5jZSgpLGhhc0NvcnJlY3RGaW5nZXJDb3VudD12YWxpZGF0ZUZpbmdlcnMoKSxoYXNFbmRQb2ludD12YWxpZGF0ZUVuZFBvaW50KCksZGlkQ2FuY2VsPWRpZFN3aXBlQmFja1RvQ2FuY2VsKCksdmFsaWQ9IWRpZENhbmNlbCYmaGFzRW5kUG9pbnQmJmhhc0NvcnJlY3RGaW5nZXJDb3VudCYmaGFzVmFsaWREaXN0YW5jZSYmaGFzVmFsaWRUaW1lO3JldHVybiB2YWxpZH1mdW5jdGlvbiBoYXNTd2lwZXMoKXtyZXR1cm4hIShvcHRpb25zLnN3aXBlfHxvcHRpb25zLnN3aXBlU3RhdHVzfHxvcHRpb25zLnN3aXBlTGVmdHx8b3B0aW9ucy5zd2lwZVJpZ2h0fHxvcHRpb25zLnN3aXBlVXB8fG9wdGlvbnMuc3dpcGVEb3duKX1mdW5jdGlvbiBkaWRTd2lwZSgpe3JldHVybiEoIXZhbGlkYXRlU3dpcGUoKXx8IWhhc1N3aXBlcygpKX1mdW5jdGlvbiB2YWxpZGF0ZUZpbmdlcnMoKXtyZXR1cm4gZmluZ2VyQ291bnQ9PT1vcHRpb25zLmZpbmdlcnN8fG9wdGlvbnMuZmluZ2Vycz09PUFMTF9GSU5HRVJTfHwhU1VQUE9SVFNfVE9VQ0h9ZnVuY3Rpb24gdmFsaWRhdGVFbmRQb2ludCgpe3JldHVybiAwIT09ZmluZ2VyRGF0YVswXS5lbmQueH1mdW5jdGlvbiBoYXNUYXAoKXtyZXR1cm4hIW9wdGlvbnMudGFwfWZ1bmN0aW9uIGhhc0RvdWJsZVRhcCgpe3JldHVybiEhb3B0aW9ucy5kb3VibGVUYXB9ZnVuY3Rpb24gaGFzTG9uZ1RhcCgpe3JldHVybiEhb3B0aW9ucy5sb25nVGFwfWZ1bmN0aW9uIHZhbGlkYXRlRG91YmxlVGFwKCl7aWYobnVsbD09ZG91YmxlVGFwU3RhcnRUaW1lKXJldHVybiExO3ZhciBub3c9Z2V0VGltZVN0YW1wKCk7cmV0dXJuIGhhc0RvdWJsZVRhcCgpJiZub3ctZG91YmxlVGFwU3RhcnRUaW1lPD1vcHRpb25zLmRvdWJsZVRhcFRocmVzaG9sZH1mdW5jdGlvbiBpbkRvdWJsZVRhcCgpe3JldHVybiB2YWxpZGF0ZURvdWJsZVRhcCgpfWZ1bmN0aW9uIHZhbGlkYXRlVGFwKCl7cmV0dXJuKDE9PT1maW5nZXJDb3VudHx8IVNVUFBPUlRTX1RPVUNIKSYmKGlzTmFOKGRpc3RhbmNlKXx8ZGlzdGFuY2U8b3B0aW9ucy50aHJlc2hvbGQpfWZ1bmN0aW9uIHZhbGlkYXRlTG9uZ1RhcCgpe3JldHVybiBkdXJhdGlvbj5vcHRpb25zLmxvbmdUYXBUaHJlc2hvbGQmJmRpc3RhbmNlPERPVUJMRV9UQVBfVEhSRVNIT0xEfWZ1bmN0aW9uIGRpZFRhcCgpe3JldHVybiEoIXZhbGlkYXRlVGFwKCl8fCFoYXNUYXAoKSl9ZnVuY3Rpb24gZGlkRG91YmxlVGFwKCl7cmV0dXJuISghdmFsaWRhdGVEb3VibGVUYXAoKXx8IWhhc0RvdWJsZVRhcCgpKX1mdW5jdGlvbiBkaWRMb25nVGFwKCl7cmV0dXJuISghdmFsaWRhdGVMb25nVGFwKCl8fCFoYXNMb25nVGFwKCkpfWZ1bmN0aW9uIHN0YXJ0TXVsdGlGaW5nZXJSZWxlYXNlKGV2ZW50KXtwcmV2aW91c1RvdWNoRW5kVGltZT1nZXRUaW1lU3RhbXAoKSxmaW5nZXJDb3VudEF0UmVsZWFzZT1ldmVudC50b3VjaGVzLmxlbmd0aCsxfWZ1bmN0aW9uIGNhbmNlbE11bHRpRmluZ2VyUmVsZWFzZSgpe3ByZXZpb3VzVG91Y2hFbmRUaW1lPTAsZmluZ2VyQ291bnRBdFJlbGVhc2U9MH1mdW5jdGlvbiBpbk11bHRpRmluZ2VyUmVsZWFzZSgpe3ZhciB3aXRoaW5UaHJlc2hvbGQ9ITE7aWYocHJldmlvdXNUb3VjaEVuZFRpbWUpe3ZhciBkaWZmPWdldFRpbWVTdGFtcCgpLXByZXZpb3VzVG91Y2hFbmRUaW1lO2RpZmY8PW9wdGlvbnMuZmluZ2VyUmVsZWFzZVRocmVzaG9sZCYmKHdpdGhpblRocmVzaG9sZD0hMCl9cmV0dXJuIHdpdGhpblRocmVzaG9sZH1mdW5jdGlvbiBnZXRUb3VjaEluUHJvZ3Jlc3MoKXtyZXR1cm4hKCRlbGVtZW50LmRhdGEoUExVR0lOX05TK1wiX2ludG91Y2hcIikhPT0hMCl9ZnVuY3Rpb24gc2V0VG91Y2hJblByb2dyZXNzKHZhbCl7JGVsZW1lbnQmJih2YWw9PT0hMD8oJGVsZW1lbnQuYmluZChNT1ZFX0VWLHRvdWNoTW92ZSksJGVsZW1lbnQuYmluZChFTkRfRVYsdG91Y2hFbmQpLExFQVZFX0VWJiYkZWxlbWVudC5iaW5kKExFQVZFX0VWLHRvdWNoTGVhdmUpKTooJGVsZW1lbnQudW5iaW5kKE1PVkVfRVYsdG91Y2hNb3ZlLCExKSwkZWxlbWVudC51bmJpbmQoRU5EX0VWLHRvdWNoRW5kLCExKSxMRUFWRV9FViYmJGVsZW1lbnQudW5iaW5kKExFQVZFX0VWLHRvdWNoTGVhdmUsITEpKSwkZWxlbWVudC5kYXRhKFBMVUdJTl9OUytcIl9pbnRvdWNoXCIsdmFsPT09ITApKX1mdW5jdGlvbiBjcmVhdGVGaW5nZXJEYXRhKGlkLGV2dCl7dmFyIGY9e3N0YXJ0Ont4OjAseTowfSxsYXN0Ont4OjAseTowfSxlbmQ6e3g6MCx5OjB9fTtyZXR1cm4gZi5zdGFydC54PWYubGFzdC54PWYuZW5kLng9ZXZ0LnBhZ2VYfHxldnQuY2xpZW50WCxmLnN0YXJ0Lnk9Zi5sYXN0Lnk9Zi5lbmQueT1ldnQucGFnZVl8fGV2dC5jbGllbnRZLGZpbmdlckRhdGFbaWRdPWYsZn1mdW5jdGlvbiB1cGRhdGVGaW5nZXJEYXRhKGV2dCl7dmFyIGlkPXZvaWQgMCE9PWV2dC5pZGVudGlmaWVyP2V2dC5pZGVudGlmaWVyOjAsZj1nZXRGaW5nZXJEYXRhKGlkKTtyZXR1cm4gbnVsbD09PWYmJihmPWNyZWF0ZUZpbmdlckRhdGEoaWQsZXZ0KSksZi5sYXN0Lng9Zi5lbmQueCxmLmxhc3QueT1mLmVuZC55LGYuZW5kLng9ZXZ0LnBhZ2VYfHxldnQuY2xpZW50WCxmLmVuZC55PWV2dC5wYWdlWXx8ZXZ0LmNsaWVudFksZn1mdW5jdGlvbiBnZXRGaW5nZXJEYXRhKGlkKXtyZXR1cm4gZmluZ2VyRGF0YVtpZF18fG51bGx9ZnVuY3Rpb24gc2V0TWF4RGlzdGFuY2UoZGlyZWN0aW9uLGRpc3RhbmNlKXtkaXJlY3Rpb24hPU5PTkUmJihkaXN0YW5jZT1NYXRoLm1heChkaXN0YW5jZSxnZXRNYXhEaXN0YW5jZShkaXJlY3Rpb24pKSxtYXhpbXVtc01hcFtkaXJlY3Rpb25dLmRpc3RhbmNlPWRpc3RhbmNlKX1mdW5jdGlvbiBnZXRNYXhEaXN0YW5jZShkaXJlY3Rpb24pe2lmKG1heGltdW1zTWFwW2RpcmVjdGlvbl0pcmV0dXJuIG1heGltdW1zTWFwW2RpcmVjdGlvbl0uZGlzdGFuY2V9ZnVuY3Rpb24gY3JlYXRlTWF4aW11bXNEYXRhKCl7dmFyIG1heERhdGE9e307cmV0dXJuIG1heERhdGFbTEVGVF09Y3JlYXRlTWF4aW11bVZPKExFRlQpLG1heERhdGFbUklHSFRdPWNyZWF0ZU1heGltdW1WTyhSSUdIVCksbWF4RGF0YVtVUF09Y3JlYXRlTWF4aW11bVZPKFVQKSxtYXhEYXRhW0RPV05dPWNyZWF0ZU1heGltdW1WTyhET1dOKSxtYXhEYXRhfWZ1bmN0aW9uIGNyZWF0ZU1heGltdW1WTyhkaXIpe3JldHVybntkaXJlY3Rpb246ZGlyLGRpc3RhbmNlOjB9fWZ1bmN0aW9uIGNhbGN1bGF0ZUR1cmF0aW9uKCl7cmV0dXJuIGVuZFRpbWUtc3RhcnRUaW1lfWZ1bmN0aW9uIGNhbGN1bGF0ZVRvdWNoZXNEaXN0YW5jZShzdGFydFBvaW50LGVuZFBvaW50KXt2YXIgZGlmZlg9TWF0aC5hYnMoc3RhcnRQb2ludC54LWVuZFBvaW50LngpLGRpZmZZPU1hdGguYWJzKHN0YXJ0UG9pbnQueS1lbmRQb2ludC55KTtyZXR1cm4gTWF0aC5yb3VuZChNYXRoLnNxcnQoZGlmZlgqZGlmZlgrZGlmZlkqZGlmZlkpKX1mdW5jdGlvbiBjYWxjdWxhdGVQaW5jaFpvb20oc3RhcnREaXN0YW5jZSxlbmREaXN0YW5jZSl7dmFyIHBlcmNlbnQ9ZW5kRGlzdGFuY2Uvc3RhcnREaXN0YW5jZSoxO3JldHVybiBwZXJjZW50LnRvRml4ZWQoMil9ZnVuY3Rpb24gY2FsY3VsYXRlUGluY2hEaXJlY3Rpb24oKXtyZXR1cm4gcGluY2hab29tPDE/T1VUOklOfWZ1bmN0aW9uIGNhbGN1bGF0ZURpc3RhbmNlKHN0YXJ0UG9pbnQsZW5kUG9pbnQpe3JldHVybiBNYXRoLnJvdW5kKE1hdGguc3FydChNYXRoLnBvdyhlbmRQb2ludC54LXN0YXJ0UG9pbnQueCwyKStNYXRoLnBvdyhlbmRQb2ludC55LXN0YXJ0UG9pbnQueSwyKSkpfWZ1bmN0aW9uIGNhbGN1bGF0ZUFuZ2xlKHN0YXJ0UG9pbnQsZW5kUG9pbnQpe3ZhciB4PXN0YXJ0UG9pbnQueC1lbmRQb2ludC54LHk9ZW5kUG9pbnQueS1zdGFydFBvaW50Lnkscj1NYXRoLmF0YW4yKHkseCksYW5nbGU9TWF0aC5yb3VuZCgxODAqci9NYXRoLlBJKTtyZXR1cm4gYW5nbGU8MCYmKGFuZ2xlPTM2MC1NYXRoLmFicyhhbmdsZSkpLGFuZ2xlfWZ1bmN0aW9uIGNhbGN1bGF0ZURpcmVjdGlvbihzdGFydFBvaW50LGVuZFBvaW50KXtpZihjb21wYXJlUG9pbnRzKHN0YXJ0UG9pbnQsZW5kUG9pbnQpKXJldHVybiBOT05FO3ZhciBhbmdsZT1jYWxjdWxhdGVBbmdsZShzdGFydFBvaW50LGVuZFBvaW50KTtyZXR1cm4gYW5nbGU8PTQ1JiZhbmdsZT49MD9MRUZUOmFuZ2xlPD0zNjAmJmFuZ2xlPj0zMTU/TEVGVDphbmdsZT49MTM1JiZhbmdsZTw9MjI1P1JJR0hUOmFuZ2xlPjQ1JiZhbmdsZTwxMzU/RE9XTjpVUH1mdW5jdGlvbiBnZXRUaW1lU3RhbXAoKXt2YXIgbm93PW5ldyBEYXRlO3JldHVybiBub3cuZ2V0VGltZSgpfWZ1bmN0aW9uIGdldGJvdW5kcyhlbCl7ZWw9JChlbCk7dmFyIG9mZnNldD1lbC5vZmZzZXQoKSxib3VuZHM9e2xlZnQ6b2Zmc2V0LmxlZnQscmlnaHQ6b2Zmc2V0LmxlZnQrZWwub3V0ZXJXaWR0aCgpLHRvcDpvZmZzZXQudG9wLGJvdHRvbTpvZmZzZXQudG9wK2VsLm91dGVySGVpZ2h0KCl9O3JldHVybiBib3VuZHN9ZnVuY3Rpb24gaXNJbkJvdW5kcyhwb2ludCxib3VuZHMpe3JldHVybiBwb2ludC54PmJvdW5kcy5sZWZ0JiZwb2ludC54PGJvdW5kcy5yaWdodCYmcG9pbnQueT5ib3VuZHMudG9wJiZwb2ludC55PGJvdW5kcy5ib3R0b219ZnVuY3Rpb24gY29tcGFyZVBvaW50cyhwb2ludEEscG9pbnRCKXtyZXR1cm4gcG9pbnRBLng9PXBvaW50Qi54JiZwb2ludEEueT09cG9pbnRCLnl9dmFyIG9wdGlvbnM9JC5leHRlbmQoe30sb3B0aW9ucyksdXNlVG91Y2hFdmVudHM9U1VQUE9SVFNfVE9VQ0h8fFNVUFBPUlRTX1BPSU5URVJ8fCFvcHRpb25zLmZhbGxiYWNrVG9Nb3VzZUV2ZW50cyxTVEFSVF9FVj11c2VUb3VjaEV2ZW50cz9TVVBQT1JUU19QT0lOVEVSP1NVUFBPUlRTX1BPSU5URVJfSUUxMD9cIk1TUG9pbnRlckRvd25cIjpcInBvaW50ZXJkb3duXCI6XCJ0b3VjaHN0YXJ0XCI6XCJtb3VzZWRvd25cIixNT1ZFX0VWPXVzZVRvdWNoRXZlbnRzP1NVUFBPUlRTX1BPSU5URVI/U1VQUE9SVFNfUE9JTlRFUl9JRTEwP1wiTVNQb2ludGVyTW92ZVwiOlwicG9pbnRlcm1vdmVcIjpcInRvdWNobW92ZVwiOlwibW91c2Vtb3ZlXCIsRU5EX0VWPXVzZVRvdWNoRXZlbnRzP1NVUFBPUlRTX1BPSU5URVI/U1VQUE9SVFNfUE9JTlRFUl9JRTEwP1wiTVNQb2ludGVyVXBcIjpcInBvaW50ZXJ1cFwiOlwidG91Y2hlbmRcIjpcIm1vdXNldXBcIixMRUFWRV9FVj11c2VUb3VjaEV2ZW50cz9TVVBQT1JUU19QT0lOVEVSP1wibW91c2VsZWF2ZVwiOm51bGw6XCJtb3VzZWxlYXZlXCIsQ0FOQ0VMX0VWPVNVUFBPUlRTX1BPSU5URVI/U1VQUE9SVFNfUE9JTlRFUl9JRTEwP1wiTVNQb2ludGVyQ2FuY2VsXCI6XCJwb2ludGVyY2FuY2VsXCI6XCJ0b3VjaGNhbmNlbFwiLGRpc3RhbmNlPTAsZGlyZWN0aW9uPW51bGwsY3VycmVudERpcmVjdGlvbj1udWxsLGR1cmF0aW9uPTAsc3RhcnRUb3VjaGVzRGlzdGFuY2U9MCxlbmRUb3VjaGVzRGlzdGFuY2U9MCxwaW5jaFpvb209MSxwaW5jaERpc3RhbmNlPTAscGluY2hEaXJlY3Rpb249MCxtYXhpbXVtc01hcD1udWxsLCRlbGVtZW50PSQoZWxlbWVudCkscGhhc2U9XCJzdGFydFwiLGZpbmdlckNvdW50PTAsZmluZ2VyRGF0YT17fSxzdGFydFRpbWU9MCxlbmRUaW1lPTAscHJldmlvdXNUb3VjaEVuZFRpbWU9MCxmaW5nZXJDb3VudEF0UmVsZWFzZT0wLGRvdWJsZVRhcFN0YXJ0VGltZT0wLHNpbmdsZVRhcFRpbWVvdXQ9bnVsbCxob2xkVGltZW91dD1udWxsO3RyeXskZWxlbWVudC5iaW5kKFNUQVJUX0VWLHRvdWNoU3RhcnQpLCRlbGVtZW50LmJpbmQoQ0FOQ0VMX0VWLHRvdWNoQ2FuY2VsKX1jYXRjaChlKXskLmVycm9yKFwiZXZlbnRzIG5vdCBzdXBwb3J0ZWQgXCIrU1RBUlRfRVYrXCIsXCIrQ0FOQ0VMX0VWK1wiIG9uIGpRdWVyeS5zd2lwZVwiKX10aGlzLmVuYWJsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRpc2FibGUoKSwkZWxlbWVudC5iaW5kKFNUQVJUX0VWLHRvdWNoU3RhcnQpLCRlbGVtZW50LmJpbmQoQ0FOQ0VMX0VWLHRvdWNoQ2FuY2VsKSwkZWxlbWVudH0sdGhpcy5kaXNhYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIHJlbW92ZUxpc3RlbmVycygpLCRlbGVtZW50fSx0aGlzLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZW1vdmVMaXN0ZW5lcnMoKSwkZWxlbWVudC5kYXRhKFBMVUdJTl9OUyxudWxsKSwkZWxlbWVudD1udWxsfSx0aGlzLm9wdGlvbj1mdW5jdGlvbihwcm9wZXJ0eSx2YWx1ZSl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHByb3BlcnR5KW9wdGlvbnM9JC5leHRlbmQob3B0aW9ucyxwcm9wZXJ0eSk7ZWxzZSBpZih2b2lkIDAhPT1vcHRpb25zW3Byb3BlcnR5XSl7aWYodm9pZCAwPT09dmFsdWUpcmV0dXJuIG9wdGlvbnNbcHJvcGVydHldO29wdGlvbnNbcHJvcGVydHldPXZhbHVlfWVsc2V7aWYoIXByb3BlcnR5KXJldHVybiBvcHRpb25zOyQuZXJyb3IoXCJPcHRpb24gXCIrcHJvcGVydHkrXCIgZG9lcyBub3QgZXhpc3Qgb24galF1ZXJ5LnN3aXBlLm9wdGlvbnNcIil9cmV0dXJuIG51bGx9fXZhciBWRVJTSU9OPVwiMS42LjE4XCIsTEVGVD1cImxlZnRcIixSSUdIVD1cInJpZ2h0XCIsVVA9XCJ1cFwiLERPV049XCJkb3duXCIsSU49XCJpblwiLE9VVD1cIm91dFwiLE5PTkU9XCJub25lXCIsQVVUTz1cImF1dG9cIixTV0lQRT1cInN3aXBlXCIsUElOQ0g9XCJwaW5jaFwiLFRBUD1cInRhcFwiLERPVUJMRV9UQVA9XCJkb3VibGV0YXBcIixMT05HX1RBUD1cImxvbmd0YXBcIixIT1JJWk9OVEFMPVwiaG9yaXpvbnRhbFwiLFZFUlRJQ0FMPVwidmVydGljYWxcIixBTExfRklOR0VSUz1cImFsbFwiLERPVUJMRV9UQVBfVEhSRVNIT0xEPTEwLFBIQVNFX1NUQVJUPVwic3RhcnRcIixQSEFTRV9NT1ZFPVwibW92ZVwiLFBIQVNFX0VORD1cImVuZFwiLFBIQVNFX0NBTkNFTD1cImNhbmNlbFwiLFNVUFBPUlRTX1RPVUNIPVwib250b3VjaHN0YXJ0XCJpbiB3aW5kb3csU1VQUE9SVFNfUE9JTlRFUl9JRTEwPXdpbmRvdy5uYXZpZ2F0b3IubXNQb2ludGVyRW5hYmxlZCYmIXdpbmRvdy5uYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQmJiFTVVBQT1JUU19UT1VDSCxTVVBQT1JUU19QT0lOVEVSPSh3aW5kb3cubmF2aWdhdG9yLnBvaW50ZXJFbmFibGVkfHx3aW5kb3cubmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQpJiYhU1VQUE9SVFNfVE9VQ0gsUExVR0lOX05TPVwiVG91Y2hTd2lwZVwiLGRlZmF1bHRzPXtmaW5nZXJzOjEsdGhyZXNob2xkOjc1LGNhbmNlbFRocmVzaG9sZDpudWxsLHBpbmNoVGhyZXNob2xkOjIwLG1heFRpbWVUaHJlc2hvbGQ6bnVsbCxmaW5nZXJSZWxlYXNlVGhyZXNob2xkOjI1MCxsb25nVGFwVGhyZXNob2xkOjUwMCxkb3VibGVUYXBUaHJlc2hvbGQ6MjAwLHN3aXBlOm51bGwsc3dpcGVMZWZ0Om51bGwsc3dpcGVSaWdodDpudWxsLHN3aXBlVXA6bnVsbCxzd2lwZURvd246bnVsbCxzd2lwZVN0YXR1czpudWxsLHBpbmNoSW46bnVsbCxwaW5jaE91dDpudWxsLHBpbmNoU3RhdHVzOm51bGwsY2xpY2s6bnVsbCx0YXA6bnVsbCxkb3VibGVUYXA6bnVsbCxsb25nVGFwOm51bGwsaG9sZDpudWxsLHRyaWdnZXJPblRvdWNoRW5kOiEwLHRyaWdnZXJPblRvdWNoTGVhdmU6ITEsYWxsb3dQYWdlU2Nyb2xsOlwiYXV0b1wiLGZhbGxiYWNrVG9Nb3VzZUV2ZW50czohMCxleGNsdWRlZEVsZW1lbnRzOlwiLm5vU3dpcGVcIixwcmV2ZW50RGVmYXVsdEV2ZW50czohMH07JC5mbi5zd2lwZT1mdW5jdGlvbihtZXRob2Qpe3ZhciAkdGhpcz0kKHRoaXMpLHBsdWdpbj0kdGhpcy5kYXRhKFBMVUdJTl9OUyk7aWYocGx1Z2luJiZcInN0cmluZ1wiPT10eXBlb2YgbWV0aG9kKXtpZihwbHVnaW5bbWV0aG9kXSlyZXR1cm4gcGx1Z2luW21ldGhvZF0uYXBwbHkocGx1Z2luLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSk7JC5lcnJvcihcIk1ldGhvZCBcIittZXRob2QrXCIgZG9lcyBub3QgZXhpc3Qgb24galF1ZXJ5LnN3aXBlXCIpfWVsc2UgaWYocGx1Z2luJiZcIm9iamVjdFwiPT10eXBlb2YgbWV0aG9kKXBsdWdpbi5vcHRpb24uYXBwbHkocGx1Z2luLGFyZ3VtZW50cyk7ZWxzZSBpZighKHBsdWdpbnx8XCJvYmplY3RcIiE9dHlwZW9mIG1ldGhvZCYmbWV0aG9kKSlyZXR1cm4gaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuICR0aGlzfSwkLmZuLnN3aXBlLnZlcnNpb249VkVSU0lPTiwkLmZuLnN3aXBlLmRlZmF1bHRzPWRlZmF1bHRzLCQuZm4uc3dpcGUucGhhc2VzPXtQSEFTRV9TVEFSVDpQSEFTRV9TVEFSVCxQSEFTRV9NT1ZFOlBIQVNFX01PVkUsUEhBU0VfRU5EOlBIQVNFX0VORCxQSEFTRV9DQU5DRUw6UEhBU0VfQ0FOQ0VMfSwkLmZuLnN3aXBlLmRpcmVjdGlvbnM9e0xFRlQ6TEVGVCxSSUdIVDpSSUdIVCxVUDpVUCxET1dOOkRPV04sSU46SU4sT1VUOk9VVH0sJC5mbi5zd2lwZS5wYWdlU2Nyb2xsPXtOT05FOk5PTkUsSE9SSVpPTlRBTDpIT1JJWk9OVEFMLFZFUlRJQ0FMOlZFUlRJQ0FMLEFVVE86QVVUT30sJC5mbi5zd2lwZS5maW5nZXJzPXtPTkU6MSxUV086MixUSFJFRTozLEZPVVI6NCxGSVZFOjUsQUxMOkFMTF9GSU5HRVJTfX0pO1xuXG5cblxuJChmdW5jdGlvbiAoKSB7XG5cblx0JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkge1xuXHRcdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuXHRcdFx0JCgnLmxvYWRlcicpLmZhZGVPdXQoNjAwKTtcblx0XHR9LCAxNTAwKTtcblx0fSk7XG5cblxuXHQkLmdldCgnaHR0cHM6Ly93ZXgubnovYXBpLzMvdGlja2VyL2J0Y191c2QtZXRoX3VzZCcsIGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRcblx0XHQkKCcjYnRjX3VzZCcpLmh0bWwoTWF0aC5mbG9vcihkYXRhLmJ0Y191c2QuYXZnKSk7XG5cdFx0JCgnI2V0aF91c2QnKS5odG1sKE1hdGguZmxvb3IoZGF0YS5ldGhfdXNkLmF2ZykpO1xuXG5cdH0sICdqc29ucCcpO1xuXG5cdCQoJy5ibG9ja19fYnRuJykuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdCQodGhpcykuZmluZCgnLnN0b3JlX190b29sa2l0JykuZmFkZUluKDMwMCkuZGVsYXkoMzAwMCkuZmFkZU91dCg2MDApO1xuXHR9KTtcblx0XG5cdCQoJy5rYWthbycpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0JCh0aGlzKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG5cdH0pO1xuXG5cdC8vIG9uIHN3aXBlXG5cdFxuXHR2YXIgcCA9IDA7XG5cdCQoJy5jYXJkc19pbm5lcl9fY2FyZCcpLnN3aXBlKHtcblx0ICBzd2lwZTogZnVuY3Rpb24oZXZlbnQsIGRpcmVjdGlvbiwgZGlzdGFuY2UsIGR1cmF0aW9uLCBmaW5nZXJDb3VudCwgZmluZ2VyRGF0YSl7XG5cdCAgICBpZihkaXJlY3Rpb24gPT0gJ2xlZnQnKXtcblx0ICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYW5pbWF0ZScpLmF0dHIoJ2RhdGEtY2FyZC1pZCcsICcwJykuc2libGluZ3MoKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdCAgICAgICAgdmFyIGkgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtY2FyZC1pZCcpO1xuXHQgICAgICAgIGkrK1xuXHQgICAgICAgICQodGhpcykuYXR0cignZGF0YS1jYXJkLWlkJywgaSk7XG5cdCAgICAgIH0pO1xuXHRcblx0ICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuXHQgICAgICAgICQoJy5jYXJkc19pbm5lcl9fY2FyZCcpLnJlbW92ZUNsYXNzKCdhbmltYXRlJyk7XG5cdCAgICAgIH0sIDIwMCk7XG5cdCAgICAgIFxuXHQgICAgICBcblx0ICAgICAgXG5cdCAgICAgIGlmKHAgPCAzKXtcblx0ICAgICAgICAkKCcucG9pbnRzJykuZmluZCgnLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKS5uZXh0KCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuXHQgICAgICAgIHArKztcblx0ICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAkKCcucG9pbnRzJykuZmluZCgnLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuXHQgICAgICAgICQoJy5wb2ludHMnKS5maW5kKCcuZmlyc3QnKS5hZGRDbGFzcygnYWN0aXZlJykgXG5cdCAgICAgICAgcCA9IDBcblx0ICAgICAgfVxuXHQgICAgfVxuXHQgIH0sXG5cdCAgYWxsb3dQYWdlU2Nyb2xsOiAnYXV0bycsXG5cdH0pO1xuXHRcblx0XG5cdC8vIG9uIGNsaWNrIHRvIHBvaW50c1xuXHRcblx0dmFyIHNpYkkgPSBbMCwgMSwgMl07XG5cdFxuXHQkKCcucG9pbnRzX3BvaW50Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcblx0ICB2YXIgaSA9IDA7XG5cdCAgcCA9IHBhcnNlRmxvYXQoJCh0aGlzKS5hdHRyKCdkYXRhLWlkJykpOyAgXG5cdCAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0ICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcblx0ICB2YXIgaW5kZXggPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaW5kZXgnKTtcblx0ICAkKCcuY2FyZHMnKS5maW5kKCcuJyArIGluZGV4KS5hZGRDbGFzcygnYW5pbWF0ZScpLmF0dHIoJ2RhdGEtY2FyZC1pZCcsICczJykuc2libGluZ3MoKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdCAgICBpZihpICE9IDMpe1xuXHQgICAgICAkKHRoaXMpLmF0dHIoJ2RhdGEtY2FyZC1pZCcsIHNpYklbaV0pXG5cdCAgICAgIGkrK1xuXHQgICAgfWVsc2V7XG5cdCAgICAgIGkgPSAwO1xuXHQgICAgICAkKHRoaXMpLmF0dHIoJ2RhdGEtY2FyZC1pZCcsIHNpYklbaV0pXG5cdCAgICAgIGkrK1xuXHQgICAgfVxuXHQgIH0pXG5cdCAgXG5cdCAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuXHQgICAgJCgnLmNhcmRzJykuZmluZCgnLicgKyBpbmRleCkucmVtb3ZlQ2xhc3MoJ2FuaW1hdGUnKVxuXHQgIH0sIDIwMClcblx0fSk7XG5cdFxuXHRcblx0Ly8gYXV0b3NsaWRlXG5cdFxuXHR2YXIgY2hhbmdlU2xpZGUgPSBudWxsO1xuXHRcblx0ZnVuY3Rpb24gYXV0b1NsaWRlICgpIHtcblx0ICBjaGFuZ2VTbGlkZSA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7XG5cdFxuXHQgICAgJCgnLmNhcmRzJykuZmluZCgnW2RhdGEtY2FyZC1pZD1cIjNcIl0nKS5hZGRDbGFzcygnYW5pbWF0ZScpLmF0dHIoJ2RhdGEtY2FyZC1pZCcsICcwJykuc2libGluZ3MoKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdCAgICAgIHZhciBpID0gJCh0aGlzKS5hdHRyKCdkYXRhLWNhcmQtaWQnKTtcblx0ICAgICAgaSsrXG5cdCAgICAgICQodGhpcykuYXR0cignZGF0YS1jYXJkLWlkJywgaSk7XG5cdCAgICB9KTtcblx0XG5cdCAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdCAgICAgICQoJy5jYXJkc19pbm5lcl9fY2FyZCcpLnJlbW92ZUNsYXNzKCdhbmltYXRlJyk7XG5cdCAgICB9LCAyMDApO1xuXHQgICAgXG5cdCAgICBpZihwIDwgMyl7XG5cdCAgICAgICQoJy5wb2ludHMnKS5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpLm5leHQoKS5hZGRDbGFzcygnYWN0aXZlJyk7XG5cdCAgICAgIHArKztcblx0ICAgIH0gZWxzZSB7XG5cdCAgICAgICQoJy5wb2ludHMnKS5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG5cdCAgICAgICQoJy5wb2ludHMnKS5maW5kKCcuZmlyc3QnKS5hZGRDbGFzcygnYWN0aXZlJykgXG5cdCAgICAgIHAgPSAwXG5cdCAgICB9XG5cdCAgfSwgNTAwMClcblx0fTtcblx0XG5cdGF1dG9TbGlkZSgpO1xuXHRcblx0JCgnLmNhcmRzX2lubmVyX19jYXJkLCAucG9pbnRzX3BvaW50JykuaG92ZXIoZnVuY3Rpb24oKSB7XG5cdCAgY2xlYXJJbnRlcnZhbChjaGFuZ2VTbGlkZSlcblx0fSwgZnVuY3Rpb24oKSB7XG5cdCAgYXV0b1NsaWRlKCk7XG5cdH0pO1xuXG5cdCQoJy5tZW1iZXJzX19zbGlkZXInKS5zbGljayh7XG5cdFx0aW5maW5pdGU6IHRydWUsXG5cdFx0c2xpZGVzVG9TaG93OiAxLFxuXHRcdHNsaWRlc1RvU2Nyb2xsOiAxLFxuXHRcdGF1dG9wbGF5OiB0cnVlLFxuXHRcdGF1dG9wbGF5U3BlZWQ6IDMwMDAsXG5cdFx0ZmFkZTogdHJ1ZSxcblx0XHRkb3RzOiB0cnVlLFxuXHRcdHBhdXNlT25Eb3RzSG92ZXI6IHRydWUsXG5cdH0pXG5cdFxuXHQkKCcuY2Fyb3VzZWwnKS5zbGljayh7XG5cdFx0aW5maW5pdGU6IHRydWUsXG5cdFx0c2xpZGVzVG9TaG93OiA0LFxuXHRcdHNsaWRlc1RvU2Nyb2xsOiAxLFxuXHRcdGF1dG9wbGF5OiB0cnVlLFxuXHRcdGF1dG9wbGF5U3BlZWQ6IDMwMDAsXG5cdFx0cGF1c2VPbkRvdHNIb3ZlcjogdHJ1ZSxcblx0XHRyZXNwb25zaXZlOiBbXG5cdCAgICB7XG5cdCAgICAgIGJyZWFrcG9pbnQ6IDgyNCxcblx0ICAgICAgc2V0dGluZ3M6IHtcblx0ICAgICAgICBzbGlkZXNUb1Nob3c6IDIsXG5cdCAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDIsXG5cdCAgICAgICAgaW5maW5pdGU6IHRydWUsXG5cdCAgICAgIH1cblx0ICAgIH0sXG5cdCAgICB7XG5cdCAgICAgIGJyZWFrcG9pbnQ6IDYwMCxcblx0ICAgICAgc2V0dGluZ3M6IHtcblx0ICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXG5cdCAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG5cdCAgICAgICAgY2VudGVyTW9kZTogdHJ1ZSxcblx0ICAgICAgICBmYWRlOiB0cnVlLFxuXHQgICAgICB9XG5cdCAgICB9XVxuXHR9KTtcblxuXHQvL21lbnUgbmF2YmFyXG5cblx0JCgnLmJ0LW1lbnUnKS5jbGljayhmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIFx0JCh0aGlzKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgXHQkKCcuaGVhZGVyX19jb250YWluZXInKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgXHQkKCcuaGVhZGVyX19uYXYnKS50b2dnbGVDbGFzcygnb3BlbicpO1xuXHR9KTtcblxuXHQvLyByb2FkbWFwXG5cblx0JCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpe1xuXHRcdGlmICggJCh3aW5kb3cpLnNjcm9sbFRvcCgpID4gNDMgKSB7XG5cdFx0XHQkKCcuaGVhZGVyX19jb250YWluZXInKS5hZGRDbGFzcygnc2Nyb2xsJyk7XG5cdFx0XHQkKCdmb290ZXIuYmxvY2snKS5mYWRlT3V0KCcyMDAnKTtcblx0XHR9ZWxzZXtcblx0XHRcdCQoJy5oZWFkZXJfX2NvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdzY3JvbGwnKVxuXHRcdFx0JCgnZm9vdGVyLmJsb2NrJykuZmFkZUluKCc0MDAnKTtcblx0XHR9XG5cblx0XHR2YXIgc2IgPSAkKHRoaXMpLnNjcm9sbFRvcCgpICsgJCh0aGlzKS5oZWlnaHQoKTtcblx0XHRcblx0XHR0cnkge1xuXHRcdFx0dmFyIG1wID0gJCgnLnJvYWRtYXAnKS5vZmZzZXQoKS50b3AgKyAkKCcucm9hZG1hcCcpLmhlaWdodCgpIC8gMjtcblx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdGNvbnNvbGUubG9nKGUpO1xuXHRcdH1cblxuXHRcdGlmKHNiID4gbXApe1xuXHRcdFx0cHJvZ3Jlc3MucGxheSgpXG5cdFx0fVxuXHR9KTtcblxuXHR2YXIgcmVjdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucHJvZ3Jlc3NfX3JlY3QnKVxuXHR2YXIgcHJvZ3Jlc3MgPSBhbmltZSh7XG5cdFx0ZGlyZWN0aW9uOiAncmV2ZXJzZScsXG5cdFx0dGFyZ2V0czogcmVjdHMsXG5cdFx0d2lkdGg6IDAsXG5cdFx0ZWFzaW5nOiAnbGluZWFyJyxcblx0fSlcblxuXHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0cHJvZ3Jlc3MucGF1c2UoKTsgXG5cdH0sIDUwKVxuXG5cblx0JCgnLnJvYWRtYXBfX3Jlc3BvbnNpdmUnKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuXG5cdFx0aWYoJCgnLnJvYWRtYXBfX3Jlc3BvbnNpdmVfX2J1dHRvbicpLmlzKCcuYWN0aXZlJykpe1xuXHRcdFx0JCgnLnJvYWRtYXBfX3Jlc3BvbnNpdmVfX2NvbnRhaW5lcicpLnNsaWRlVG9nZ2xlKDYwMCk7XG5cdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCQoJy5ybV9fYXJyb3cnKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG5cdFx0XHRcdCQoJy5yb2FkbWFwX19yZXNwb25zaXZlX19idXR0b24nKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG5cdFx0XHR9LCA2MDApXG5cdFx0fWVsc2V7XG5cdFx0XHQkKCcucm1fX2Fycm93JykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuXHRcdFx0JCgnLnJvYWRtYXBfX3Jlc3BvbnNpdmVfX2J1dHRvbicpLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKTtcblx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdFx0JCgnLnJvYWRtYXBfX3Jlc3BvbnNpdmVfX2NvbnRhaW5lcicpLnNsaWRlVG9nZ2xlKDYwMCk7XG5cdFx0XHR9LCAyMDApXG5cdFx0fVxuXHR9KTtcblxuXHQvLyBjb3VudGRvd25cblxuXG5cdHZhciBzZWNvbmQgPSAxMDAwLFxuXHRcdG1pbnV0ZSA9IHNlY29uZCAqIDYwLFxuXHRcdGhvdXIgPSBtaW51dGUgKiA2MCxcblx0XHRkYXkgPSBob3VyICogMjQ7XG5cblx0dmFyIGNvdW50RG93biA9IG5ldyBEYXRlKCdKdWwyNiwgMjAxOCAwMDowMDowMCBVVEMnKSxcblx0eCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIG5vdyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuXHRcdGRpc3RhbmNlID0gY291bnREb3duIC0gbm93O1xuXHRcdHZhciBhcnIgPSBbTWF0aC5mbG9vcihkaXN0YW5jZSAvIChkYXkpKSwgTWF0aC5mbG9vcigoZGlzdGFuY2UgJSAoZGF5KSkgLyAoaG91cikpLCBNYXRoLmZsb29yKChkaXN0YW5jZSAlIChob3VyKSkgLyAobWludXRlKSksIE1hdGguZmxvb3IoKGRpc3RhbmNlICUgKG1pbnV0ZSkpIC8gc2Vjb25kKV1cblxuXHRcdGZvciAodmFyIGkgPSBhcnIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcblx0XHRcdGlmIChhcnJbaV0gPCAxMCkge1xuXHRcdFx0XHRhcnJbaV0gPSAnMCcgKyBhcnJbaV1cblx0XHRcdH1cblx0XHR9XG5cdFx0XG5cdFx0JCgnI2RheXMnKS5odG1sKGFyclswXSksXG5cdFx0JCgnI2hvdXJzJykuaHRtbChhcnJbMV0pLFxuXHRcdCQoJyNtaW51dGVzJykuaHRtbChhcnJbMl0pLFxuXHRcdCQoJyNzZWNvbmRzJykuaHRtbChhcnJbM10pO1xuXG5cdFx0aWYgKGRpc3RhbmNlIDwgMCkge1xuXHRcdCBjbGVhckludGVydmFsKHgpO1xuXHRcdH1cblxuXHR9LCBzZWNvbmQpXG5cblxuXHQvLyBjYWxjdWxhdG9yXG5cblx0dmFyIHByaWNlID0gMC4xMjUyMjNcblxuXHQkKCcjaW5wdXQnKS5rZXl1cChmdW5jdGlvbihldmVudCkge1xuXHRcdHZhciByZXMgPSBwYXJzZUZsb2F0KCQoJyNpbnB1dCcpLnZhbCgpKSAvIHByaWNlXG5cdFx0JCgnI291dHB1dCcpLnZhbChyZXMudG9GaXhlZCgyKSlcblx0fSk7XG5cblxuXHQvLyBwb3AtdXAgdmlkZW9cblxuXHR2YXIgc3RvcFZpZGVvID0gZnVuY3Rpb24ocGxheWVyKSB7XG4gICAgdmFyIHZpZFNyYyA9IHBsYXllci5wcm9wKCdzcmMnKTtcblx0ICAgIHBsYXllci5wcm9wKCdzcmMnLCAnJyk7IC8vIHRvIGZvcmNlIGl0IHRvIHBhdXNlXG5cdCAgICBwbGF5ZXIucHJvcCgnc3JjJywgdmlkU3JjKTtcblx0fTtcblxuXHQkKCcucm9zZV9fcGxheWJ0bicpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHQkKCcucG9wLXVwJykuZmFkZUluKDQwMCk7XG5cdH0pO1xuXG5cdCQoJy5jbG9zZS1idG4nKS5jbGljayhmdW5jdGlvbigpIHtcblx0XHQkKCcucG9wLXVwJykuZmFkZU91dCg0MDApO1xuXHRcdHN0b3BWaWRlbygkKCcjcXZpZGVvJykpXG5cdH0pO1xuXHQkKCcucG9wLWxheW91dCcpLmNsaWNrKGZ1bmN0aW9uKCl7XG5cdFx0JCgnLnBvcC11cCcpLmZhZGVPdXQoNDAwKTtcblx0XHRzdG9wVmlkZW8oJCgnI3F2aWRlbycpKVxuXHR9KVxuXG5cblx0Ly9zY3JvbGxUb1xuXG5cdCQoJ2FbaHJlZio9XCIjXCJdJylcbiAgICAubm90KCdbaHJlZj1cIiNcIl0nKVxuICAgIC5ub3QoJ1tocmVmPVwiIzBcIl0nKVxuICAgIC5jbGljayhmdW5jdGlvbihldmVudCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgJycpID09IHRoaXMucGF0aG5hbWUucmVwbGFjZSgvXlxcLy8sICcnKSAmJlxuICAgICAgICAgICAgbG9jYXRpb24uaG9zdG5hbWUgPT0gdGhpcy5ob3N0bmFtZVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSAkKHRoaXMuaGFzaCk7XG4gICAgICAgICAgICB0YXJnZXQgPSB0YXJnZXQubGVuZ3RoID8gdGFyZ2V0IDogJCgnW25hbWU9JyArIHRoaXMuaGFzaC5zbGljZSgxKSArICddJyk7XG4gICAgICAgICAgICBpZiAodGFyZ2V0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGxUb3A6IHRhcmdldC5vZmZzZXQoKS50b3BcbiAgICAgICAgICAgICAgICB9LCAxMDAwLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICR0YXJnZXQgPSAkKHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgICR0YXJnZXQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCR0YXJnZXQuaXMoXCI6Zm9jdXNcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR0YXJnZXQuYXR0cigndGFiaW5kZXgnLCAnLTEnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICR0YXJnZXQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG5cbiAgICAvLyBmYXEgYWNjb3JkaW9uXG5cbiAgICAkKCcuZmFxX19pdGVtJykuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBcdCQodGhpcylcbiAgICBcdC50b2dnbGVDbGFzcygnYWN0aXZlJylcblx0XHQuZmluZCgnLml0ZW1fX3AnKVxuXHRcdC5zbGlkZVRvZ2dsZSg0MDApXG5cdFx0LnBhcmVudCgpXG5cdFx0LnNpYmxpbmdzKClcblx0XHQucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG5cdFx0LmZpbmQoJy5pdGVtX19wJylcblx0XHQuc2xpZGVVcCg0MDApO1xuICAgIH0pO1xuXG4gICAgdmFyIGFuaW1DeWNsZXMgPSBbYW5pbWUoe1xuICAgICAgICB0YXJnZXRzOiAnI2ZkT3ZhbC01LUNvcHktNCcsXG4gICAgICAgIHI6IFtmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdyJykgKiAxLjI7XG4gICAgICAgIH1dLFxuICAgICAgICBlYXNpbmc6ICdlYXNlSW5DdWJpYycsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICBkaXJlY3Rpb246ICdhbHRlcm5hdGUnLFxuICAgICAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgfSksIGFuaW1lKHtcbiAgICAgICAgdGFyZ2V0czogJyNmZE92YWwtNS1Db3B5LTYnLFxuICAgICAgICByOiBbZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmdldEF0dHJpYnV0ZSgncicpIC8gMS4yO1xuICAgICAgICB9XSxcbiAgICAgICAgZWFzaW5nOiAnZWFzZUluQ3ViaWMnLFxuICAgICAgICBkdXJhdGlvbjogMjAwMCxcbiAgICAgICAgbG9vcDogdHJ1ZSxcbiAgICAgICAgZGlyZWN0aW9uOiAnYWx0ZXJuYXRlJyxcbiAgICAgICAgYXV0b3BsYXk6IGZhbHNlLFxuICAgIH0pLCBhbmltZSh7XG4gICAgICAgIHRhcmdldHM6ICcjZmRPdmFsLTUtQ29weS01JyxcbiAgICAgICAgcjogW2Z1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5nZXRBdHRyaWJ1dGUoJ3InKSAvIDEuMjtcbiAgICAgICAgfV0sXG4gICAgICAgIGVhc2luZzogJ2Vhc2VJbkN1YmljJyxcbiAgICAgICAgZHVyYXRpb246IDIwMDAsXG4gICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgIGRpcmVjdGlvbjogJ2FsdGVybmF0ZScsXG4gICAgICAgIGF1dG9wbGF5OiBmYWxzZSxcbiAgICB9KSwgYW5pbWUoe1xuICAgICAgICB0YXJnZXRzOiAnI2ZkT3ZhbC01LUNvcHktNycsXG4gICAgICAgIHI6IFtmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdyJykgKiAxLjQ7XG4gICAgICAgIH1dLFxuICAgICAgICBlYXNpbmc6ICdlYXNlSW5DdWJpYycsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICBkaXJlY3Rpb246ICdhbHRlcm5hdGUnLFxuICAgICAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgfSldXG4gICAgXG4gICAgdmFyIGFuaW1DeWNsZXMxID0gW2FuaW1lKHtcbiAgICAgICAgdGFyZ2V0czogJyN0T3ZhbC01LUNvcHktMicsXG4gICAgICAgIHI6IFtmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdyJykgLyAxLjI7XG4gICAgICAgIH1dLFxuICAgICAgICBlYXNpbmc6ICdlYXNlSW5DdWJpYycsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICBkaXJlY3Rpb246ICdhbHRlcm5hdGUnLFxuICAgICAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgfSksIGFuaW1lKHtcbiAgICAgICAgdGFyZ2V0czogJyN0T3ZhbC01JyxcbiAgICAgICAgcjogW2Z1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5nZXRBdHRyaWJ1dGUoJ3InKSAqIDEuMTtcbiAgICAgICAgfV0sXG4gICAgICAgIGVhc2luZzogJ2Vhc2VJbkN1YmljJyxcbiAgICAgICAgZHVyYXRpb246IDIwMDAsXG4gICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgIGRpcmVjdGlvbjogJ2FsdGVybmF0ZScsXG4gICAgICAgIGF1dG9wbGF5OiBmYWxzZSxcbiAgICB9KSwgYW5pbWUoe1xuICAgICAgICB0YXJnZXRzOiAnI3RPdmFsLTUtQ29weScsXG4gICAgICAgIHI6IFtmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdyJykgLyAxLjI7XG4gICAgICAgIH1dLFxuICAgICAgICBlYXNpbmc6ICdlYXNlSW5DdWJpYycsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICBkaXJlY3Rpb246ICdhbHRlcm5hdGUnLFxuICAgICAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgfSksIGFuaW1lKHtcbiAgICAgICAgdGFyZ2V0czogJyN0T3ZhbC01LUNvcHktMycsXG4gICAgICAgIHI6IFtmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdyJykgLyAxLjI7XG4gICAgICAgIH1dLFxuICAgICAgICBlYXNpbmc6ICdlYXNlSW5DdWJpYycsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICBkaXJlY3Rpb246ICdhbHRlcm5hdGUnLFxuICAgICAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgfSldXG4gICAgXG4gICAgdmFyIGkgPSAwO1xuICAgIFxuICAgIHZhciBjID0gMFxuICAgIFxuICAgIHZhciBmaXJzdERpYXJncmFtczEgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICBpZihjIDw9IDMpe1xuICAgICAgICBhbmltQ3ljbGVzMVtpXS5wbGF5KClcbiAgICAgICAgYysrXG4gICAgICB9ZWxzZXtcbiAgICAgICAgY2xlYXJJbnRlcnZhbChmaXJzdERpYXJncmFtczEpXG4gICAgICB9XG4gICAgICAgIFxuICAgIH0sIDcwMCk7XG4gICAgXG4gICAgdmFyIGZpcnN0RGlhcmdyYW1zID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgaWYoaSA8PSAzKXtcbiAgICAgICAgYW5pbUN5Y2xlc1tpXS5wbGF5KClcbiAgICAgICAgaSsrXG4gICAgICB9ZWxzZXtcbiAgICAgICAgY2xlYXJJbnRlcnZhbChmaXJzdERpYXJncmFtcylcbiAgICAgIH1cbiAgICAgICAgXG4gICAgfSwgOTAwKVxuICAgIFxuICAgIC8vIGZvciAodmFyIGkgPSBhbmltQ3ljbGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgLy8gICB2YXIgc2VjID0gaSAqIDEwMDA7XG4gICAgLy8gICBjb25zb2xlLmxvZyhhbmltQ3ljbGVzW2ldKVxuICAgIC8vICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgIGFuaW1DeWNsZXNbaV0ucGxheSgpXG4gICAgLy8gICB9LCBzZWMpXG4gICAgLy8gfVxuXHRcbn0pIl19
